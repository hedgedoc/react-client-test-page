{"version":3,"sources":["../node_modules/d3-graphviz/node_modules/d3-zoom/src/constant.js","../node_modules/d3-graphviz/node_modules/d3-zoom/src/event.js","../node_modules/d3-graphviz/node_modules/d3-zoom/src/transform.js","../node_modules/d3-graphviz/node_modules/d3-zoom/src/noevent.js","../node_modules/d3-graphviz/node_modules/d3-zoom/src/zoom.js","../../src/element.js","../../src/utils.js","../../src/zoom.js","../../src/tweening.js","../../src/data.js","../../src/render.js","../../src/svg.js","../../src/dot.js","../../src/renderDot.js","../../src/transition.js","../../src/options.js","../../src/width.js","../../src/height.js","../../src/scale.js","../../src/fit.js","../../src/attributer.js","../../src/engine.js","../../src/images.js","../../src/keyMode.js","../../src/fade.js","../../src/tweenPaths.js","../../src/tweenShapes.js","../../src/convertEqualSidedPolygons.js","../../src/tweenPrecision.js","../../src/growEnteringEdges.js","../../src/on.js","../../src/onerror.js","../../src/logEvents.js","../../src/destroy.js","../../src/geometry.js","../../src/drawEdge.js","../../src/drawNode.js","../../src/workerCode.js","../../src/graphviz.js","../../src/selection/graphviz.js","../../src/selection/selectWithoutDataPropagation.js","../../src/selection/index.js"],"names":["x","ZoomEvent","target","type","transform","this","Transform","k","y","prototype","constructor","scale","translate","apply","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","range","map","rescaleY","toString","identity","node","__zoom","nopropagation","event","stopImmediatePropagation","preventDefault","defaultFilter","button","defaultExtent","w","h","e","SVGElement","ownerSVGElement","width","baseVal","value","height","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable","defaultConstrain","extent","translateExtent","dx0","dx1","dy0","dy1","Math","min","max","touchstarting","touchending","filter","constrain","wheelDelta","touchable","scaleExtent","Infinity","duration","interpolate","interpolateZoom","gestures","listeners","dispatch","touchDelay","clickDistance2","zoom","selection","property","on","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","style","p0","p1","centroid","schedule","transition","center","gesture","arguments","start","end","tween","that","args","g","p","a","b","i","concat","t","l","n","length","Gesture","index","active","pow","mouse","wheel","clearTimeout","interrupt","noevent","setTimeout","wheelidled","v","select","view","mousemoved","mouseupped","x0","clientX","y0","clientY","dragDisable","moved","dx","dy","dragEnable","t0","k1","shiftKey","t1","call","started","touches","changedTouches","touch","identifier","touch0","touch1","l0","l1","dp","dl","sqrt","collection","each","scaleBy","scaleTo","k0","translateBy","translateTo","push","emit","key","splice","customEvent","_","constant","clickDistance","datum","tag","element","attributes","attribute","name","points","ymin","ymax","matrix","f","cy","xmin","xmax","bbox","d","extractElementData","d3","children","childData","extractAllElementsData","data","document","elementNode","createElement","Object","attributeName","attributeValue","parent","newElementNode","createElementWithAttributes","newElement","insertElementData","insertAllElementsData","childrenEnter","childrenExit","childTagIndexes","childTag","childIndex","attributeElement","currentAttributes","currentAttribute","namespaceURIParts","namespace","insertChildren","_options","createZoomBehavior","svg","root","zoomBehavior","translateZoomBehaviorTransform","zoomTransform","oldTranslation","oldScale","newTranslation","newScale","_zoomSelection","getTranslatedZoomTransform","zoomIdentity","_zoomBehavior","pointInterpolators","path0","path1","n0","n1","distances","dt","precisionIsRelative","precision","_data","isEdgeElementParent","getEdgeGroup","render","bind","timeout","_render","transitionInstance","fade","tweenPaths","tweenShapes","convertEqualSidedPolygons","growEnteringEdges","attributer","graphvizInstance","childEnter","childElementsEnter","options","convertShape","convertPrevShape","nodeName","prevPoints","prevData","nPrevPoints","prevPathData","pathElement","replaceElement","elementTransition","totalLength","isEdgeElement","edgePath","p2","angle1","angle","tweenThisPath","pathTween","onEnd","interpolateTransformSvg","nodes","jobs","callback","originalData","newData","shallowCopyObject","newAttributes","originalAttributes","newPointsString","guideData","pointStrings","pointsString","normPoints","xy","x1","y1","x2","newPointStrings","cx","rx","ry","sx","sy","cosA","sinA","roundTo2Decimals","commands","arr","graphviz","graphvizSync","graphviz1","_worker","vizURL","window","postMessage","dot","engine","vizOptions","svgDoc","layoutSync","src","error","message","images","layoutDone","keyMode","tweenPrecision","includes","split","tweenPrecisionIsRelative","dictionary","prevDictionary","_dictionary","nodeDictionary","prevNodeDictionary","_nodeDictionary","title","id","parentData","prevDatum","convertToPathData","attribute_d","oldNode","pathTweenPoints","setKey","setId","addToDictionary","calculateAlternativeShapeData","calculatePathTweenPoints","postProcessDataPass1Local","nodeId","path","child","getEdgeTitle","nodeIds","startNodeId","startNode","prevStartNode","j","startShapes","startShape","prevStartShapes","prevStartShape","addToNodeDictionary","extractGrowingEdgesData","postProcessDataPass2Global","newDoc","doc","parser","_queue","job","d3_active","option","_keyModes","has","Error","Date","times","eventTypes","maxEventTypeLength","eventType","enable","seqNo","string","format","repeat","expectedDelay","expectedDuration","actualDelay","actualDuration","console","_selection","newEdge","graph0","edgeData","createEdge","_updateEdge","y2","edge","_drawnEdge","_moveEdge","shortening","arrowHeadLength","arrowHeadWidth","margin","arrowHeadPoints","line","arrowHead","d3_path","rotate","allPoints","pointsAttr","graph0Datum","_extractData","attributesString","dotSrc","newNode","nodeData","createNode","_updateNode","_drawnNode","_moveNode","subParent","svgElements","text","svgElement","translatePointsAttribute","translateDAttribute","ga","self","port","hpccWasm","importScripts","workerCodeBody","useWorker","useSharedWorker","zoomScaleExtent","zoomTranslateExtent","fit","Worker","SharedWorker","vizScript","url","btoa","sharedWorkerCode","close","blob","Blob","workerCode","blobURL","terminate","Set","initViz","Graphviz","size","querySelector","addImage","resetZoom","zoomSelection","layout","renderDot","onerror","logEvents","destroy","drawEdge","updateDrawnEdge","moveDrawnEdgeEndPoint","insertDrawnEdge","removeDrawnEdge"],"mappings":"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","file":"static/js/19.6aafe895.chunk.js","sourcesContent":["export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","import * as d3 from \"d3-selection\";\n\nexport function extractElementData(element) {\n\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n    if (attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[i];\n            var name = attribute.name;\n            var value = attribute.value;\n            datum.attributes[name] = value;\n        }\n    }\n    var transform = element.node().transform;\n    if (transform && transform.baseVal.numberOfItems != 0) {\n        var matrix = transform.baseVal.consolidate().matrix;\n        datum.translation = {x: matrix.e, y: matrix.f};\n        datum.scale = matrix.a;\n    }\n    if (tag == 'ellipse') {\n        datum.center = {\n            x: datum.attributes.cx,\n            y: datum.attributes.cy,\n        };\n    }\n    if (tag == 'polygon') {\n        var points = element.attr('points').split(' ');\n        var x = points.map(function(p) {return p.split(',')[0]});\n        var y = points.map(function(p) {return p.split(',')[1]});\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin,\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2,\n        };\n    }\n    if (tag == 'path') {\n        var d = element.attr('d');\n        var points = d.split(/[A-Z ]/);\n        points.shift();\n        var x = points.map(function(p) {return +p.split(',')[0]});\n        var y = points.map(function(p) {return +p.split(',')[1]});\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin,\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2,\n        };\n        datum.totalLength = element.node().getTotalLength();\n    }\n    if (tag == 'text') {\n        datum.center = {\n            x: element.attr('x'),\n            y: element.attr('y'),\n        };\n    }\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    return datum\n}\n\nexport function extractAllElementsData(element) {\n\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n        var childData = extractAllElementsData(d3.select(this));\n        childData.parent = datum;\n        datum.children.push(childData);\n    });\n    return datum;\n}\n\nexport function createElement(data) {\n\n    if (data.tag == '#text') {\n        return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n        return document.createComment(data.comment);\n    } else {\n        return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n}\n\nexport function createElementWithAttributes(data) {\n\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    for (var attributeName of Object.keys(attributes)) {\n        var attributeValue = attributes[attributeName];\n        element.attr(attributeName, attributeValue);\n    }\n    return elementNode;\n}\n\nexport function replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n        return newElementNode;\n    }, function () {\n        return element.node();\n    });\n    element.remove();\n    return newElement;\n}\n\nexport function insertElementData(element, datum) {\n    element.datum(datum);\n    element.data([datum], function (d) {\n        return d.key;\n    });\n}\n\nexport function insertAllElementsData(element, datum) {\n    insertElementData(element, datum);\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function (d, i) {\n        insertAllElementsData(d3.select(this), datum.children[i]);\n    });\n}\n\nfunction insertChildren(element, index) {\n    var children = element.selectAll(function () {\n        return element.node().childNodes;\n    });\n\n    children = children\n      .data(function (d) {\n          return d.children;\n      }, function (d) {\n        return d.tag + '-' + index;\n      });\n    var childrenEnter = children\n      .enter()\n      .append(function(d) {\n          return createElement(d);\n      });\n\n    var childrenExit = children\n      .exit();\n    childrenExit = childrenExit\n        .remove()\n    children = childrenEnter\n        .merge(children);\n    var childTagIndexes = {};\n    children.each(function(childData) {\n        var childTag = childData.tag;\n        if (childTagIndexes[childTag] == null) {\n          childTagIndexes[childTag] = 0;\n        }\n        var childIndex = childTagIndexes[childTag]++;\n        attributeElement.call(this, childData, childIndex);\n    });\n}\n\nexport function attributeElement(data, index=0) {\n    var element = d3.select(this);\n    var tag = data.tag;\n    var attributes = data.attributes;\n    var currentAttributes = element.node().attributes;\n    if (currentAttributes) {\n        for (var i = 0; i < currentAttributes.length; i++) {\n            var currentAttribute = currentAttributes[i];\n            var name = currentAttribute.name;\n            if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                name = namespace + ':' + name;\n            }\n            if (!(name in attributes)) {\n                attributes[name] = null;\n            }\n        }\n    }\n    for (var attributeName of Object.keys(attributes)) {\n        element\n            .attr(attributeName, attributes[attributeName]);\n    }\n    if (data.text) {\n        element\n            .text(data.text);\n    }\n    insertChildren(element, index);\n}\n","export function shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n}\n\nexport function roundTo2Decimals(x) {\n    return Math.round(x * 100.0) / 100.0\n}\n","import * as d3 from \"d3-selection\";\nimport {zoom, zoomTransform, zoomIdentity} from \"d3-zoom\";\nimport {interpolate} from \"d3-interpolate\";\n\nexport default function(enable) {\n\n    this._options.zoom = enable;\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    return this;\n}\n\nexport function createZoomBehavior() {\n\n    function zoomed() {\n        var g = d3.select(svg.node().querySelector(\"g\"));\n        g.attr('transform', d3.event.transform);\n    }\n\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n    if (svg.size() == 0) {\n        return this;\n    }\n    this._zoomSelection = svg;\n    var zoomBehavior = zoom()\n        .scaleExtent(this._options.zoomScaleExtent)\n        .translateExtent(this._options.zoomTranslateExtent)\n        .interpolate(interpolate)\n        .on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n    if (!this._active) {\n        translateZoomBehaviorTransform.call(this, g);\n    }\n    this._originalTransform = zoomTransform(svg.node());\n\n    return this;\n};\n\nexport function getTranslatedZoomTransform(selection) {\n\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var oldScale = this._scale;\n    var newTranslation = selection.datum().translation;\n    var newScale = selection.datum().scale;\n    var t = zoomTransform(this._zoomSelection.node());\n    if (oldTranslation) {\n        t = t.scale(1 / oldScale);\n        t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n    t = t.translate(newTranslation.x, newTranslation.y);\n    t = t.scale(newScale);\n    return t;\n}\n\nexport function translateZoomBehaviorTransform(selection) {\n\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection));\n\n    // Save the selections's new translation and scale.\n    this._translation = selection.datum().translation;\n    this._scale = selection.datum().scale;\n\n    // Set the original zoom transform to the translation and scale specified in\n    // the selection's data.\n    this._originalTransform = zoomIdentity.translate(selection.datum().translation.x, selection.datum().translation.y).scale(selection.datum().scale);\n}\n\nexport function resetZoom(transition) {\n\n    // Reset the zoom transform to the original zoom transform.\n    var selection = this._zoomSelection;\n    if (transition) {\n        selection = selection\n            .transition(transition);\n    }\n    selection\n        .call(this._zoomBehavior.transform, this._originalTransform);\n\n    return this;\n}\n\nexport function zoomScaleExtent(extent) {\n\n    this._options.zoomScaleExtent = extent;\n\n    return this;\n}\n\nexport function zoomTranslateExtent(extent) {\n\n    this._options.zoomTranslateExtent = extent;\n\n    return this;\n}\n\nexport function zoomBehavior() {\n  return this._zoomBehavior || null;\n}\n\nexport function zoomSelection() {\n  return this._zoomSelection || null;\n}\n","import {interpolate} from \"d3-interpolate\";\n\nexport function pathTween(points, d1) {\n    return function() {\n        const pointInterpolators = points.map(function(p) {\n            return interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n        });\n        return function(t) {\n            return t < 1 ? \"M\" + pointInterpolators.map(function(p) { return p(t); }).join(\"L\") : d1;\n        };\n    };\n}\n\nexport function pathTweenPoints(node, d1, precision, precisionIsRelative) {\n    const path0 = node;\n    const path1 = path0.cloneNode();\n    const n0 = path0.getTotalLength();\n    const n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n    // Uniform sampling of distance based on specified precision.\n    const distances = [0];\n    let i = 0;\n    const dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);\n    while ((i += dt) < 1) {\n      distances.push(i);\n    }\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    const points = distances.map(function(t) {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return ([[p0.x, p0.y], [p1.x, p1.y]]);\n    });\n    return points;\n}\n","export default function() {\n    return this._data || null;\n}\n\nexport function isEdgeElementParent(datum) {\n    return (datum.attributes.class == 'edge' || (\n        datum.tag == 'a' &&\n            datum.parent.tag == 'g' &&\n            datum.parent.parent.attributes.class == 'edge'\n    ));\n}\n\nexport function isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n}\n\nexport function getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n        return datum.parent;\n    } else { // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n        return datum.parent.parent.parent;\n    }\n}\n\nexport function getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n        return e.tag == 'title';\n    });\n}\n","import * as d3 from \"d3-selection\";\nimport {transition} from \"d3-transition\";\nimport {timeout} from \"d3-timer\";\nimport {interpolateTransformSvg} from \"d3-interpolate\";\nimport {zoomTransform} from \"d3-zoom\";\nimport {createElement, extractElementData, replaceElement} from \"./element\";\nimport {shallowCopyObject} from \"./utils\";\nimport {createZoomBehavior, getTranslatedZoomTransform, translateZoomBehaviorTransform} from \"./zoom\";\nimport {pathTween} from \"./tweening\";\nimport {isEdgeElement} from \"./data\";\nimport {isEdgeElementParent} from \"./data\";\n\nexport default function(callback) {\n\n    if (this._busy) {\n        this._queue.push(this.render.bind(this, callback));\n        return this;\n    }\n    this._dispatch.call('renderStart', this);\n\n    if (this._transitionFactory) {\n        timeout(function () { // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n            this._transition = transition(this._transitionFactory());\n            _render.call(this, callback);\n        }.bind(this), 0);\n    } else {\n        _render.call(this, callback);\n    }\n    return this;\n}\n\nfunction _render(callback) {\n\n    var transitionInstance = this._transition;\n    var fade = this._options.fade && transitionInstance != null;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;\n    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n\n    function insertChildren(element) {\n        var children = element.selectAll(function () {\n            return element.node().childNodes;\n        });\n\n        children = children\n          .data(function (d) {\n              return d.children;\n          }, function (d) {\n              return d.key;\n          });\n        var childrenEnter = children\n          .enter()\n          .append(function(d) {\n              var element = createElement(d);\n              if (d.tag == '#text' && fade) {\n                  element.nodeValue = d.text;\n              }\n              return element;\n          });\n\n        if (fade || (growEnteringEdges && isEdgeElementParent(element.datum()))) {\n            var childElementsEnter = childrenEnter\n                .filter(function(d) {\n                    return d.tag[0] == '#' ? null : this;\n                })\n                .each(function (d) {\n                    var childEnter = d3.select(this);\n                    for (var attributeName of Object.keys(d.attributes)) {\n                        var attributeValue = d.attributes[attributeName];\n                        childEnter\n                            .attr(attributeName, attributeValue);\n                    }\n                });\n            childElementsEnter\n              .filter(function(d) {\n                    return d.tag == 'svg' || d.tag == 'g' ? null : this;\n              })\n                .style(\"opacity\", 0.0);\n        }\n        var childrenExit = children\n          .exit();\n        if (attributer) {\n            childrenExit.each(attributer);\n        }\n        if (transitionInstance) {\n            childrenExit = childrenExit\n                .transition(transitionInstance);\n            if (fade) {\n                childrenExit\n                  .filter(function(d) {\n                      return d.tag[0] == '#' ? null : this;\n                  })\n                    .style(\"opacity\", 0.0);\n            }\n        }\n        childrenExit = childrenExit\n            .remove()\n        children = childrenEnter\n            .merge(children);\n        children.each(attributeElement);\n    }\n\n    function attributeElement(data) {\n        var element = d3.select(this);\n        if (data.tag == \"svg\") {\n            var options = graphvizInstance._options;\n            if (options.width != null || options.height != null) {\n                var width = options.width;\n                var height = options.height;\n                if (width == null) {\n                    width = data.attributes.width.replace('pt', '') * 4 / 3;\n                } else {\n                    element\n                        .attr(\"width\", width);\n                    data.attributes.width = width;\n                }\n                if (height == null) {\n                    height = data.attributes.height.replace('pt', '') * 4 / 3;\n                } else {\n                    element\n                        .attr(\"height\", height);\n                    data.attributes.height = height;\n                }\n                if (!options.fit) {\n                    element\n                        .attr(\"viewBox\", `0 0 ${width * 3 / 4 / options.scale} ${height * 3 / 4 / options.scale}`);\n                    data.attributes.viewBox = `0 0 ${width * 3 / 4 / options.scale} ${height * 3 / 4 / options.scale}`;\n                }\n            }\n            if (options.scale != 1 && (options.fit || (options.width == null && options.height == null))) {\n                width = data.attributes.viewBox.split(' ')[2];\n                height = data.attributes.viewBox.split(' ')[3];\n                element\n                    .attr(\"viewBox\", `0 0 ${width / options.scale} ${height / options.scale}`);\n                data.attributes.viewBox = `0 0 ${width / options.scale} ${height / options.scale}`;\n            }\n        }\n        if (attributer) {\n            element.each(attributer);\n        }\n        var tag = data.tag;\n        var attributes = data.attributes;\n        var currentAttributes = element.node().attributes;\n        if (currentAttributes) {\n            for (var i = 0; i < currentAttributes.length; i++) {\n                var currentAttribute = currentAttributes[i];\n                var name = currentAttribute.name;\n                if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                    var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                    var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                    name = namespace + ':' + name;\n                }\n                if (!(name in attributes)) {\n                    attributes[name] = null;\n                }\n            }\n        }\n        var convertShape = false;\n        var convertPrevShape = false;\n        if (tweenShapes && transitionInstance) {\n            if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data.alternativeOld) {\n                convertPrevShape = true;\n            }\n            if ((tag == 'polygon' || tag == 'ellipse') && data.alternativeNew) {\n                convertShape = true;\n            }\n            if (this.nodeName == 'polygon' && tag == 'polygon' && data.alternativeOld) {\n                var prevData = extractElementData(element);\n                var prevPoints = prevData.attributes.points;\n                if (!convertEqualSidedPolygons) {\n                    var nPrevPoints = prevPoints.split(' ').length;\n                    var points = data.attributes.points;\n                    var nPoints = points.split(' ').length;\n                    if (nPoints == nPrevPoints) {\n                        convertShape = false;\n                        convertPrevShape = false;\n                    }\n                }\n            }\n            if (convertPrevShape) {\n                var prevPathData = data.alternativeOld;\n                var pathElement = replaceElement(element, prevPathData);\n                pathElement.data([data], function () {\n                    return data.key;\n                });\n                element = pathElement;\n            }\n            if (convertShape) {\n                var newPathData = data.alternativeNew;\n                tag = 'path';\n                attributes = newPathData.attributes;\n            }\n        }\n        var elementTransition = element;\n        if (transitionInstance) {\n            elementTransition = elementTransition\n                .transition(transitionInstance);\n            if (fade) {\n                elementTransition\n                  .filter(function(d) {\n                      return d.tag[0] == '#' ? null : this;\n                  })\n                    .style(\"opacity\", 1.0);\n            }\n            elementTransition\n              .filter(function(d) {\n                  return d.tag[0] == '#' ? null : this;\n              })\n                .on(\"end\", function(d) {\n                    d3.select(this)\n                        .attr('style', (d && d.attributes && d.attributes.style) || null);\n                });\n        }\n        var growThisPath = growEnteringEdges && tag == 'path' && data.offset;\n        if (growThisPath) {\n            var totalLength = data.totalLength;\n            element\n                .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n                .attr(\"stroke-dashoffset\", totalLength)\n                .attr('transform', 'translate(' + data.offset.x + ',' + data.offset.y + ')');\n            attributes[\"stroke-dashoffset\"] = 0;\n            attributes['transform'] = 'translate(0,0)';\n            elementTransition\n                .attr(\"stroke-dashoffset\", attributes[\"stroke-dashoffset\"])\n                .attr('transform', attributes['transform'])\n                .on(\"start\", function() {\n                    d3.select(this)\n                        .style('opacity', null);\n                })\n                .on(\"end\", function() {\n                    d3.select(this)\n                        .attr('stroke-dashoffset', null)\n                        .attr('stroke-dasharray', null)\n                        .attr('transform', null);\n                });\n        }\n        var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data) && data.offset && data.parent.children[3].tag == 'path';\n        if (moveThisPolygon) {\n            var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n            var p0 = edgePath.node().getPointAtLength(0);\n            var p1 = edgePath.node().getPointAtLength(data.totalLength);\n            var p2 = edgePath.node().getPointAtLength(data.totalLength - 1);\n            var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n            var x = p0.x - p1.x + data.offset.x;\n            var y = p0.y - p1.y + data.offset.y;\n            element\n                .attr('transform', 'translate(' + x + ',' + y + ')');\n            elementTransition\n                .attrTween(\"transform\", function () {\n                    return function (t) {\n                        var p = edgePath.node().getPointAtLength(data.totalLength * t);\n                        var p2 = edgePath.node().getPointAtLength(data.totalLength * t + 1);\n                        var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n                        x = p.x - p1.x + data.offset.x * (1 - t);\n                        y = p.y - p1.y + data.offset.y * (1 - t);\n                        return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n                    }\n                })\n                .on(\"start\", function() {\n                    d3.select(this)\n                        .style('opacity', null);\n                })\n                .on(\"end\", function() {\n                    d3.select(this).attr('transform', null);\n                });\n        }\n        var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n        for (var attributeName of Object.keys(attributes)) {\n            var attributeValue = attributes[attributeName];\n            if (tweenThisPath && attributeName == 'd') {\n                var points = (data.alternativeOld || data).points;\n                if (points) {\n                    elementTransition\n                        .attrTween(\"d\", pathTween(points, attributeValue));\n                }\n            } else {\n                if (attributeName == 'transform' && data.translation) {\n                    if (transitionInstance) {\n                        var onEnd = elementTransition.on(\"end\");\n                        elementTransition\n                            .on(\"start\", function () {\n                                if (graphvizInstance._zoomBehavior) {\n                                    // Update the transform to transition to, just before the transition starts\n                                    // in order to catch changes between the transition scheduling to its start.\n                                    elementTransition\n                                        .tween(\"attr.transform\", function() {\n                                            var node = this;\n                                            return function(t) {\n                                                node.setAttribute(\"transform\", interpolateTransformSvg(zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                                            };\n                                        });\n                                }\n                            })\n                            .on(\"end\", function () {\n                                onEnd.call(this);\n                                // Update the zoom transform to the new translated transform\n                                if (graphvizInstance._zoomBehavior) {\n                                    translateZoomBehaviorTransform.call(graphvizInstance, element);\n                                }\n                            })\n                    } else {\n                        if (graphvizInstance._zoomBehavior) {\n                            // Update the transform attribute to set with the current pan translation\n                            translateZoomBehaviorTransform.call(graphvizInstance, element);\n                            attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();\n                        }\n                    }\n                }\n                elementTransition\n                    .attr(attributeName, attributeValue);\n            }\n        }\n        if (convertShape) {\n            elementTransition\n                .on(\"end\", function (d, i, nodes) {\n                    pathElement = d3.select(this);\n                    var newElement = replaceElement(pathElement, d);\n                    newElement.data([d], function () {\n                        return d.key;\n                    });\n                })\n        }\n        if (data.text) {\n            elementTransition\n                .text(data.text);\n        }\n        insertChildren(element);\n    }\n\n    var root = this._selection;\n\n    if (transitionInstance != null) {\n        // Ensure original SVG shape elements are restored after transition before rendering new graph\n        var jobs = this._jobs;\n        if (graphvizInstance._active) {\n            jobs.push(null);\n            return this;\n        } else {\n            root\n              .transition(transitionInstance)\n              .transition()\n                .duration(0)\n                .on(\"end\" , function () {\n                    graphvizInstance._active = false;\n                    if (jobs.length != 0) {\n                        jobs.shift();\n                        graphvizInstance.render();\n                    }\n                });\n            this._active = true;\n        }\n    }\n\n    if (transitionInstance != null) {\n        root\n          .transition(transitionInstance)\n            .on(\"start\" , function () {\n                graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n            })\n            .on(\"end\" , function () {\n                graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n            })\n          .transition()\n            .duration(0)\n            .on(\"start\" , function () {\n                graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n                graphvizInstance._dispatch.call('end', graphvizInstance);\n                if (callback) {\n                    callback.call(graphvizInstance);\n                }\n            });\n    }\n\n    var data = this._data;\n\n    var svg = root\n      .selectAll(\"svg\")\n        .data([data], function (d) {return d.key});\n    svg = svg\n      .enter()\n      .append(\"svg\")\n      .merge(svg);\n\n    attributeElement.call(svg.node(), data);\n\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n\n    if (transitionInstance == null) {\n        this._dispatch.call('end', this);\n        if (callback) {\n            callback.call(this);\n        }\n    }\n\n    return this;\n};\n","import {shallowCopyObject} from \"./utils\";\nimport {roundTo2Decimals} from \"./utils\";\n\nexport function convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var newPointsString = originalAttributes.points;\n        if (guideData.tag == 'polygon') {\n            var bbox = originalData.bbox;\n            bbox.cx = bbox.x + bbox.width / 2;\n            bbox.cy = bbox.y + bbox.height / 2;\n            var pointsString = originalAttributes.points;\n            var pointStrings = pointsString.split(' ');\n            var normPoints = pointStrings.map(function(p) {var xy = p.split(','); return [xy[0] - bbox.cx, xy[1] - bbox.cy]});\n            var x0 = normPoints[normPoints.length - 1][0];\n            var y0 = normPoints[normPoints.length - 1][1];\n            for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n                var x1 = normPoints[i][0];\n                var y1 = normPoints[i][1];\n                var dx = x1 - x0;\n                var dy = y1 - y0;\n                if (dy == 0) {\n                    continue;\n                } else {\n                    var x2 = x0 - y0 * dx / dy;\n                }\n                if (0 <= x2 && x2 < Infinity && ((x0 <= x2 && x2 <= x1) || (x1 <= x2 && x2 <= x0))) {\n                    break;\n                }\n            }\n            var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n            newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n            newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n            newPointsString = newPointStrings.join(' ');\n        }\n        newAttributes['d'] = 'M' + newPointsString + 'z';\n        delete newAttributes.points;\n        newData.attributes = newAttributes;\n    } else /* if (originalData.tag == 'ellipse') */ {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var cx = originalAttributes.cx;\n        var cy = originalAttributes.cy;\n        var rx = originalAttributes.rx;\n        var ry = originalAttributes.ry;\n        if (guideData.tag == 'polygon') {\n            var bbox = guideData.bbox;\n            bbox.cx = bbox.x + bbox.width / 2;\n            bbox.cy = bbox.y + bbox.height / 2;\n            var p = guideData.attributes.points.split(' ')[0].split(',');\n            var sx = p[0];\n            var sy = p[1];\n            var dx = sx - bbox.cx;\n            var dy = sy - bbox.cy;\n            var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n            var cosA = dx / l;\n            var sinA = -dy / l;\n        } else { // if (guideData.tag == 'path') {\n            // FIXME: add support for getting start position from path\n            var cosA = 1;\n            var sinA = 0;\n        }\n        var x1 = rx * cosA;\n        var y1 = -ry * sinA;\n        var x2 = rx * (-cosA);\n        var y2 = -ry * (-sinA);\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        newAttributes['d'] = 'M '  +  cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n        delete newAttributes.cx;\n        delete newAttributes.cy;\n        delete newAttributes.rx;\n        delete newAttributes.ry;\n        newData.attributes = newAttributes;\n    }\n    return newData;\n}\n\nexport function translatePointsAttribute(pointsString, x, y) {\n    var pointStrings = pointsString.split(' ');\n    var points = pointStrings.map(function(p) {return p.split(',')});\n    var points = pointStrings.map(function(p) {return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])]});\n    var pointStrings = points.map(function(p) {return p.join(',')});\n    var pointsString = pointStrings.join(' ');\n    return pointsString;\n}\n\nexport function translateDAttribute(d, x, y) {\n    var pointStrings = d.split(/[A-Z ]/);\n    pointStrings.shift();\n    var commands = d.split(/[^[A-Z ]+/);\n    var points = pointStrings.map(function(p) {return p.split(',')});\n    var points = pointStrings.map(function(p) {return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])]});\n    var pointStrings = points.map(function(p) {return p.join(',')});\n    d = commands.reduce(function(arr, v, i) {\n        return arr.concat(v, pointStrings[i]);\n    }, []).join('');\n    return d;\n}\n","import { graphviz } from \"@hpcc-js/wasm\";\nimport { graphvizSync } from \"@hpcc-js/wasm\";\nimport * as d3 from \"d3-selection\";\nimport {extractAllElementsData, extractElementData, createElementWithAttributes} from \"./element\";\nimport {convertToPathData} from \"./svg\";\nimport {pathTweenPoints} from \"./tweening\";\nimport {isEdgeElement} from \"./data\";\nimport {getEdgeTitle} from \"./data\";\n\n\nexport function initViz() {\n\n    // force JIT compilation of Viz.js\n    try {\n        graphviz.layout(\"\", \"svg\", \"dot\").then(() => {\n            graphvizSync().then((graphviz1) => {\n                this.layoutSync = graphviz1.layout.bind(graphviz1);\n                if (this._worker == null) {\n                    this._dispatch.call(\"initEnd\", this);\n                }\n                if (this._afterInit) {\n                    this._afterInit();\n                }\n            });\n        });\n    } catch(error) {\n    }\n    if (this._worker != null) {\n        var vizURL = this._vizURL;\n        var graphvizInstance = this;\n        this._workerPort.onmessage = function(event) {\n            var callback = graphvizInstance._workerCallbacks.shift();\n            callback.call(graphvizInstance, event);\n        }\n        if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n            // Local URL. Prepend with local domain to be usable in web worker\n            vizURL = (new window.URL(vizURL, document.location.href)).href;\n        }\n        postMessage.call(this, {dot: \"\", engine: 'dot', vizURL: vizURL}, function(event) {\n            switch (event.data.type) {\n            case \"init\":\n                graphvizInstance._dispatch.call(\"initEnd\", this);\n                break;\n            }\n        });\n    }\n}\n\nfunction postMessage(message, callback) {\n    this._workerCallbacks.push(callback);\n    this._workerPort.postMessage(message);\n}\n\nexport function layout(src, engine, vizOptions, callback) {\n    var graphvizInstance = this;\n    var worker = this._worker;\n    if (this._worker) {\n        postMessage.call(this, {\n            dot: src,\n            engine: engine,\n            options: vizOptions,\n        }, function (event) {\n            callback.call(this, event.data);\n        });\n    } else {\n        try {\n            var svgDoc = this.layoutSync(src, \"svg\", engine, vizOptions);\n            callback.call(this, {type: 'done', svg: svgDoc});\n        }\n        catch(error) {\n            callback.call(this, {type: 'error', error: error.message});\n        }\n    }\n}\n\nexport default function(src, callback) {\n\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._options.engine;\n    var images = this._images;\n\n    this._dispatch.call(\"start\", this);\n    this._busy = true;\n    this._dispatch.call(\"layoutStart\", this);\n    var vizOptions = {\n        images: images,\n    };\n    if (!this._worker && this.layoutSync == null) {\n        this._afterInit = this.dot.bind(this, src, callback);\n        return this;\n    }\n    this.layout(src, engine, vizOptions, function (data) {\n        switch (data.type) {\n        case \"error\":\n            if (graphvizInstance._onerror) {\n                graphvizInstance._onerror(data.error);\n            } else {\n                throw data.error.message\n            }\n            break;\n        case \"done\":\n            var svgDoc = data.svg;\n            layoutDone.call(this, svgDoc, callback);\n            break;\n        }\n    });\n\n    return this;\n};\n\nfunction layoutDone(svgDoc, callback) {\n    var keyMode = this._options.keyMode;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {\n        var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;\n        var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');\n    } else {\n        var tweenPrecision = this._options.tweenPrecision;\n        var tweenPrecisionIsRelative = false;\n    }\n    var growEnteringEdges = this._options.growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n\n    function setKey(datum, index) {\n        var tag = datum.tag;\n        if (keyMode == 'index') {\n            datum.key = index;\n        } else if (tag[0] != '#') {\n            if (keyMode == 'id') {\n                datum.key = datum.attributes.id;\n            } else if (keyMode == 'title') {\n                var title = datum.children.find(function (childData) {\n                    return childData.tag == 'title';\n                });\n                if (title) {\n                    if (title.children.length > 0) {\n                        datum.key = title.children[0].text;\n                    } else {\n                        datum.key = '';\n                    }\n                }\n            }\n        }\n        if (datum.key == null) {\n            if (tweenShapes) {\n                if (tag == 'ellipse' || tag == 'polygon') {\n                    tag = 'path';\n                }\n            }\n            datum.key = tag + '-' + index;\n        }\n    }\n\n    function setId(datum, parentData) {\n        var id = (parentData ? parentData.id + '.' : '') + datum.key;\n        datum.id = id;\n    }\n\n    function addToDictionary(datum) {\n        dictionary[datum.id] = datum;\n    }\n\n    function calculateAlternativeShapeData(datum, prevDatum) {\n        if (tweenShapes && datum.id in prevDictionary) {\n            if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n                if (prevDatum.tag != 'path') {\n                    datum.alternativeOld = convertToPathData(prevDatum, datum);\n                }\n                if (datum.tag != 'path') {\n                    datum.alternativeNew = convertToPathData(datum, prevDatum);\n                }\n            }\n        }\n    }\n\n    function calculatePathTweenPoints(datum, prevDatum) {\n        if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || (datum.alternativeOld && datum.alternativeOld.tag == 'path'))) {\n            var attribute_d = (datum.alternativeNew || datum).attributes.d;\n            if (datum.alternativeOld) {\n                var oldNode = createElementWithAttributes(datum.alternativeOld);\n            } else {\n                var oldNode = createElementWithAttributes(prevDatum);\n            }\n            (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);\n        }\n    }\n\n    function postProcessDataPass1Local(datum, index=0, parentData) {\n        setKey(datum, index);\n        setId(datum, parentData);\n        var id = datum.id;\n        var prevDatum = prevDictionary[id];\n        addToDictionary(datum);\n        calculateAlternativeShapeData(datum, prevDatum);\n        calculatePathTweenPoints(datum, prevDatum);\n        var childTagIndexes = {};\n        datum.children.forEach(function (childData) {\n            var childTag = childData.tag;\n            if (childTag == 'ellipse' || childTag == 'polygon') {\n                childTag = 'path';\n            }\n            if (childTagIndexes[childTag] == null) {\n                childTagIndexes[childTag] = 0;\n            }\n            var childIndex = childTagIndexes[childTag]++;\n            postProcessDataPass1Local(childData, childIndex, datum);\n        });\n    }\n\n    function addToNodeDictionary(datum) {\n        var tag = datum.tag;\n        if (growEnteringEdges && datum.parent) {\n            if (datum.parent.attributes.class == 'node') {\n                if (tag == 'title') {\n                    if (datum.children.length > 0) {\n                      var child = datum.children[0];\n                      var nodeId = child.text;\n                    } else {\n                      var nodeId = '';\n                    }\n                    nodeDictionary[nodeId] = datum.parent;\n                }\n            }\n        }\n    }\n\n    function extractGrowingEdgesData(datum) {\n        var id = datum.id;\n        var tag = datum.tag;\n        var prevDatum = prevDictionary[id];\n        if (growEnteringEdges && !prevDatum && datum.parent) {\n            if (isEdgeElement(datum)) {\n                if (tag == 'path' || tag == 'polygon') {\n                    if (tag == 'polygon') {\n                        var path = datum.parent.children.find(function (e) {\n                            return e.tag == 'path';\n                        });\n                        if (path) {\n                            datum.totalLength = path.totalLength;\n                        }\n                    }\n                    var title = getEdgeTitle(datum);\n                    var child = title.children[0];\n                    var nodeIds = child.text.split('->');\n                    if (nodeIds.length != 2) {\n                        nodeIds = child.text.split('--');\n                    }\n                    var startNodeId = nodeIds[0];\n                    var startNode = nodeDictionary[startNodeId];\n                    var prevStartNode = prevNodeDictionary[startNodeId];\n                    if (prevStartNode) {\n                        var i = startNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = startNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            startNode = startNode.children[i].children[j];\n                        }\n                        var i = prevStartNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = prevStartNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            prevStartNode = prevStartNode.children[i].children[j];\n                        }\n                        var startShapes = startNode.children;\n                        for (var i = 0; i < startShapes.length; i++) {\n                            if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {\n                                var startShape = startShapes[i];\n                                break;\n                            }\n                        }\n                        var prevStartShapes = prevStartNode.children;\n                        for (var i = 0; i < prevStartShapes.length; i++) {\n                            if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {\n                                var prevStartShape = prevStartShapes[i];\n                                break;\n                            }\n                        }\n                        if (prevStartShape && startShape) {\n                            datum.offset = {\n                                x: prevStartShape.center.x - startShape.center.x,\n                                y: prevStartShape.center.y - startShape.center.y,\n                            }\n                        } else {\n                            datum.offset = {x: 0, y: 0};\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function postProcessDataPass2Global(datum) {\n        addToNodeDictionary(datum);\n        extractGrowingEdgesData(datum);\n        datum.children.forEach(function (childData) {\n            postProcessDataPass2Global(childData);\n        });\n    }\n\n    this._dispatch.call(\"layoutEnd\", this);\n\n    var newDoc = d3.select(document.createDocumentFragment())\n        .append('div');\n\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n\n    newDoc\n        .append(function() {\n            return doc.documentElement;\n        });\n\n    var newSvg = newDoc\n      .select('svg');\n\n    var data = extractAllElementsData(newSvg);\n    this._dispatch.call('dataExtractEnd', this);\n    postProcessDataPass1Local(data);\n    this._dispatch.call('dataProcessPass1End', this);\n    postProcessDataPass2Global(data);\n    this._dispatch.call('dataProcessPass2End', this);\n    this._data = data;\n    this._dictionary = dictionary;\n    this._nodeDictionary = nodeDictionary;\n\n    this._extractData = function (element, childIndex, parentData) {\n        var data = extractAllElementsData(element);\n        postProcessDataPass1Local(data, childIndex, parentData);\n        postProcessDataPass2Global(data);\n        return data;\n    }\n    this._busy = false;\n    this._dispatch.call('dataProcessEnd', this);\n    if (callback) {\n        callback.call(this);\n    }\n    if (this._queue.length > 0) {\n        var job = this._queue.shift();\n        job.call(this);\n    }\n}\n","export default function(src, callback) {\n\n    var graphvizInstance = this;\n\n    this\n        .dot(src, render);\n\n    function render() {\n        graphvizInstance\n            .render(callback);\n    }\n\n    return this;\n};\n","import {transition} from \"d3-transition\";\nimport {active as d3_active} from \"d3-transition\";\n\nexport default function(name) {\n\n    if (name instanceof Function) {\n        this._transitionFactory = name;\n    } else {\n        this._transition = transition(name);\n    }\n\n    return this;\n};\n\nexport function active(name) {\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    if (svg.size() != 0) {\n        return d3_active(svg.node(), name);\n    } else {\n        return null;\n    }\n};\n","export default function(options) {\n\n    if (typeof options == 'undefined') {\n        return Object.assign({}, this._options);\n    } else {\n        for (var option of Object.keys(options)) {\n            this._options[option] = options[option];\n        }\n        return this;\n    }\n};\n","export default function(width) {\n\n    this._options.width = width;\n\n    return this;\n};\n","export default function(height) {\n\n    this._options.height = height;\n\n    return this;\n};\n","export default function(scale) {\n\n    this._options.scale = scale;\n\n    return this;\n};\n","export default function(fit) {\n\n    this._options.fit = fit;\n\n    return this;\n};\n","export default function(callback) {\n\n    this._attributer = callback;\n\n    return this;\n};\n","export default function(engine) {\n\n    this._options.engine = engine;\n\n    return this;\n};\n","export default function(path, width, height) {\n\n    this._images.push({path:path, width: width, height:height})\n\n    return this;\n};\n","export default function(keyMode) {\n\n    if (!this._keyModes.has(keyMode)) {\n        throw Error('Illegal keyMode: ' + keyMode);\n    }\n    if (keyMode != this._options.keyMode && this._data != null) {\n        throw Error('Too late to change keyMode');\n    }\n    this._options.keyMode = keyMode;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._options.fade = enable\n\n    return this;\n};\n","export default function(enable) {\n\n    this._options.tweenPaths = enable;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._options.tweenShapes = enable;\n    if (enable) {\n        this._options.tweenPaths = true;\n    }\n\n    return this;\n};\n","export default function(enable) {\n\n    this._options.convertEqualSidedPolygons = enable;\n\n    return this;\n};\n","export default function(precision) {\n\n    this._options.tweenPrecision = precision;\n\n    return this;\n};\n","export default function(enable) {\n\n    this._options.growEnteringEdges = enable;\n\n    return this;\n};\n","export default function(typenames, callback) {\n\n    this._dispatch.on(typenames, callback);\n\n    return this;\n};\n","export default function(callback) {\n\n    this._onerror = callback\n\n    return this;\n};\n","import {format} from \"d3-format\";\n\nexport default function(enable) {\n\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max(...(eventTypes.map(eventType => eventType.length)));\n    for (let i = 0; i < eventTypes.length; i++) {\n        let eventType = eventTypes[i];\n        times[eventType] = [];\n        var graphvizInstance = this;\n        var expectedDelay;\n        var expectedDuration;\n        this\n            .on(eventType + '.log', enable ? function () {\n                var t = Date.now();\n                var seqNo = times[eventType].length;\n                times[eventType].push(t);\n                var string = '';\n                string += 'Event ';\n                string += format(' >2')(i) + ' ';\n                string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n                string += format(' >5')(t - t0) + ' ';\n                if (eventType != 'initEnd') {\n                    string += format(' >5')(t - times['start'][seqNo]);\n                }\n                if (eventType == 'dataProcessEnd') {\n                    string += ' prepare                 ' + format(' >5')((t - times['layoutEnd'][seqNo]));\n                }\n                if (eventType == 'renderEnd' && graphvizInstance._transition) {\n                    string += ' transition start margin ' + format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n                    expectedDelay = graphvizInstance._transition.delay();\n                    expectedDuration = graphvizInstance._transition.duration();\n                }\n                if (eventType == 'transitionStart') {\n                    var actualDelay = (t - times['renderStart'][seqNo])\n                    string += ' transition delay        ' + format(' >5')(t - times['renderStart'][seqNo]);\n                    string += ' expected ' + format(' >5')(expectedDelay);\n                    string += ' diff ' + format(' >5')(actualDelay - expectedDelay);\n                }\n                if (eventType == 'transitionEnd') {\n                    var actualDuration = t - times['transitionStart'][seqNo]\n                    string += ' transition duration     ' + format(' >5')(actualDuration);\n                    string += ' expected ' + format(' >5')(expectedDuration);\n                    string += ' diff ' + format(' >5')(actualDuration - expectedDuration);\n                }\n                console.log(string);\n                t0 = t;\n            } : null);\n    }\n    return this;\n}\n","export default function() {\n\n    delete this._selection.node().__graphviz__;\n    if (this._worker) {\n        this._workerPortClose();\n    }\n    return this;\n};\n","export function rotate(x, y, cosA, sinA) {\n    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)\n    y = -y;\n    sinA = -sinA;\n    [x, y] = [x * cosA - y * sinA, x * sinA + y * cosA];\n    y = -y;\n    return [x, y];\n}\n","import * as d3 from \"d3-selection\";\nimport {path as d3_path} from \"d3-path\";\nimport {rotate} from \"./geometry\";\nimport {extractAllElementsData} from \"./element\";\nimport {attributeElement} from \"./element\";\nimport {insertAllElementsData} from \"./element\";\n\nexport function drawEdge(x1, y1, x2, y2, attributes, options={}) {\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newEdge = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newEdge0 = createEdge.call(this, attributes);\n        var edgeData = extractAllElementsData(newEdge0);\n        var newEdge = graph0.append('g')\n            .data([edgeData]);\n        attributeElement.call(newEdge.node(), edgeData);\n        _updateEdge.call(this, newEdge, x1, y1, x2, y2, attributes, options);\n    }\n    this._drawnEdge = {\n        g: newEdge,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        attributes: attributes,\n    };\n\n    return this;\n}\n\nexport function updateDrawnEdge(x1, y1, x2, y2, attributes={}, options={}) {\n    if (!this._drawnEdge)  {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g\n    attributes = Object.assign(this._drawnEdge.attributes, attributes);\n    this._drawnEdge.x1 = x1;\n    this._drawnEdge.y1 = y1;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var edge = graph0.append('g');\n        this._drawnEdge.g = edge;\n    }\n    if (!edge.empty())  {\n      _updateEdge.call(this, edge, x1, y1, x2, y2, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var newEdge = createEdge.call(this, attributes);\n    var edgeData = extractAllElementsData(newEdge);\n    edge.data([edgeData]);\n    attributeElement.call(edge.node(), edgeData);\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n}\n\nfunction _moveEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var shortening = options.shortening || 0;\n    var arrowHeadLength = 10;\n    var arrowHeadWidth = 7;\n    var margin = 0.1;\n\n    var arrowHeadPoints = [\n        [0, -arrowHeadWidth / 2],\n        [arrowHeadLength, 0],\n        [0, arrowHeadWidth / 2],\n        [0, -arrowHeadWidth / 2],\n    ];\n\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var length = Math.sqrt(dx * dx + dy * dy);\n    if (length == 0) {\n        var cosA = 1;\n        var sinA = 0;\n    } else {\n        var cosA = dx / length;\n        var sinA = dy / length;\n    }\n    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;\n\n    if (attributes.URL || attributes.tooltip) {\n        var a = edge.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n        var line = a.selectWithoutDataPropagation(\"path\");\n        var arrowHead = a.selectWithoutDataPropagation(\"polygon\");\n    } else {\n        var line = edge.selectWithoutDataPropagation(\"path\");\n        var arrowHead = edge.selectWithoutDataPropagation(\"polygon\");\n    }\n\n    var path1 = d3_path();\n    path1.moveTo(x1, y1);\n    path1.lineTo(x2, y2);\n\n    line\n        .attr(\"d\", path1);\n\n    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);\n    }\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];\n    }\n    var allPoints = [];\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        allPoints.push(point.join(','));\n    }\n    var pointsAttr = allPoints.join(' ');\n\n    arrowHead\n        .attr(\"points\", pointsAttr);\n\n    return this;\n}\n\nexport function moveDrawnEdgeEndPoint(x2, y2, options={}) {\n\n    if (!this._drawnEdge)  {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    var x1 = this._drawnEdge.x1;\n    var y1 = this._drawnEdge.y1;\n    var attributes = this._drawnEdge.attributes;\n\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n\n    return this\n}\n\nexport function removeDrawnEdge() {\n\n    if (!this._drawnEdge)  {\n        return this;\n    }\n\n    var edge = this._drawnEdge.g;\n\n    edge.remove();\n\n    this._drawnEdge = null;\n\n    return this\n}\n\nexport function insertDrawnEdge(name) {\n\n    if (!this._drawnEdge)  {\n        throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n    if (edge.empty())  {\n        return this;\n    }\n    var attributes = this._drawnEdge.attributes;\n\n    var title = edge.selectWithoutDataPropagation(\"title\");\n    title\n        .text(name);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(edgeData);\n\n    insertAllElementsData(edge, edgeData);\n\n    this._drawnEdge = null;\n\n    return this\n\n}\n\nexport function drawnEdgeSelection() {\n\n  if (this._drawnEdge) {\n    return this._drawnEdge.g;\n  } else {\n    return d3.select(null);\n  }\n\n}\n\n\nfunction createEdge(attributes) {\n    var attributesString = ''\n    for (var name of Object.keys(attributes)) {\n        if (attributes[name] != null) {\n            attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n    }\n    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';\n    var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment())\n        .append(function() {\n            return doc.documentElement;\n        });\n    var edge = newDoc.select('.edge');\n\n    return edge;\n}\n","import * as d3 from \"d3-selection\";\nimport {rotate} from \"./geometry\";\nimport {extractAllElementsData} from \"./element\";\nimport {translatePointsAttribute} from \"./svg\";\nimport {translateDAttribute} from \"./svg\";\nimport {insertAllElementsData} from \"./element\";\nimport {attributeElement} from \"./element\";\nimport {roundTo2Decimals} from \"./utils\";\n\nexport function drawNode(x, y, nodeId, attributes={}, options={}) {\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newNode = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newNode0 = createNode.call(this, nodeId, attributes);\n        var nodeData = extractAllElementsData(newNode0);\n        var newNode = graph0.append('g')\n            .data([nodeData]);\n        attributeElement.call(newNode.node(), nodeData);\n        _updateNode.call(this, newNode, x, y, nodeId, attributes, options);\n    }\n    this._drawnNode = {\n        g: newNode,\n        nodeId: nodeId,\n        x: x,\n        y: y,\n        attributes: attributes,\n    };\n\n    return this;\n}\n\nexport function updateDrawnNode(x, y, nodeId, attributes={}, options={}) {\n    if (!this._drawnNode)  {\n        throw Error('No node has been drawn');\n    }\n\n    var node = this._drawnNode.g\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    attributes = Object.assign(this._drawnNode.attributes, attributes);\n    this._drawnNode.nodeId = nodeId;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var node = graph0.append('g');\n        this._drawnNode.g = node;\n    }\n    if (!node.empty())  {\n      _updateNode.call(this, node, x, y, nodeId, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateNode(node, x, y, nodeId, attributes, options) {\n\n    var newNode = createNode.call(this, nodeId, attributes);\n    var nodeData = extractAllElementsData(newNode);\n    node.data([nodeData]);\n    attributeElement.call(node.node(), nodeData);\n    _moveNode(node, x, y, attributes, options);\n\n    return this;\n}\n\nfunction _moveNode(node, x, y, attributes, options) {\n    if (attributes.URL || attributes.tooltip) {\n        var subParent = node.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n    } else {\n        var subParent = node;\n    }\n    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');\n    var text = node.selectWithoutDataPropagation(\"text\");\n\n    if (svgElements.size() != 0) {\n        var bbox = svgElements.node().getBBox();\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n    } else if (text.size() != 0) {\n        bbox = {\n            x: +text.attr('x'),\n            y: +text.attr('y'),\n            width: 0,\n            height: 0,\n            cx: +text.attr('x'),\n            cy: +text.attr('y'),\n        }\n    }\n    svgElements.each(function(data, index) {\n        var svgElement = d3.select(this);\n        if (svgElement.attr(\"cx\")) {\n            svgElement\n                .attr(\"cx\", roundTo2Decimals(x))\n                .attr(\"cy\", roundTo2Decimals(y));\n        } else if (svgElement.attr(\"points\")) {\n            var pointsString = svgElement.attr('points').trim();\n            svgElement\n                .attr(\"points\", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));\n        } else {\n            var d = svgElement.attr('d');\n            svgElement\n                .attr(\"d\", translateDAttribute(d, x - bbox.cx, y - bbox.cy));\n        }\n    });\n\n    if (text.size() != 0) {\n        text\n            .attr(\"x\", roundTo2Decimals(+text.attr(\"x\") + x - bbox.cx))\n            .attr(\"y\", roundTo2Decimals(+text.attr(\"y\") + y - bbox.cy));\n    }\n    return this;\n}\n\nexport function moveDrawnNode(x, y, options={}) {\n\n    if (!this._drawnNode)  {\n        throw Error('No node has been drawn');\n    }\n    var node = this._drawnNode.g;\n    var attributes = this._drawnNode.attributes;\n\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n\n    if (!node.empty())  {\n        _moveNode(node, x, y, attributes, options);\n    }\n\n    return this\n}\n\nexport function removeDrawnNode() {\n\n    if (!this._drawnNode)  {\n        return this;\n    }\n\n    var node = this._drawnNode.g;\n\n    if (!node.empty())  {\n        node.remove();\n    }\n\n    this._drawnNode = null;\n\n    return this\n}\n\nexport function insertDrawnNode(nodeId) {\n\n    if (!this._drawnNode)  {\n        throw Error('No node has been drawn');\n    }\n\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    var node = this._drawnNode.g;\n    if (node.empty())  {\n        return this;\n    }\n    var attributes = this._drawnNode.attributes;\n\n    var title = node.selectWithoutDataPropagation(\"title\");\n    title\n        .text(nodeId);\n    if (attributes.URL || attributes.tooltip) {\n        var ga = node.selectWithoutDataPropagation(\"g\");\n        var a = ga.selectWithoutDataPropagation(\"a\");\n        var svgElement = a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = a.selectWithoutDataPropagation('text');\n    } else {\n        var svgElement = node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = node.selectWithoutDataPropagation('text');\n    }\n    text\n        .text(attributes.label || nodeId);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(nodeData);\n\n    insertAllElementsData(node, nodeData);\n\n    this._drawnNode = null;\n\n    return this\n\n}\n\nexport function drawnNodeSelection() {\n\n  if (this._drawnNode) {\n    return this._drawnNode.g;\n  } else {\n    return d3.select(null);\n  }\n\n}\n\nfunction createNode(nodeId, attributes) {\n    var attributesString = ''\n    for (var name of Object.keys(attributes)) {\n        if (attributes[name] != null) {\n            attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n    }\n    var dotSrc = 'graph {\"' + nodeId + '\" [' + attributesString + ']}';\n    var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment())\n        .append(function() {\n            return doc.documentElement;\n        });\n    var node = newDoc.select('.node');\n\n    return node;\n}\n","/* This file is excluded from coverage because the intrumented code\n * translates \"self\" which gives a reference error.\n */\n\n/* istanbul ignore next */\n\nexport function workerCodeBody(port) {\n\n    self.document = {}; // Workaround for \"ReferenceError: document is not defined\" in hpccWasm\n\n    port.addEventListener('message', function(event) {\n        let hpccWasm = self[\"@hpcc-js/wasm\"];\n        if (hpccWasm == undefined && event.data.vizURL) {\n            importScripts(event.data.vizURL);\n            hpccWasm = self[\"@hpcc-js/wasm\"];\n            hpccWasm.wasmFolder(event.data.vizURL.match(/.*\\//)[0]);\n            // This is an alternative workaround where wasmFolder() is not needed\n//                                    document = {currentScript: {src: event.data.vizURL}};\n        }\n        hpccWasm.graphviz.layout(event.data.dot, \"svg\", event.data.engine, event.data.options).then((svg) => {\n            if (svg) {\n                port.postMessage({\n                    type: \"done\",\n                    svg: svg,\n                });\n            } else if (event.data.vizURL) {\n                port.postMessage({\n                    type: \"init\",\n                });\n            } else {\n                port.postMessage({\n                    type: \"skip\",\n                });\n            }\n        }).catch(error => {\n            port.postMessage({\n                type: \"error\",\n                error: error.message,\n            });\n        });\n    });\n}\n\n/* istanbul ignore next */\n\nexport function workerCode() {\n\n    const port = self;\n    workerCodeBody(port);\n}\n\n/* istanbul ignore next */\n\nexport function sharedWorkerCode() {\n    self.onconnect = function(e) {\n        const port = e.ports[0];\n        workerCodeBody(port);\n        port.start();\n    }\n}\n","import * as d3 from \"d3-selection\";\nimport {dispatch} from \"d3-dispatch\";\nimport render from \"./render\";\nimport {layout} from \"./dot\";\nimport dot from \"./dot\";\nimport data from \"./data\";\nimport {initViz} from \"./dot\";\nimport renderDot from \"./renderDot\";\nimport transition from \"./transition\";\nimport {active} from \"./transition\";\nimport options from \"./options\";\nimport width from \"./width\";\nimport height from \"./height\";\nimport scale from \"./scale\";\nimport fit from \"./fit\";\nimport attributer from \"./attributer\";\nimport engine from \"./engine\";\nimport images from \"./images\";\nimport keyMode from \"./keyMode\";\nimport fade from \"./fade\";\nimport tweenPaths from \"./tweenPaths\";\nimport tweenShapes from \"./tweenShapes\";\nimport convertEqualSidedPolygons from \"./convertEqualSidedPolygons\";\nimport tweenPrecision from \"./tweenPrecision\";\nimport growEnteringEdges from \"./growEnteringEdges\";\nimport zoom from \"./zoom\";\nimport {resetZoom} from \"./zoom\";\nimport {zoomBehavior} from \"./zoom\";\nimport {zoomSelection} from \"./zoom\";\nimport {zoomScaleExtent} from \"./zoom\";\nimport {zoomTranslateExtent} from \"./zoom\";\nimport on from \"./on\";\nimport onerror from \"./onerror\";\nimport logEvents from \"./logEvents\";\nimport destroy from \"./destroy\";\nimport {drawEdge} from \"./drawEdge\";\nimport {updateDrawnEdge} from \"./drawEdge\";\nimport {moveDrawnEdgeEndPoint} from \"./drawEdge\";\nimport {insertDrawnEdge} from \"./drawEdge\";\nimport {removeDrawnEdge} from \"./drawEdge\";\nimport {drawnEdgeSelection} from \"./drawEdge\";\nimport {drawNode} from \"./drawNode\";\nimport {updateDrawnNode} from \"./drawNode\";\nimport {moveDrawnNode} from \"./drawNode\";\nimport {insertDrawnNode} from \"./drawNode\";\nimport {removeDrawnNode} from \"./drawNode\";\nimport {drawnNodeSelection} from \"./drawNode\";\nimport {workerCode} from \"./workerCode\";\nimport {sharedWorkerCode} from \"./workerCode\";\nimport {workerCodeBody} from \"./workerCode\";\n\nexport function Graphviz(selection, options) {\n    this._options = {\n        useWorker: true,\n        useSharedWorker: false,\n        engine: 'dot',\n        keyMode: 'title',\n        fade: true,\n        tweenPaths: true,\n        tweenShapes: true,\n        convertEqualSidedPolygons: true,\n        tweenPrecision: 1,\n        growEnteringEdges: true,\n        zoom: true,\n        zoomScaleExtent: [0.1, 10],\n        zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],\n        width: null,\n        height: null,\n        scale: 1,\n        fit: false,\n    };\n    if (options instanceof Object) {\n        for (var option of Object.keys(options)) {\n            this._options[option] = options[option];\n        }\n    } else if (typeof options == 'boolean') {\n        this._options.useWorker = options;\n    }\n    var useWorker = this._options.useWorker;\n    var useSharedWorker = this._options.useSharedWorker;\n    if (typeof Worker == 'undefined') {\n        useWorker = false;\n    }\n    if (typeof SharedWorker == 'undefined') {\n        useSharedWorker = false;\n    }\n    if (useWorker || useSharedWorker) {\n        var scripts = d3.selectAll('script');\n        var vizScript = scripts.filter(function() {\n            return d3.select(this).attr('type') == 'javascript/worker' || (d3.select(this).attr('src') && d3.select(this).attr('src').match(/.*\\/@hpcc-js\\/wasm/));\n        });\n        if (vizScript.size() == 0) {\n            console.warn('No script tag of type \"javascript/worker\" was found and \"useWorker\" is true. Not using web worker.');\n            useWorker = false;\n            useSharedWorker = false;\n        } else {\n            this._vizURL = vizScript.attr('src');\n            if (!this._vizURL) {\n                console.warn('No \"src\" attribute of was found on the \"javascript/worker\" script tag and \"useWorker\" is true. Not using web worker.');\n                useWorker = false;\n                useSharedWorker = false;\n            }\n        }\n    }\n    if (useSharedWorker) {\n        const url = 'data:application/javascript;base64,' + btoa(workerCodeBody.toString() + '(' + sharedWorkerCode.toString() + ')()');\n        this._worker = this._worker = new SharedWorker(url);\n        this._workerPort = this._worker.port;\n        this._workerPortClose = this._worker.port.close.bind(this._workerPort);\n        this._worker.port.start();\n        this._workerCallbacks = [];\n    }\n    else if (useWorker) {\n        var blob = new Blob([workerCodeBody.toString() + '(' + workerCode.toString() + ')()']);\n        var blobURL = window.URL.createObjectURL(blob);\n        this._worker = new Worker(blobURL);\n        this._workerPort = this._worker;\n        this._workerPortClose = this._worker.terminate.bind(this._worker);\n        this._workerCallbacks = [];\n    }\n    this._selection = selection;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set([\n        'title',\n        'id',\n        'tag-index',\n        'index'\n    ]);\n    this._images = [];\n    this._translation = undefined;\n    this._scale = undefined;\n    this._eventTypes = [\n        'initEnd',\n        'start',\n        'layoutStart',\n        'layoutEnd',\n        'dataExtractEnd',\n        'dataProcessPass1End',\n        'dataProcessPass2End',\n        'dataProcessEnd',\n        'renderStart',\n        'renderEnd',\n        'transitionStart',\n        'transitionEnd',\n        'restoreEnd',\n        'end'\n    ];\n    this._dispatch = dispatch(...this._eventTypes);\n    initViz.call(this);\n    selection.node().__graphviz__ = this;\n}\n\nexport default function graphviz(selector, options) {\n    var g = d3.select(selector).graphviz(options);\n    return g;\n}\n\nGraphviz.prototype = graphviz.prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom,\n    resetZoom: resetZoom,\n    zoomBehavior: zoomBehavior,\n    zoomSelection: zoomSelection,\n    zoomScaleExtent: zoomScaleExtent,\n    zoomTranslateExtent: zoomTranslateExtent,\n    render: render,\n    layout: layout,\n    dot: dot,\n    data: data,\n    renderDot: renderDot,\n    transition: transition,\n    active: active,\n    options: options,\n    width: width,\n    height: height,\n    scale: scale,\n    fit: fit,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n    destroy: destroy,\n    drawEdge: drawEdge,\n    updateDrawnEdge: updateDrawnEdge,\n    moveDrawnEdgeEndPoint,\n    insertDrawnEdge,\n    removeDrawnEdge, removeDrawnEdge,\n    drawnEdgeSelection, drawnEdgeSelection,\n    drawNode: drawNode,\n    updateDrawnNode: updateDrawnNode,\n    moveDrawnNode: moveDrawnNode,\n    insertDrawnNode,\n    removeDrawnNode, removeDrawnNode,\n    drawnNodeSelection, drawnNodeSelection,\n};\n","import {Graphviz} from \"../graphviz\";\nimport {timeout} from \"d3-timer\";\n\nexport default function(options) {\n\n    var g = this.node().__graphviz__;\n    if (g) {\n        g.options(options);\n        // Ensure a possible new initEnd event handler is attached before calling it\n        timeout(function () {\n            g._dispatch.call(\"initEnd\", this);\n        }.bind(this), 0);\n    } else {\n        g = new Graphviz(this, options);\n    }\n    return g;\n}\n","import * as d3 from \"d3-selection\";\n\nexport default function(name) {\n\n    return d3.select(this.size() > 0 ? this.node().querySelector(name) : null);\n}\n","import {selection} from \"d3-selection\";\nimport selection_graphviz from \"./graphviz\";\nimport selection_selectWithoutDataPropagation from \"./selectWithoutDataPropagation\";\n\nselection.prototype.graphviz = selection_graphviz;\nselection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n"],"sourceRoot":""}