{"version":3,"sources":["redux/note-details/methods.ts","hooks/common/use-note-markdown-content.ts","hooks/common/use-apply-dark-mode.ts","components/editor-page/document-bar/document-info/document-info-line.tsx","hooks/common/use-document-title-with-note-title.ts","components/document-read-only-page/ErrorWhileLoadingNoteAlert.tsx","components/document-read-only-page/LoadingNoteAlert.tsx","components/editor-page/utils.ts","components/editor-page/hooks/useLoadNoteFromServer.ts","components/editor-page/app-bar/dark-mode-button.tsx","components/editor-page/app-bar/help-button/help-modal.tsx","components/editor-page/app-bar/help-button/shortcuts.tsx","components/editor-page/app-bar/help-button/links.tsx","components/editor-page/app-bar/help-button/cheatsheet-line.tsx","components/editor-page/app-bar/help-button/cheatsheet.tsx","components/editor-page/app-bar/sync-scroll-buttons/disabledScroll.svg","components/editor-page/app-bar/help-button/help-button.tsx","components/editor-page/app-bar/navbar-branding.tsx","components/editor-page/app-bar/sync-scroll-buttons/enabledScroll.svg","components/editor-page/app-bar/sync-scroll-buttons/sync-scroll-buttons.tsx","components/editor-page/app-bar/app-bar.tsx","components/editor-page/app-bar/slide-mode-button.tsx","components/editor-page/app-bar/read-only-mode-button.tsx","components/editor-page/app-bar/new-note-button.tsx","components/editor-page/document-bar/document-info/document-info-time-line.tsx","components/editor-page/document-bar/document-info/time-from-now.tsx"],"names":["setNoteMarkdownContent","content","store","dispatch","type","NoteDetailsActionType","SET_DOCUMENT_CONTENT","setNoteDataFromServer","apiResponse","SET_NOTE_DATA_FROM_SERVER","note","updateNoteTitleByFirstHeading","firstHeading","UPDATE_NOTE_TITLE_BY_FIRST_HEADING","setNoteFrontmatter","frontmatter","initialState","SET_NOTE_FRONTMATTER","setCheckboxInMarkdownContent","lineInMarkdown","checked","SET_CHECKBOX_IN_MARKDOWN_CONTENT","useNoteMarkdownContent","useApplicationState","state","noteDetails","markdownContent","useApplyDarkMode","darkModeActivated","useIsDarkModeActivated","useEffect","window","document","body","classList","add","remove","DocumentInfoLine","icon","size","children","className","fixedWidth","useDocumentTitleWithNoteTitle","untitledNote","t","useTranslation","noteTitle","useDocumentTitle","ErrorWhileLoadingNoteAlert","show","condition","variant","i18nKey","LoadingNoteAlert","isMac","navigator","platform","toLowerCase","includes","useLoadNoteFromServer","id","useParams","useState","error","setError","loading","setLoading","getNote","then","catch","e","console","finally","DarkModeState","HelpTabStatus","DarkModeButton","darkModeEnabled","DARK","LIGHT","ToggleButtonGroup","name","value","ToggleButton","title","onChange","setDarkMode","Shortcut","modifierKey","altKey","shortcutMap","Editor","Row","Object","keys","map","category","Card","Header","ListGroup","entries","functionName","shortcuts","Item","Trans","shortcut","shortcutIndex","Links","Col","lg","href","links","community","i18nOption","service","chat","backendIssues","translate","HighlightedCode","React","lazy","BasicMarkdownRenderer","CheatsheetLine","code","onTaskCheckedChange","checkboxClick","useCallback","newValue","fallback","colSpan","baseUrl","wrapLines","startLineNumber","language","Cheatsheet","setChecked","codes","useMemo","Table","_g","HelpModal","onHide","tab","setTab","tabContent","Shortcuts","tabTitle","Modal","Body","Button","onClick","HelpButton","setShow","NavbarBranding","Navbar","Brand","to","logoType","HedgeDocLogoType","WB_HORIZONTAL","BW_HORIZONTAL","HedgeDocLogoSize","SMALL","inline","_excluded","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDisabledScroll","_ref","svgRef","titleId","props","height","viewBox","width","xmlns","ref","fill","transform","d","fillRule","ForwardRef","SvgEnabledScroll","cx","cy","r","SyncScrollState","AppBarMode","SyncScrollButtons","syncScrollEnabled","editorConfig","syncScroll","SYNCED","UNSYNCED","defaultValue","setEditorSyncScroll","SlideModeButton","ReadOnlyModeButton","NewNoteButton","AppBar","mode","userExists","user","noteFrontmatter","bg","Nav","EDITOR","NoteType","SLIDE","DocumentInfoLineWithTimeMode","TimeFromNow","time","toFormat","dateTime","toString","toRelative","DocumentInfoTimeLine","userName","profileImageSrc","CREATED","photo","additionalClasses","undefined"],"mappings":"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","file":"static/js/7.650c46ed.chunk.js","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { store } from '..'\nimport { NoteDto } from '../../api/notes/types'\nimport { NoteFrontmatter } from '../../components/editor-page/note-frontmatter/note-frontmatter'\nimport { initialState } from './reducers'\nimport {\n  NoteDetailsActionType,\n  SetCheckboxInMarkdownContentAction,\n  SetNoteDetailsAction,\n  SetNoteDetailsFromServerAction,\n  SetNoteFrontmatterFromRenderingAction,\n  UpdateNoteTitleByFirstHeadingAction\n} from './types'\n\nexport const setNoteMarkdownContent = (content: string): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_DOCUMENT_CONTENT,\n    content\n  } as SetNoteDetailsAction)\n}\n\nexport const setNoteDataFromServer = (apiResponse: NoteDto): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_NOTE_DATA_FROM_SERVER,\n    note: apiResponse\n  } as SetNoteDetailsFromServerAction)\n}\n\nexport const updateNoteTitleByFirstHeading = (firstHeading?: string): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.UPDATE_NOTE_TITLE_BY_FIRST_HEADING,\n    firstHeading: firstHeading\n  } as UpdateNoteTitleByFirstHeadingAction)\n}\n\nexport const setNoteFrontmatter = (frontmatter: NoteFrontmatter | undefined): void => {\n  if (!frontmatter) {\n    frontmatter = initialState.frontmatter\n  }\n  store.dispatch({\n    type: NoteDetailsActionType.SET_NOTE_FRONTMATTER,\n    frontmatter: frontmatter\n  } as SetNoteFrontmatterFromRenderingAction)\n}\n\nexport const setCheckboxInMarkdownContent = (lineInMarkdown: number, checked: boolean): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_CHECKBOX_IN_MARKDOWN_CONTENT,\n    checked: checked,\n    lineInMarkdown: lineInMarkdown\n  } as SetCheckboxInMarkdownContentAction)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useApplicationState } from './use-application-state'\n\nexport const useNoteMarkdownContent = (): string => {\n  return useApplicationState((state) => state.noteDetails.markdownContent)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useEffect } from 'react'\nimport { useIsDarkModeActivated } from './use-is-dark-mode-activated'\n\nexport const useApplyDarkMode = (): void => {\n  const darkModeActivated = useIsDarkModeActivated()\n\n  useEffect(() => {\n    if (darkModeActivated) {\n      window.document.body.classList.add('dark')\n    } else {\n      window.document.body.classList.remove('dark')\n    }\n    return () => {\n      window.document.body.classList.remove('dark')\n    }\n  }, [darkModeActivated])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ForkAwesomeIcon } from '../../../common/fork-awesome/fork-awesome-icon'\nimport { IconName } from '../../../common/fork-awesome/types'\n\nexport interface DocumentInfoLineProps {\n  icon: IconName\n  size?: '2x' | '3x' | '4x' | '5x' | undefined\n}\n\nexport const DocumentInfoLine: React.FC<DocumentInfoLineProps> = ({ icon, size, children }) => {\n  return (\n    <span className={'d-flex align-items-center'}>\n      <ForkAwesomeIcon icon={icon} size={size} fixedWidth={true} className={'mx-2'} />\n      <i className={'d-flex align-items-center'}>{children}</i>\n    </span>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useTranslation } from 'react-i18next'\nimport { useApplicationState } from './use-application-state'\nimport { useDocumentTitle } from './use-document-title'\n\nexport const useDocumentTitleWithNoteTitle = (): void => {\n  const { t } = useTranslation()\n  const untitledNote = t('editor.untitledNote')\n  const noteTitle = useApplicationState((state) => state.noteDetails.noteTitle)\n\n  useDocumentTitle(noteTitle === '' ? untitledNote : noteTitle)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const ErrorWhileLoadingNoteAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  useTranslation()\n\n  return (\n    <ShowIf condition={show}>\n      <Alert variant={'danger'} className={'my-2'}>\n        <b>\n          <Trans i18nKey={'views.readOnly.error.title'} />\n        </b>\n        <br />\n        <Trans i18nKey={'views.readOnly.error.description'} />\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans } from 'react-i18next'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const LoadingNoteAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  return (\n    <ShowIf condition={show}>\n      <Alert variant={'info'} className={'my-2'}>\n        <Trans i18nKey={'views.readOnly.loading'} />\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const isMac = navigator.platform.toLowerCase().includes('mac')\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { getNote } from '../../../api/notes'\nimport { setNoteDataFromServer } from '../../../redux/note-details/methods'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const useLoadNoteFromServer = (): [boolean, boolean] => {\n  const { id } = useParams<EditorPagePathParams>()\n\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getNote(id)\n      .then((note) => {\n        setNoteDataFromServer(note)\n      })\n      .catch((e) => {\n        setError(true)\n        console.error(e)\n      })\n      .finally(() => setLoading(false))\n  }, [id])\n\n  return [error, loading]\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { useIsDarkModeActivated } from '../../../hooks/common/use-is-dark-mode-activated'\nimport { setDarkMode } from '../../../redux/dark-mode/methods'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\n\nenum DarkModeState {\n  DARK,\n  LIGHT\n}\n\nconst DarkModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const darkModeEnabled = useIsDarkModeActivated() ? DarkModeState.DARK : DarkModeState.LIGHT\n\n  return (\n    <ToggleButtonGroup type='radio' name='dark-mode' value={darkModeEnabled} className='ml-2'>\n      <ToggleButton\n        value={DarkModeState.DARK}\n        variant='outline-secondary'\n        title={t('editor.darkMode.switchToDark')}\n        onChange={() => setDarkMode(true)}>\n        <ForkAwesomeIcon icon='moon' />\n      </ToggleButton>\n      <ToggleButton\n        value={DarkModeState.LIGHT}\n        variant='outline-secondary'\n        title={t('editor.darkMode.switchToLight')}\n        onChange={() => setDarkMode(false)}>\n        <ForkAwesomeIcon icon='sun-o' />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport { DarkModeButton }\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Button, Modal } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport React, { useMemo, useState } from 'react'\nimport { CommonModal } from '../../../common/modals/common-modal'\nimport { Shortcut } from './shortcuts'\nimport { Links } from './links'\nimport { Cheatsheet } from './cheatsheet'\n\nexport enum HelpTabStatus {\n  Cheatsheet = 'cheatsheet.title',\n  Shortcuts = 'shortcuts.title',\n  Links = 'links.title'\n}\n\nexport interface HelpModalProps {\n  show: boolean\n  onHide: () => void\n}\n\nexport const HelpModal: React.FC<HelpModalProps> = ({ show, onHide }) => {\n  const [tab, setTab] = useState<HelpTabStatus>(HelpTabStatus.Cheatsheet)\n  const { t } = useTranslation()\n\n  const tabContent = useMemo(() => {\n    switch (tab) {\n      case HelpTabStatus.Cheatsheet:\n        return <Cheatsheet />\n      case HelpTabStatus.Shortcuts:\n        return <Shortcut />\n      case HelpTabStatus.Links:\n        return <Links />\n    }\n  }, [tab])\n\n  const tabTitle = useMemo(() => t('editor.documentBar.help') + ' - ' + t(`editor.help.${tab}`), [t, tab])\n\n  return (\n    <CommonModal icon={'question-circle'} show={show} onHide={onHide} title={tabTitle}>\n      <Modal.Body>\n        <nav className='nav nav-tabs'>\n          <Button\n            variant={'light'}\n            className={`nav-link nav-item ${tab === HelpTabStatus.Cheatsheet ? 'active' : ''}`}\n            onClick={() => setTab(HelpTabStatus.Cheatsheet)}>\n            <Trans i18nKey={'editor.help.cheatsheet.title'} />\n          </Button>\n          <Button\n            variant={'light'}\n            className={`nav-link nav-item ${tab === HelpTabStatus.Shortcuts ? 'active' : ''}`}\n            onClick={() => setTab(HelpTabStatus.Shortcuts)}>\n            <Trans i18nKey={'editor.help.shortcuts.title'} />\n          </Button>\n          <Button\n            variant={'light'}\n            className={`nav-link nav-item ${tab === HelpTabStatus.Links ? 'active' : ''}`}\n            onClick={() => setTab(HelpTabStatus.Links)}>\n            <Trans i18nKey={'editor.help.links.title'} />\n          </Button>\n        </nav>\n        {tabContent}\n      </Modal.Body>\n    </CommonModal>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment } from 'react'\nimport { Card, ListGroup, Row } from 'react-bootstrap'\nimport { Trans } from 'react-i18next'\nimport { isMac } from '../../utils'\n\nexport const Shortcut: React.FC = () => {\n  const modifierKey = isMac ? <kbd>⌘</kbd> : <kbd>Ctrl</kbd>\n  const altKey = isMac ? <kbd>⌥</kbd> : <kbd>Alt</kbd>\n\n  const shortcutMap: { [category: string]: { [functionName: string]: JSX.Element[] } } = {\n    'View Mode': {\n      'editor.help.shortcuts.view': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>V</kbd>],\n      'editor.help.shortcuts.both': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>B</kbd>],\n      'editor.help.shortcuts.edit': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>E</kbd>]\n    },\n    Editor: {\n      'editor.help.shortcuts.bold': [modifierKey, <> + </>, <kbd>B</kbd>],\n      'editor.help.shortcuts.italic': [modifierKey, <> + </>, <kbd>I</kbd>],\n      'editor.help.shortcuts.underline': [modifierKey, <> + </>, <kbd>U</kbd>],\n      'editor.help.shortcuts.strikethrough': [modifierKey, <> + </>, <kbd>D</kbd>],\n      'editor.help.shortcuts.mark': [modifierKey, <> + </>, <kbd>M</kbd>],\n      'editor.help.shortcuts.link': [modifierKey, <> + </>, <kbd>K</kbd>]\n    }\n  }\n  return (\n    <Row className={'justify-content-center pt-4'}>\n      {Object.keys(shortcutMap).map((category) => {\n        return (\n          <Card key={category} className={'m-2 w-50'}>\n            <Card.Header>{category}</Card.Header>\n            <ListGroup variant='flush'>\n              {Object.entries(shortcutMap[category]).map(([functionName, shortcuts]) => {\n                return (\n                  <ListGroup.Item key={functionName} className={'d-flex justify-content-between'}>\n                    <span>\n                      <Trans i18nKey={functionName} />\n                    </span>\n                    <span>\n                      {shortcuts.map((shortcut, shortcutIndex) => (\n                        <Fragment key={shortcutIndex}>{shortcut}</Fragment>\n                      ))}\n                    </span>\n                  </ListGroup.Item>\n                )\n              })}\n            </ListGroup>\n          </Card>\n        )\n      })}\n    </Row>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport links from '../../../../links.json'\nimport { TranslatedExternalLink } from '../../../common/links/translated-external-link'\nimport { TranslatedInternalLink } from '../../../common/links/translated-internal-link'\n\nexport const Links: React.FC = () => {\n  useTranslation()\n\n  return (\n    <Row className={'justify-content-center pt-4'}>\n      <Col lg={4}>\n        <h3>\n          <Trans i18nKey='editor.help.contacts.title' />\n        </h3>\n        <div>\n          <ul className='list-unstyled'>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.community'\n                href={links.community}\n                icon='users'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.meetUsOn'\n                i18nOption={{ service: 'Matrix' }}\n                href={links.chat}\n                icon='hashtag'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.reportIssue'\n                href={links.backendIssues}\n                icon='tag'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.helpTranslating'\n                href={links.translate}\n                icon='language'\n                className='text-primary'\n              />\n            </li>\n          </ul>\n        </div>\n      </Col>\n      <Col lg={4}>\n        <h3>\n          <Trans i18nKey='editor.help.documents.title' />\n        </h3>\n        <div>\n          <ul className='list-unstyled'>\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.features'\n                href='/n/features'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.yamlMetadata'\n                href='/n/yaml-metadata'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.slideExample'\n                href='/n/slide-example'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n          </ul>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Suspense, useCallback } from 'react'\nimport { WaitSpinner } from '../../../common/wait-spinner/wait-spinner'\n\nexport interface CheatsheetLineProps {\n  code: string\n  onTaskCheckedChange: (newValue: boolean) => void\n}\n\nconst HighlightedCode = React.lazy(\n  () => import('../../../markdown-renderer/replace-components/highlighted-fence/highlighted-code/highlighted-code')\n)\nconst BasicMarkdownRenderer = React.lazy(() => import('../../../markdown-renderer/basic-markdown-renderer'))\n\nexport const CheatsheetLine: React.FC<CheatsheetLineProps> = ({ code, onTaskCheckedChange }) => {\n  const checkboxClick = useCallback(\n    (lineInMarkdown: number, newValue: boolean) => {\n      onTaskCheckedChange(newValue)\n    },\n    [onTaskCheckedChange]\n  )\n\n  return (\n    <Suspense\n      fallback={\n        <tr>\n          <td colSpan={2}>\n            <WaitSpinner />\n          </td>\n        </tr>\n      }>\n      <tr>\n        <td>\n          <BasicMarkdownRenderer content={code} baseUrl={'https://example.org'} onTaskCheckedChange={checkboxClick} />\n        </td>\n        <td className={'markdown-body'}>\n          <HighlightedCode code={code} wrapLines={true} startLineNumber={1} language={'markdown'} />\n        </td>\n      </tr>\n    </Suspense>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo, useState } from 'react'\nimport { Table } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport './cheatsheet.scss'\nimport { CheatsheetLine } from './cheatsheet-line'\n\nexport const Cheatsheet: React.FC = () => {\n  const { t } = useTranslation()\n  const [checked, setChecked] = useState<boolean>(false)\n  const codes = useMemo(\n    () => [\n      `**${t('editor.editorToolbar.bold')}**`,\n      `*${t('editor.editorToolbar.italic')}*`,\n      `++${t('editor.editorToolbar.underline')}++`,\n      `~~${t('editor.editorToolbar.strikethrough')}~~`,\n      'H~2~O',\n      '19^th^',\n      `==${t('editor.help.cheatsheet.highlightedText')}==`,\n      `# ${t('editor.editorToolbar.header')}`,\n      `\\`${t('editor.editorToolbar.code')}\\``,\n      '```javascript=\\nvar x = 5;\\n```',\n      `> ${t('editor.editorToolbar.blockquote')}`,\n      `- ${t('editor.editorToolbar.unorderedList')}`,\n      `1. ${t('editor.editorToolbar.orderedList')}`,\n      `- [${checked ? 'x' : ' '}] ${t('editor.editorToolbar.checkList')}`,\n      `[${t('editor.editorToolbar.link')}](https://example.com)`,\n      `![${t('editor.editorToolbar.image')}](/icons/apple-touch-icon.png)`,\n      ':smile:',\n      `:::info\\n${t('editor.help.cheatsheet.exampleAlert')}\\n:::`\n    ],\n    [checked, t]\n  )\n\n  return (\n    <Table className='table-condensed table-cheatsheet'>\n      <thead>\n        <tr>\n          <th>\n            <Trans i18nKey='editor.help.cheatsheet.example' />\n          </th>\n          <th>\n            <Trans i18nKey='editor.help.cheatsheet.syntax' />\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {codes.map((code) => (\n          <CheatsheetLine code={code} key={code} onTaskCheckedChange={setChecked} />\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default Cheatsheet\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDisabledScroll(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 135.46666 135.46666\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    transform: \"translate(253.17277 890.86874)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-185.60701-890.86598c-1.20278.0405-2.35129.51236-3.23554 1.33104l-19.83931 18.35901c-2.0321 1.88196-2.16416 5.08233-.29441 7.12658 1.86949 2.04457 5.06645 2.17956 7.10004.29914l16.43678-15.21017 16.43678 15.21017c2.03361 1.88043 5.23055 1.74545 7.10004-.29914 1.86889-2.04514 1.73629-5.24555-.29677-7.12658l-19.83694-18.35901c-.96887-.89698-2.25281-1.37483-3.57067-1.33104z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-205.48644-783.84278c-1.28698.0542-2.55509.59901-3.48983 1.62131-1.86975 2.04426-1.73769 5.24463.29441 7.12659l19.83931 18.359c.88425.81868 2.03276 1.29062 3.23554 1.33104 1.31786.0439 2.6018-.43406 3.57067-1.33104l19.83694-18.359c2.03306-1.88102 2.16566-5.08144.29677-7.12659-1.86949-2.04459-5.06643-2.17956-7.10004-.29913l-16.43678 15.21017-16.43678-15.21017c-1.01679-.94021-2.32321-1.37647-3.61021-1.32218z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-185.49136-841.40292a18.267478 18.267478 0 0 0 -18.21562 18.26754 18.267478 18.267478 0 0 0 .23777 2.93583l22.52379-20.64169a18.267478 18.267478 0 0 0 -4.49402-.56168 18.267478 18.267478 0 0 0 -.0519 0zm18.08169 15.33288-22.5232 20.64052a18.267478 18.267478 0 0 0 4.49343.56168 18.267478 18.267478 0 0 0 18.26754-18.26754 18.267478 18.267478 0 0 0 -.23777-2.93466z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-124.79368-883.92129-126.14511 116.28534 4.95067 5.40084 126.14688-116.28534z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDisabledScroll);\nexport default __webpack_public_path__ + \"static/media/disabledScroll.0d537a0b.svg\";\nexport { ForwardRef as ReactComponent };","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useCallback, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { ForkAwesomeIcon } from '../../../common/fork-awesome/fork-awesome-icon'\nimport { HelpModal } from './help-modal'\n\nexport const HelpButton: React.FC = () => {\n  const { t } = useTranslation()\n  const [show, setShow] = useState(false)\n  const onHide = useCallback(() => setShow(false), [])\n\n  return (\n    <Fragment>\n      <Button\n        title={t('editor.documentBar.help')}\n        className='ml-2 text-secondary'\n        size='sm'\n        variant='outline-light'\n        onClick={() => setShow(true)}>\n        <ForkAwesomeIcon icon='question-circle' />\n      </Button>\n      <HelpModal show={show} onHide={onHide} />\n    </Fragment>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useIsDarkModeActivated } from '../../../hooks/common/use-is-dark-mode-activated'\nimport { Branding } from '../../common/branding/branding'\nimport {\n  HedgeDocLogoSize,\n  HedgeDocLogoType,\n  HedgeDocLogoWithText\n} from '../../common/hedge-doc-logo/hedge-doc-logo-with-text'\n\nexport const NavbarBranding: React.FC = () => {\n  const darkModeActivated = useIsDarkModeActivated()\n\n  return (\n    <Navbar.Brand>\n      <Link to='/intro' className='text-secondary text-decoration-none d-flex align-items-center'>\n        <HedgeDocLogoWithText\n          logoType={darkModeActivated ? HedgeDocLogoType.WB_HORIZONTAL : HedgeDocLogoType.BW_HORIZONTAL}\n          size={HedgeDocLogoSize.SMALL}\n        />\n        <Branding inline={true} />\n      </Link>\n    </Navbar.Brand>\n  )\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEnabledScroll(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 135.46666 135.46666\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m67.566309.00276674c-1.20278.040417-2.35129.512357-3.23555 1.33103706l-19.83929 18.3589962c-2.0321 1.881973-2.16417 5.082332-.29442 7.126588 1.8695 2.044576 5.06646 2.17955 7.10005.29913l16.43677-15.210163 16.43678 15.210163c2.03361 1.880432 5.23055 1.745458 7.10004-.29913 1.86889-2.045147 1.73629-5.24555-.29677-7.126588l-19.83693-18.3589962c-.96887-.89697906-2.25281-1.37483336-3.57068-1.33103706z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m47.686889 107.02594c-1.28698.0542-2.55509.59903-3.48984 1.62132-1.86975 2.04426-1.73768 5.24462.29442 7.12659l19.83929 18.359c.88426.81868 2.03277 1.29062 3.23555 1.33104 1.31787.0438 2.60181-.43406 3.57068-1.33104l19.83693-18.359c2.03306-1.88103 2.16566-5.08144.29677-7.12659-1.86949-2.0446-5.06643-2.17956-7.10004-.29913l-16.43678 15.21016-16.43677-15.21016c-1.01679-.94021-2.32322-1.37647-3.61021-1.32219z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 67.733864,\n    cy: 67.733284,\n    fillRule: \"evenodd\",\n    r: 18.267477\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEnabledScroll);\nexport default __webpack_public_path__ + \"static/media/enabledScroll.3198f5be.svg\";\nexport { ForwardRef as ReactComponent };","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { setEditorSyncScroll } from '../../../../redux/editor/methods'\nimport { ReactComponent as DisabledScrollIcon } from './disabledScroll.svg'\nimport { ReactComponent as EnabledScrollIcon } from './enabledScroll.svg'\nimport './sync-scroll-buttons.scss'\nimport { useApplicationState } from '../../../../hooks/common/use-application-state'\n\nenum SyncScrollState {\n  SYNCED,\n  UNSYNCED\n}\n\nexport const SyncScrollButtons: React.FC = () => {\n  const syncScrollEnabled = useApplicationState((state) => state.editorConfig.syncScroll)\n    ? SyncScrollState.SYNCED\n    : SyncScrollState.UNSYNCED\n  const { t } = useTranslation()\n\n  return (\n    <ToggleButtonGroup\n      type='radio'\n      defaultValue={[]}\n      name='sync-scroll'\n      className={'ml-2 sync-scroll-buttons'}\n      value={syncScrollEnabled}>\n      <ToggleButton\n        variant={'outline-secondary'}\n        title={t('editor.appBar.syncScroll.enable')}\n        onChange={() => setEditorSyncScroll(true)}\n        value={SyncScrollState.SYNCED}>\n        <EnabledScrollIcon />\n      </ToggleButton>\n      <ToggleButton\n        variant={'outline-secondary'}\n        title={t('editor.appBar.syncScroll.disable')}\n        onChange={() => setEditorSyncScroll(false)}\n        value={SyncScrollState.UNSYNCED}>\n        <DisabledScrollIcon />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { ShowIf } from '../../common/show-if/show-if'\nimport { SignInButton } from '../../landing-layout/navigation/sign-in-button'\nimport { UserDropdown } from '../../landing-layout/navigation/user-dropdown'\nimport { DarkModeButton } from './dark-mode-button'\nimport { EditorViewMode } from './editor-view-mode'\nimport { HelpButton } from './help-button/help-button'\nimport { NavbarBranding } from './navbar-branding'\nimport { SyncScrollButtons } from './sync-scroll-buttons/sync-scroll-buttons'\nimport { NoteType } from '../note-frontmatter/note-frontmatter'\nimport { SlideModeButton } from './slide-mode-button'\nimport { ReadOnlyModeButton } from './read-only-mode-button'\nimport { NewNoteButton } from './new-note-button'\nimport { useApplicationState } from '../../../hooks/common/use-application-state'\n\nexport enum AppBarMode {\n  BASIC,\n  EDITOR\n}\n\nexport interface AppBarProps {\n  mode: AppBarMode\n}\n\nexport const AppBar: React.FC<AppBarProps> = ({ mode }) => {\n  const userExists = useApplicationState((state) => !!state.user)\n  const noteFrontmatter = useApplicationState((state) => state.noteDetails.frontmatter)\n\n  return (\n    <Navbar bg={'light'}>\n      <Nav className='mr-auto d-flex align-items-center'>\n        <NavbarBranding />\n        <ShowIf condition={mode === AppBarMode.EDITOR}>\n          <EditorViewMode />\n          <SyncScrollButtons />\n        </ShowIf>\n        <DarkModeButton />\n        <ShowIf condition={mode === AppBarMode.EDITOR}>\n          <ShowIf condition={noteFrontmatter.type === NoteType.SLIDE}>\n            <SlideModeButton />\n          </ShowIf>\n          <ShowIf condition={noteFrontmatter.type !== NoteType.SLIDE}>\n            <ReadOnlyModeButton />\n          </ShowIf>\n          <HelpButton />\n        </ShowIf>\n      </Nav>\n      <Nav className='d-flex align-items-center text-secondary'>\n        <NewNoteButton />\n        <ShowIf condition={!userExists}>\n          <SignInButton size={'sm'} />\n        </ShowIf>\n        <ShowIf condition={userExists}>\n          <UserDropdown />\n        </ShowIf>\n      </Nav>\n    </Navbar>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const SlideModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const { id } = useParams<EditorPagePathParams>()\n\n  return (\n    <Link to={`/p/${id}`} target='_blank'>\n      <Button\n        title={t('editor.documentBar.slideMode')}\n        className='ml-2 text-secondary'\n        size='sm'\n        variant='outline-light'>\n        <ForkAwesomeIcon icon='television' />\n      </Button>\n    </Link>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const ReadOnlyModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const { id } = useParams<EditorPagePathParams>()\n\n  return (\n    <Link to={`/s/${id}`} target='_blank'>\n      <Button\n        title={t('editor.documentBar.readOnlyMode')}\n        className='ml-2 text-secondary'\n        size='sm'\n        variant='outline-light'>\n        <ForkAwesomeIcon icon='file-text-o' />\n      </Button>\n    </Link>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Button } from 'react-bootstrap'\n\nexport const NewNoteButton: React.FC = () => {\n  useTranslation()\n\n  return (\n    <Button className='mx-2' size='sm' variant='primary'>\n      <ForkAwesomeIcon icon='plus' /> <Trans i18nKey='editor.appBar.new' />\n    </Button>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DateTime } from 'luxon'\nimport React from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { IconName } from '../../../common/fork-awesome/types'\nimport { UserAvatar } from '../../../common/user-avatar/user-avatar'\nimport { DocumentInfoLine } from './document-info-line'\nimport { TimeFromNow } from './time-from-now'\n\nexport interface DocumentInfoLineWithTimeProps {\n  size?: '2x' | '3x' | '4x' | '5x' | undefined\n  time: DateTime\n  mode: DocumentInfoLineWithTimeMode\n  userName: string\n  profileImageSrc: string\n}\n\nexport enum DocumentInfoLineWithTimeMode {\n  CREATED,\n  EDITED\n}\n\nexport const DocumentInfoTimeLine: React.FC<DocumentInfoLineWithTimeProps> = ({\n  time,\n  mode,\n  userName,\n  profileImageSrc,\n  size\n}) => {\n  useTranslation()\n\n  const i18nKey =\n    mode === DocumentInfoLineWithTimeMode.CREATED\n      ? 'editor.modal.documentInfo.created'\n      : 'editor.modal.documentInfo.edited'\n  const icon: IconName = mode === DocumentInfoLineWithTimeMode.CREATED ? 'plus' : 'pencil'\n\n  return (\n    <DocumentInfoLine icon={icon} size={size}>\n      <Trans i18nKey={i18nKey}>\n        <UserAvatar\n          photo={profileImageSrc}\n          additionalClasses={'font-style-normal bold font-weight-bold'}\n          name={userName}\n          size={size ? 'lg' : undefined}\n        />\n        <TimeFromNow time={time} />\n      </Trans>\n    </DocumentInfoLine>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DateTime } from 'luxon'\n\nimport React from 'react'\n\nexport interface TimeFromNowProps {\n  time: DateTime\n}\n\nexport const TimeFromNow: React.FC<TimeFromNowProps> = ({ time }) => {\n  return (\n    <time className={'mx-1'} title={time.toFormat('DDDD T')} dateTime={time.toString()}>\n      {time.toRelative()}\n    </time>\n  )\n}\n"],"sourceRoot":""}