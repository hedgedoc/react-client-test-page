{"version":3,"sources":["components/editor/yaml-metadata/yaml-metadata.ts","components/markdown-renderer/replace-components/abc/abc-frame.tsx","components/markdown-renderer/replace-components/abc/abc-replacer.tsx","components/markdown-renderer/replace-components/ComponentReplacer.ts","components/markdown-renderer/replace-components/utils.ts","components/markdown-renderer/replace-components/one-click-frame/one-click-embedding.tsx","components/markdown-renderer/replace-components/asciinema/asciinema-frame.tsx","components/markdown-renderer/replace-components/asciinema/replace-asciinema-link.ts","components/markdown-renderer/replace-components/asciinema/asciinema-replacer.tsx","components/markdown-renderer/replace-components/csv/csv-parser.ts","components/markdown-renderer/replace-components/csv/csv-table.tsx","components/markdown-renderer/replace-components/csv/csv-replacer.tsx","components/markdown-renderer/replace-components/flow/flowchart/flowchart.tsx","components/markdown-renderer/replace-components/flow/flowchart-replacer.tsx","components/markdown-renderer/replace-components/gist/gist-frame.tsx","components/markdown-renderer/replace-components/gist/gist-preview.png","components/markdown-renderer/replace-components/gist/replace-gist-link.ts","components/markdown-renderer/replace-components/gist/replace-legacy-gist-short-code.ts","components/markdown-renderer/replace-components/gist/gist-replacer.tsx","components/markdown-renderer/replace-components/graphviz/graphviz-frame.tsx","components/markdown-renderer/replace-components/graphviz/graphviz-replacer.tsx","components/markdown-renderer/replace-components/highlighted-fence/highlighted-fence-replacer.tsx","components/markdown-renderer/replace-components/image/image-replacer.tsx","components/markdown-renderer/replace-components/katex/katex-replacer.tsx","components/markdown-renderer/replace-components/linemarker/linemarker-replacer.tsx","components/markdown-renderer/replace-components/link-replacer/link-replacer.tsx","components/common/lock-button/lock-button.tsx","components/markdown-renderer/replace-components/markmap/markmap-frame.tsx","components/markdown-renderer/replace-components/markmap/markmap-replacer.tsx","components/markdown-renderer/replace-components/mermaid/mermaid-chart.tsx","components/markdown-renderer/replace-components/mermaid/mermaid-replacer.tsx","components/markdown-renderer/replace-components/possible-wider/possible-wider-replacer.tsx","components/markdown-renderer/replace-components/quote-options/quote-options-replacer.tsx","components/markdown-renderer/replace-components/sequence-diagram/deprecation-warning.tsx","components/markdown-renderer/replace-components/sequence-diagram/sequence-diagram-replacer.tsx","components/markdown-renderer/replace-components/task-list/task-list-replacer.tsx","components/markdown-renderer/replace-components/vega-lite/vega-chart.tsx","components/markdown-renderer/replace-components/vega-lite/vega-replacer.tsx","components/markdown-renderer/replace-components/vimeo/replace-legacy-vimeo-short-code.ts","components/markdown-renderer/replace-components/vimeo/replace-vimeo-link.ts","components/markdown-renderer/replace-components/vimeo/vimeo-frame.tsx","components/markdown-renderer/replace-components/vimeo/vimeo-replacer.tsx","components/markdown-renderer/replace-components/youtube/replace-legacy-youtube-short-code.ts","components/markdown-renderer/replace-components/youtube/replace-youtube-link.ts","components/markdown-renderer/replace-components/youtube/youtube-frame.tsx","components/markdown-renderer/replace-components/youtube/youtube-replacer.tsx","components/markdown-renderer/hooks/use-replacer-instance-list-creator.ts","components/editor/table-of-contents/table-of-contents.tsx","components/markdown-renderer/markdown-it-plugins/headline-anchors.ts","components/markdown-renderer/markdown-it-plugins/highlighted-code.ts","components/markdown-renderer/markdown-it-plugins/plantuml.ts","components/markdown-renderer/markdown-it-plugins/quote-extra.ts","components/markdown-renderer/regex-plugins/replace-legacy-pdf-short-code.ts","components/markdown-renderer/regex-plugins/replace-legacy-slideshare-short-code.ts","components/markdown-renderer/regex-plugins/replace-legacy-speakerdeck-short-code.ts","components/markdown-renderer/markdown-it-configurator/FullMarkdownItConfigurator.tsx","components/markdown-renderer/markdown-it-plugins/frontmatter.ts","components/markdown-renderer/markdown-it-plugins/document-toc.ts","components/markdown-renderer/replace-components/linemarker/line-number-marker.ts","components/markdown-renderer/utils/calculate-line-marker-positions.ts","components/markdown-renderer/full-markdown-renderer.tsx","components/markdown-renderer/hooks/use-post-meta-data-on-change.ts","components/markdown-renderer/hooks/use-extract-first-headline.ts","components/markdown-renderer/hooks/use-post-toc-ast-on-change.ts","components/editor/document-renderer-pane/yaml-array-deprecation-alert.tsx","components/editor/document-renderer-pane/document-render-pane.tsx","components/editor/document-renderer-pane/use-adapted-line-markers-callback.ts","components/editor/document-renderer-pane/scrolling-document-render-pane.tsx","components/editor/scroll/hooks/use-scroll-to-line-mark.ts","components/editor/scroll/utils.ts","components/editor/scroll/hooks/use-on-user-scroll.ts","components/render-page/iframe-renderer-to-editor-communicator.ts","components/render-page/render-page.tsx"],"names":["YAMLMetaData","rawData","title","description","tags","deprecatedTagsSyntax","robots","lang","dir","breaks","GA","disqus","type","opengraph","this","split","map","entry","trim","filter","tag","Map","Object","entries","AbcFrame","code","container","useRef","useEffect","current","actualContainer","then","imp","renderAbc","catch","console","error","ref","className","AbcReplacer","codeNode","name","attribs","children","data","ComponentReplacer","getAttributesFromHedgeDocTag","node","tagName","OneClickEmbedding","previewContainerClassName","containerClassName","onImageFetch","loadingImageUrl","tooltip","hoverIcon","hoverTextI18nKey","onActivate","useState","showFrame","setShowFrame","previewImageUrl","setPreviewImageUrl","imageLink","message","condition","onClick","src","alt","Trans","i18nKey","AsciinemaFrame","id","gistUrlRegex","RegExp","source","replaceAsciinemaLink","regex","replace","match","AsciinemaReplacer","counterMap","attributes","asciinemaId","count","get","set","markdownItPlugin","markdownIt","markdownItRegex","CsvTable","rows","delimiter","showHeader","tableRowClassName","tableColumnClassName","useMemo","rowsWithColumns","csvText","csvColumnDelimiter","length","splitRegex","row","parseCsv","headerRow","splice","column","columnNumber","renderTableHeader","rowNumber","columnIndex","CsvReplacer","extraData","extraInfos","exec","undefined","FlowChart","diagramRef","setError","darkModeActivated","useIsDarkModeActivated","useTranslation","currentDiagramRef","parserOutput","parse","drawSVG","fill","Array","from","forEach","value","remove","Alert","variant","FlowchartReplacer","GistFrame","iframeHtml","frameHeight","setFrameHeight","sizeMessage","useCallback","size","window","addEventListener","removeEventListener","sandbox","width","height","frameBorder","btoa","replaceGistLink","replaceLegacyGistShortCode","GistReplacer","gistId","preview","GraphvizFrame","showError","querySelectorAll","child","wasmPlugin","wasmFolder","graphvizImport","graphviz","useWorker","zoom","onerror","renderDot","GraphvizReplacer","HighlightedCodeReplacer","lastLineNumber","language","showLineNumbers","startLineNumberAttribute","wrapLines","startsWith","startLineNumber","parseInt","line","ImageReplacer","clickHandler","class","KaTeX","React","lazy","KatexReplacer","katex","find","subnode","inline","getNodeIfKatexBlock","getNodeIfInlineKatex","mathJaxContent","isInline","block","math","errorColor","mathJax","beforeMath","afterMath","beforeInlineMath","afterInlineMath","beforeDisplayMath","afterDisplayMath","LinemarkerReplacer","createJumpToMarkClickEventHandler","event","document","getElementById","scrollIntoView","preventDefault","LinkReplacer","baseUrl","subNodeTransform","nativeRenderer","href","url","isJumpMark","substr","URL","toString","e","rel","target","LockButton","locked","onLockedChanged","Button","icon","blockHandler","stopPropagation","MarkmapFrame","t","diagramContainer","disablePanAndZoom","setDisablePanAndZoom","markmapLoader","svg","createElementNS","setAttribute","appendChild","newState","MarkmapReplacer","mermaidInitialized","MermaidChart","mermaid","default","initialize","startOnLoad","dataset","processed","textContent","init","str","MermaidReplacer","enabledTags","PossibleWiderReplacer","subNode","includes","isColorExtraElement","QuoteOptionsReplacer","paragraph","childElements","optionsTag","elem","assign","style","DeprecationWarning","data-cy","links","faq","SequenceDiagramReplacer","TaskListReplacer","onTaskCheckedChange","handleCheckboxChange","lineNum","Number","currentTarget","checked","disabled","onChange","data-line","VegaChart","embed","spec","JSON","actions","export","compiled","editor","i18n","PNG_ACTION","SVG_ACTION","err","VegaReplacer","replaceLegacyVimeoShortCode","vimeoVideoUrlRegex","replaceVimeoLink","VimeoFrame","getPreviewImageLink","a","fetch","credentials","referrerPolicy","response","status","Error","json","vimeoResponse","thumbnail_large","allow","VimeoReplacer","videoId","replaceLegacyYoutubeShortCode","youtubeVideoUrlRegex","replaceYouTubeLink","YouTubeFrame","YoutubeReplacer","slugify","content","encodeURIComponent","toLowerCase","convertLevel","toc","levelsToShowUnderThis","headerCounts","wrapInListItem","rawName","n","nameCount","slug","headlineUrl","l","c","TableOfContents","ast","maxDepth","tocTree","headlineAnchors","anchor","permalink","permalinkBefore","permalinkClass","permalinkSymbol","permalinkHref","highlightRegex","highlightedCode","md","core","ruler","push","state","tokens","token","highlightInfos","info","attrJoin","plantumlWithError","plantumlServer","store","getState","config","plantuml","openMarker","closeMarker","server","plantumlError","defaultRenderer","renderer","rules","fence","idx","options","env","slf","quoteExtra","replaceQuoteExtraAuthor","replaceQuoteExtraColor","replaceQuoteExtraTime","finalRegex","legacyPdfShortCode","legacySlideshareShortCode","legacySpeakerdeckShortCode","FullMarkdownItConfigurator","useFrontmatter","passYamlErrorState","onRawMeta","onToc","onLineMarkers","configurations","frontmatter","rawMeta","meta","yaml","load","onYamlError","frontmatterExtract","hasError","placeholder","listType","level","callback","documentToc","lineMarkers","tagTokens","app_linemarker","index","attrGet","endLineNumber","insertNewLineMarker","tokenPosition","startToken","Token","attrPush","hidden","startLine","endLine","lineNumberMarker","BasicMarkdownItConfigurator","useCalculateLineMarkerPosition","documentElement","onLineMarkerPositionChanged","offset","lastLineMarkerPositions","calculateNewLineMarkerPositions","newLines","currentLineMarkers","lineMarkerPositions","childIndex","htmlChild","offsetTop","currentLineMarker","lastPosition","position","offsetHeight","calculateLineMarkerPositions","equal","useResizeObserver","onResize","FullMarkdownRenderer","onFirstHeadingChange","onMetaDataChange","onTocChange","wide","rendererRef","allReplacers","onImageClick","useReplacerInstanceListCreator","showYamlError","setShowYamlError","hasNewYamlError","rawMetaRef","firstHeadingRef","oldMetaRef","oldFirstHeadingRef","newMetaData","usePostMetaDataOnChange","extractInnerText","innerText","classList","contains","childNodes","nodeName","getAttribute","firstHeading","getElementsByTagName","item","useExtractFirstHeadline","tocAst","lastTocAst","usePostTocAstOnChange","errorState","buildConfiguredMarkdownIt","clearMetadata","checkYamlErrorState","text","componentReplacers","documentReference","onBeforeRendering","onAfterRendering","YamlArrayDeprecationAlert","yamlDeprecatedTags","useSelector","documentContent","metadata","DocumentRenderPane","extraClasses","onMetadataChange","onMouseEnterRenderer","onScrollRenderer","documentRenderPaneRef","markdownContent","setTocAst","internalDocumentRenderPaneRef","realWidth","changeLineMarker","linkMarkerPositions","documentRenderPaneTop","oldMarker","useAdaptedLineMarkerCallback","setContainerReference","instance","onScroll","onMouseEnter","Dropdown","drop","Toggle","Menu","ScrollingDocumentRenderPane","scrollState","onMakeScrollSource","lineMarks","setLineMarks","contentLineCount","lastScrollPosition","scrollTo","targetPosition","top","firstLineInView","lineNumber","lastMarkBefore","firstMarkAfter","i","currentMark","findLineMarks","positionBefore","positionAfter","lastMarkBeforeLine","lineHeight","scrolledPercentage","correctedPosition","Math","floor","useScrollToLineMark","userScroll","scrollTop","lineMarksBeforeScrollTop","lineMark","lineMarksAfterScrollTop","beforeLineMark","reduce","prevLineMark","currentLineMark","afterLineMark","componentHeight","distanceToBefore","percentageRaw","lineCount","innerScrolling","useOnUserScroll","IframeRendererToEditorCommunicator","onSetMarkdownContentHandler","onSetDarkModeHandler","onSetWideHandler","onSetScrollStateHandler","onSetBaseUrlHandler","handler","sendMessageToOtherSide","RenderIframeMessageType","RENDERER_READY","lineInMarkdown","ON_TASK_CHECKBOX_CHANGE","ON_FIRST_HEADING_CHANGE","SET_SCROLL_SOURCE_TO_RENDERER","metaData","ON_SET_META_DATA","SET_SCROLL_STATE","renderMessage","SET_MARKDOWN_CONTENT","SET_DARKMODE","activated","SET_WIDE","SET_BASE_URL","details","IMAGE_CLICKED","IframeCommunicator","RenderPage","useApplyDarkMode","setMarkdownContent","isWide","setWide","setScrollState","setBaseUrl","editorOrigin","iframeCommunication","iframeCommunicator","newCommunicator","setOtherSide","parent","sendRendererReady","unregisterEventListener","onSetBaseUrl","onSetMarkdownContent","onSetDarkMode","setDarkMode","onSetWide","onSetScrollState","newScrollState","sendTaskCheckBoxChange","sendFirstHeadingChanged","sendSetScrollSourceToRenderer","setDocumentMetadata","sendSetMetaData","sendSetScrollState","image","sendClickedImageUrl"],"mappings":"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","file":"static/js/17.c00e4a34.chunk.js","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\n// import { RevealOptions } from 'reveal.js'\n\ntype iso6391 = 'aa' | 'ab' | 'af' | 'am' | 'ar' | 'ar-ae' | 'ar-bh' | 'ar-dz' | 'ar-eg' | 'ar-iq' | 'ar-jo' | 'ar-kw' | 'ar-lb' | 'ar-ly' | 'ar-ma' | 'ar-om' | 'ar-qa' | 'ar-sa' | 'ar-sy' | 'ar-tn' | 'ar-ye' | 'as' | 'ay' | 'de-at' | 'de-ch' | 'de-li' | 'de-lu' | 'div' | 'dz' | 'el' | 'en' | 'en-au' | 'en-bz' | 'en-ca' | 'en-gb' | 'en-ie' | 'en-jm' | 'en-nz' | 'en-ph' | 'en-tt' | 'en-us' | 'en-za' | 'en-zw' | 'eo' | 'es' | 'es-ar' | 'es-bo' | 'es-cl' | 'es-co' | 'es-cr' | 'es-do' | 'es-ec' | 'es-es' | 'es-gt' | 'es-hn' | 'es-mx' | 'es-ni' | 'es-pa' | 'es-pe' | 'es-pr' | 'es-py' | 'es-sv' | 'es-us' | 'es-uy' | 'es-ve' | 'et' | 'eu' | 'fa' | 'fi' | 'fj' | 'fo' | 'fr' | 'fr-be' | 'fr-ca' | 'fr-ch' | 'fr-lu' | 'fr-mc' | 'fy' | 'ga' | 'gd' | 'gl' | 'gn' | 'gu' | 'ha' | 'he' | 'hi' | 'hr' | 'hu' | 'hy' | 'ia' | 'id' | 'ie' | 'ik' | 'in' | 'is' | 'it' | 'it-ch' | 'iw' | 'ja' | 'ji' | 'jw' | 'ka' | 'kk' | 'kl' | 'km' | 'kn' | 'ko' | 'kok' | 'ks' | 'ku' | 'ky' | 'kz' | 'la' | 'ln' | 'lo' | 'ls' | 'lt' | 'lv' | 'mg' | 'mi' | 'mk' | 'ml' | 'mn' | 'mo' | 'mr' | 'ms' | 'mt' | 'my' | 'na' | 'nb-no' | 'ne' | 'nl' | 'nl-be' | 'nn-no' | 'no' | 'oc' | 'om' | 'or' | 'pa' | 'pl' | 'ps' | 'pt' | 'pt-br' | 'qu' | 'rm' | 'rn' | 'ro' | 'ro-md' | 'ru' | 'ru-md' | 'rw' | 'sa' | 'sb' | 'sd' | 'sg' | 'sh' | 'si' | 'sk' | 'sl' | 'sm' | 'sn' | 'so' | 'sq' | 'sr' | 'ss' | 'st' | 'su' | 'sv' | 'sv-fi' | 'sw' | 'sx' | 'syr' | 'ta' | 'te' | 'tg' | 'th' | 'ti' | 'tk' | 'tl' | 'tn' | 'to' | 'tr' | 'ts' | 'tt' | 'tw' | 'uk' | 'ur' | 'us' | 'uz' | 'vi' | 'vo' | 'wo' | 'xh' | 'yi' | 'yo' | 'zh' | 'zh-cn' | 'zh-hk' | 'zh-mo' | 'zh-sg' | 'zh-tw' | 'zu'\n\nexport interface RawYAMLMetadata {\n  title: string | undefined\n  description: string | undefined\n  tags: string | string[] | undefined\n  robots: string | undefined\n  lang: string | undefined\n  dir: string | undefined\n  breaks: boolean | undefined\n  GA: string | undefined\n  disqus: string | undefined\n  type: string | undefined\n  slideOptions: unknown\n  opengraph: { [key: string]:string } | null\n}\n\nexport class YAMLMetaData {\n  title: string\n  description: string\n  tags: string[]\n  deprecatedTagsSyntax: boolean\n  robots: string\n  lang: iso6391\n  dir: 'ltr' | 'rtl'\n  breaks: boolean\n  GA: string\n  disqus: string\n  type: 'slide' | ''\n  // slideOptions: RevealOptions\n  opengraph: Map<string, string>\n\n  constructor (rawData: RawYAMLMetadata) {\n    this.title = rawData?.title ?? ''\n    this.description = rawData?.description ?? ''\n    this.robots = rawData?.robots ?? ''\n    this.breaks = rawData?.breaks ?? true\n    this.GA = rawData?.GA ?? ''\n    this.disqus = rawData?.disqus ?? ''\n\n    this.type = (rawData?.type as YAMLMetaData['type']) ?? ''\n    this.lang = (rawData?.lang as iso6391) ?? 'en'\n    this.dir = (rawData?.dir as YAMLMetaData['dir']) ?? 'ltr'\n\n    /* this.slideOptions = (rawData?.slideOptions as RevealOptions) ?? {\n      transition: 'none',\n      theme: 'white'\n    } */\n    if (typeof rawData?.tags === 'string') {\n      this.tags = rawData?.tags?.split(',').map(entry => entry.trim()) ?? []\n      this.deprecatedTagsSyntax = true\n    } else if (typeof rawData?.tags === 'object') {\n      this.tags = rawData?.tags?.filter(tag => tag !== null) ?? []\n      this.deprecatedTagsSyntax = false\n    } else {\n      this.tags = []\n      this.deprecatedTagsSyntax = false\n    }\n    this.opengraph = rawData?.opengraph ? new Map<string, string>(Object.entries(rawData.opengraph)) : new Map<string, string>()\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useRef } from 'react'\nimport './abc.scss'\n\nexport interface AbcFrameProps {\n  code: string\n}\n\nexport const AbcFrame: React.FC<AbcFrameProps> = ({ code }) => {\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!container.current) {\n      return\n    }\n    const actualContainer = container.current\n    import(/* webpackChunkName: \"abc.js\" */ 'abcjs').then((imp) => {\n      imp.renderAbc(actualContainer, code)\n    }).catch(() => { console.error('error while loading abcjs') })\n  }, [code])\n\n  return <div ref={container} className={'abcjs-score bg-white text-black text-center overflow-x-auto'}/>\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { AbcFrame } from './abc-frame'\n\nexport class AbcReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'abc' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <AbcFrame code={code}/>\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport { ReactElement } from 'react'\n\nexport type SubNodeTransform = (node: DomElement, subIndex: number) => ReactElement | void | null\n\nexport type NativeRenderer = () => ReactElement\n\nexport type MarkdownItPlugin = MarkdownIt.PluginSimple | MarkdownIt.PluginWithOptions | MarkdownIt.PluginWithParams\n\nexport abstract class ComponentReplacer {\n  public abstract getReplacement (node: DomElement, subNodeTransform: SubNodeTransform, nativeRenderer: NativeRenderer): (ReactElement | null | undefined);\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\n\nexport const getAttributesFromHedgeDocTag = (node: DomElement, tagName: string): ({ [s: string]: string; }|undefined) => {\n  if (node.name !== `app-${tagName}` || !node.attribs) {\n    return\n  }\n  return node.attribs\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { useEffect, useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { IconName } from '../../../common/fork-awesome/types'\nimport { ShowIf } from '../../../common/show-if/show-if'\nimport './one-click-embedding.scss'\n\ninterface OneClickFrameProps {\n  onImageFetch?: () => Promise<string>\n  loadingImageUrl?: string\n  hoverIcon?: IconName\n  hoverTextI18nKey?: string\n  tooltip?: string\n  containerClassName?: string\n  previewContainerClassName?: string\n  onActivate?: () => void\n}\n\nexport const OneClickEmbedding: React.FC<OneClickFrameProps> = ({ previewContainerClassName, containerClassName, onImageFetch, loadingImageUrl, children, tooltip, hoverIcon, hoverTextI18nKey, onActivate }) => {\n  const [showFrame, setShowFrame] = useState(false)\n  const [previewImageUrl, setPreviewImageUrl] = useState(loadingImageUrl)\n\n  const showChildren = () => {\n    setShowFrame(true)\n    if (onActivate) {\n      onActivate()\n    }\n  }\n\n  useEffect(() => {\n    if (!onImageFetch) {\n      return\n    }\n    onImageFetch().then((imageLink) => {\n      setPreviewImageUrl(imageLink)\n    }).catch((message) => {\n      console.error(message)\n    })\n  }, [onImageFetch])\n\n  return (\n    <span className={ containerClassName }>\n      <ShowIf condition={showFrame}>\n        {children}\n      </ShowIf>\n      <ShowIf condition={!showFrame}>\n        <span className={`one-click-embedding ${previewContainerClassName || ''}`} onClick={showChildren}>\n          <ShowIf condition={!!previewImageUrl}>\n            <img className={'one-click-embedding-preview'} src={previewImageUrl} alt={tooltip || ''} title={tooltip || ''}/>\n          </ShowIf>\n          <ShowIf condition={!!hoverIcon}>\n            <span className='one-click-embedding-icon text-center'>\n              <i className={`fa fa-${hoverIcon as string} fa-5x mb-2`} />\n              <ShowIf condition={!!hoverTextI18nKey}>\n                <br />\n                <Trans i18nKey={hoverTextI18nKey} />\n              </ShowIf>\n            </span>\n          </ShowIf>\n        </span>\n      </ShowIf>\n    </span>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\nexport interface AsciinemaFrameProps {\n  id: string\n}\n\nexport const AsciinemaFrame: React.FC<AsciinemaFrameProps> = ({ id }) => {\n  return (\n    <OneClickEmbedding\n      containerClassName={'embed-responsive embed-responsive-16by9'}\n      previewContainerClassName={'embed-responsive-item'}\n      hoverIcon={'play'}\n      loadingImageUrl={`https://asciinema.org/a/${id}.png`}>\n      <iframe className='embed-responsive-item' title={`asciinema cast ${id}`}\n        src={`https://asciinema.org/a/${id}/embed?autoplay=1`}/>\n    </OneClickEmbedding>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:asciinema\\.org\\/a\\/)/\nconst idRegex = /(\\d+)/\nconst tailRegex = /(?:[./?#].*)?/\nconst gistUrlRegex = new RegExp(`(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${gistUrlRegex.source}$`, 'i')\n\nexport const replaceAsciinemaLink: RegexOptions = {\n  name: 'asciinema-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-asciinema id=\"${match}\"></app-asciinema>`\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { AsciinemaFrame } from './asciinema-frame'\nimport { replaceAsciinemaLink } from './replace-asciinema-link'\n\nexport class AsciinemaReplacer extends ComponentReplacer {\n  private counterMap: Map<string, number> = new Map<string, number>()\n\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'asciinema')\n    if (attributes && attributes.id) {\n      const asciinemaId = attributes.id\n      const count = (this.counterMap.get(asciinemaId) || 0) + 1\n      this.counterMap.set(asciinemaId, count)\n      return (\n        <AsciinemaFrame id={asciinemaId}/>\n      )\n    }\n  }\n\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceAsciinemaLink)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const parseCsv = (csvText: string, csvColumnDelimiter: string): string[][] => {\n  const rows = csvText.split('\\n')\n  if (!rows || rows.length === 0) {\n    return []\n  }\n  const splitRegex = new RegExp(`${csvColumnDelimiter}(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)`)\n  return rows.filter(row => row !== '').map(row => row.split(splitRegex))\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { useMemo } from 'react'\nimport { parseCsv } from './csv-parser'\n\nexport interface CsvTableProps {\n  code: string\n  delimiter: string\n  showHeader: boolean\n  tableRowClassName?: string\n  tableColumnClassName?: string\n}\n\nexport const CsvTable: React.FC<CsvTableProps> = ({ code, delimiter, showHeader, tableRowClassName, tableColumnClassName }) => {\n  const { rowsWithColumns, headerRow } = useMemo(() => {\n    const rowsWithColumns = parseCsv(code.trim(), delimiter)\n    let headerRow: string[] = []\n    if (showHeader) {\n      headerRow = rowsWithColumns.splice(0, 1)[0]\n    }\n    return { rowsWithColumns, headerRow }\n  }, [code, delimiter, showHeader])\n\n  const renderTableHeader = (row: string[]) => {\n    if (row !== []) {\n      return (\n        <thead>\n          <tr>\n            {\n              row.map((column, columnNumber) => (\n                <th\n                  key={`header-${columnNumber}`}\n                >\n                  {column}\n                </th>\n              ))\n            }\n          </tr>\n        </thead>\n      )\n    }\n  }\n\n  const renderTableBody = (rows: string[][]) => {\n    return (\n      <tbody>\n        {\n          rows.map((row, rowNumber) => (\n            <tr className={tableRowClassName} key={`row-${rowNumber}`}>\n              {\n                row.map((column, columnIndex) => (\n                  <td\n                    className={tableColumnClassName}\n                    key={`cell-${rowNumber}-${columnIndex}`}\n                  >\n                    {column.replace(/^\"|\"$/g, '')}\n                  </td>\n                ))\n              }\n            </tr>\n          ))\n        }\n      </tbody>\n    )\n  }\n\n  return (\n    <table className={'csv-html-table table-striped'}>\n      {renderTableHeader(headerRow)}\n      {renderTableBody(rowsWithColumns)}\n    </table>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { CsvTable } from './csv-table'\n\nexport class CsvReplacer extends ComponentReplacer {\n  public getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'csv' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    const extraData = codeNode.attribs['data-extra']\n    const extraRegex = /\\s*(delimiter=([^\\s]*))?\\s*(header)?/\n    const extraInfos = extraRegex.exec(extraData)\n\n    let delimiter = ','\n    let showHeader = false\n\n    if (extraInfos) {\n      delimiter = extraInfos[2] || delimiter\n      showHeader = extraInfos[3] !== undefined\n    }\n\n    return <CsvTable code={code} delimiter={delimiter} showHeader={showHeader}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useIsDarkModeActivated } from '../../../../../hooks/common/use-is-dark-mode-activated'\n\nexport interface FlowChartProps {\n  code: string\n}\n\nexport const FlowChart: React.FC<FlowChartProps> = ({ code }) => {\n  const diagramRef = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState(false)\n  const darkModeActivated = useIsDarkModeActivated()\n\n  useTranslation()\n\n  useEffect(() => {\n    if (diagramRef.current === null) {\n      return\n    }\n    const currentDiagramRef = diagramRef.current\n    import(/* webpackChunkName: \"flowchart.js\" */ 'flowchart.js').then((imp) => {\n      const parserOutput = imp.parse(code)\n      try {\n        parserOutput.drawSVG(currentDiagramRef, {\n          'line-width': 2,\n          fill: 'none',\n          'font-size': 16,\n          'line-color': darkModeActivated ? '#ffffff' : '#000000',\n          'element-color': darkModeActivated ? '#ffffff' : '#000000',\n          'font-color': darkModeActivated ? '#ffffff' : '#000000',\n          'font-family': 'Source Sans Pro, \"Twemoji Mozilla\", monospace'\n        })\n        setError(false)\n      } catch (error) {\n        setError(true)\n      }\n    }).catch(() => { console.error('error while loading flowchart.js') })\n\n    return () => {\n      Array.from(currentDiagramRef.children).forEach(value => value.remove())\n    }\n  }, [code, darkModeActivated])\n\n  if (error) {\n    return (\n      <Alert variant={'danger'}>\n        <Trans i18nKey={'renderer.flowchart.invalidSyntax'}/>\n      </Alert>)\n  } else {\n    return <div ref={diagramRef} className={'text-center'}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { FlowChart } from './flowchart/flowchart'\n\nexport class FlowchartReplacer extends ComponentReplacer {\n  public getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'flow' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <FlowChart code={code}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport './gist-frame.scss'\n\nexport interface GistFrameProps {\n  id: string\n}\n\ninterface resizeEvent {\n  size: number\n  id: string\n}\n\nexport const GistFrame: React.FC<GistFrameProps> = ({ id }) => {\n  const iframeHtml = useMemo(() => {\n    return (`\n      <html lang=\"en\">\n        <head>\n          <base target=\"_parent\">\n          <title>gist</title>\n          <style>\n            * { font-size:12px; }\n            body{ overflow:hidden; margin: 0;}\n          </style>\n          <script type=\"text/javascript\">\n            function doLoad() {\n                window.parent.postMessage({eventType: 'gistResize', size: document.body.scrollHeight, id: '${id}'}, '*')\n                tweakLinks();\n            }\n            function tweakLinks() {\n                document.querySelectorAll(\".gist-meta > a\").forEach((link) => {\n                    link.rel=\"noopener noreferer\"\n                    link.target=\"_blank\"\n                })\n            }\n          </script>\n        </head>\n        <body onload=\"doLoad()\">\n          <script type=\"text/javascript\" src=\"https://gist.github.com/${id}.js\"></script>\n        </body>\n      </html>`)\n  }, [id])\n\n  const [frameHeight, setFrameHeight] = useState(0)\n\n  const sizeMessage = useCallback((message: MessageEvent) => {\n    const data = message.data as resizeEvent\n    if (data.id !== id) {\n      return\n    }\n    setFrameHeight(data.size)\n  }, [id])\n\n  useEffect(() => {\n    window.addEventListener('message', sizeMessage)\n    return () => {\n      window.removeEventListener('message', sizeMessage)\n    }\n  }, [sizeMessage])\n\n  return (\n    <iframe\n      sandbox=\"allow-scripts allow-top-navigation-by-user-activation allow-popups\"\n      width='100%'\n      height={`${frameHeight}px`}\n      frameBorder='0'\n      title={`gist ${id}`}\n      src={`data:text/html;base64,${btoa(iframeHtml)}`}/>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/gist-preview.d7b810ad.png\";","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:gist\\.github\\.com\\/)/\nconst idRegex = /(\\w+\\/\\w+)/\nconst tailRegex = /(?:[./?#].*)?/\nconst gistUrlRegex = new RegExp(`(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${gistUrlRegex.source}$`, 'i')\n\nexport const replaceGistLink: RegexOptions = {\n  name: 'gist-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-gist id=\"${match}\"></app-gist>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst finalRegex = /^{%gist (\\w+\\/\\w+) ?%}$/\n\nexport const replaceLegacyGistShortCode: RegexOptions = {\n  name: 'legacy-gist-short-code',\n  regex: finalRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-gist id=\"${match}\"></app-gist>`\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { GistFrame } from './gist-frame'\nimport preview from './gist-preview.png'\nimport { replaceGistLink } from './replace-gist-link'\nimport { replaceLegacyGistShortCode } from './replace-legacy-gist-short-code'\n\nexport class GistReplacer extends ComponentReplacer {\n  private counterMap: Map<string, number> = new Map<string, number>()\n\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'gist')\n    if (attributes && attributes.id) {\n      const gistId = attributes.id\n      const count = (this.counterMap.get(gistId) || 0) + 1\n      this.counterMap.set(gistId, count)\n      return (\n        <OneClickEmbedding previewContainerClassName={'gist-frame'} loadingImageUrl={preview} hoverIcon={'github'} tooltip={'click to load gist'}>\n          <GistFrame id={gistId}/>\n        </OneClickEmbedding>\n      )\n    }\n  }\n\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceGistLink)\n    markdownItRegex(markdownIt, replaceLegacyGistShortCode)\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { ShowIf } from '../../../common/show-if/show-if'\n\nexport interface GraphvizFrameProps {\n  code: string\n}\n\nexport const GraphvizFrame: React.FC<GraphvizFrameProps> = ({ code }) => {\n  const container = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n\n  const showError = useCallback((error: string) => {\n    if (!container.current) {\n      return\n    }\n    setError(error)\n    console.error(error)\n    container.current.querySelectorAll('svg').forEach(child => child.remove())\n  }, [])\n\n  useEffect(() => {\n    if (!container.current) {\n      return\n    }\n    const actualContainer = container.current\n\n    import('@hpcc-js/wasm')\n      .then((wasmPlugin) => {\n        wasmPlugin.wasmFolder('/static/js')\n      })\n      .then(() => import(/* webpackChunkName: \"d3-graphviz\" */ 'd3-graphviz'))\n      .then((graphvizImport) => {\n        try {\n          setError(undefined)\n          graphvizImport.graphviz(actualContainer, {\n            useWorker: false,\n            zoom: false\n          })\n            .onerror(showError)\n            .renderDot(code)\n        } catch (error) {\n          showError(error)\n        }\n      }).catch(() => { console.error('error while loading graphviz') })\n  }, [code, error, showError])\n\n  return <Fragment>\n    <ShowIf condition={!!error}>\n      <Alert variant={'warning'}>{error}</Alert>\n    </ShowIf>\n    <div className={'text-center overflow-x-auto'} ref={container} />\n  </Fragment>\n}\n\nexport default GraphvizFrame\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { GraphvizFrame } from './graphviz-frame'\n\nexport class GraphvizReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'graphviz' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <GraphvizFrame code={code}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { HighlightedCode } from './highlighted-code/highlighted-code'\n\nexport class HighlightedCodeReplacer extends ComponentReplacer {\n  private lastLineNumber = 0;\n\n  public getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const language = codeNode.attribs['data-highlight-language']\n    const extraData = codeNode.attribs['data-extra']\n    const extraInfos = /(=(\\d+|\\+)?)?(!?)/.exec(extraData)\n\n    let showLineNumbers = false\n    let startLineNumberAttribute = ''\n    let wrapLines = false\n\n    if (extraInfos) {\n      showLineNumbers = extraInfos[1]?.startsWith('=') || false\n      startLineNumberAttribute = extraInfos[2]\n      wrapLines = extraInfos[3] === '!'\n    }\n\n    const startLineNumber = startLineNumberAttribute === '+' ? this.lastLineNumber : (parseInt(startLineNumberAttribute) || 1)\n    const code = codeNode.children[0].data as string\n\n    if (showLineNumbers) {\n      this.lastLineNumber = startLineNumber + code.split('\\n')\n        .filter(line => !!line).length\n    }\n\n    return <HighlightedCode language={language} startLineNumber={showLineNumbers ? startLineNumber : undefined} wrapLines={wrapLines} code={code}/>\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { ProxyImageFrame } from './proxy-image-frame'\n\nexport type ImageClickHandler = (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void;\n\nexport class ImageReplacer extends ComponentReplacer {\n  private readonly clickHandler?: ImageClickHandler\n\n  constructor (clickHandler?: ImageClickHandler) {\n    super()\n    this.clickHandler = clickHandler\n  }\n\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    if (node.name === 'img' && node.attribs) {\n      return <ProxyImageFrame\n        id={node.attribs.id}\n        className={`${node.attribs.class} cursor-zoom-in`}\n        src={node.attribs.src}\n        alt={node.attribs.alt}\n        title={node.attribs.title}\n        width={node.attribs.width}\n        height={node.attribs.height}\n        onClick={this.clickHandler}\n      />\n    }\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport mathJax from 'markdown-it-mathjax'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport './katex.scss'\n\nconst getNodeIfKatexBlock = (node: DomElement): (DomElement | undefined) => {\n  if (node.name !== 'p' || !node.children || node.children.length === 0) {\n    return\n  }\n  return node.children.find((subnode) => {\n    return (subnode.name === 'app-katex' && subnode.attribs?.inline === undefined)\n  })\n}\n\nconst getNodeIfInlineKatex = (node: DomElement): (DomElement | undefined) => {\n  return (node.name === 'app-katex' && node.attribs?.inline !== undefined) ? node : undefined\n}\n\nconst KaTeX = React.lazy(() => import(/* webpackChunkName: \"katex\" */ '@matejmazur/react-katex'))\n\nexport class KatexReplacer extends ComponentReplacer {\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    const katex = getNodeIfKatexBlock(node) || getNodeIfInlineKatex(node)\n    if (katex?.children && katex.children[0]) {\n      const mathJaxContent = katex.children[0]?.data as string\n      const isInline = (katex.attribs?.inline) !== undefined\n      return <KaTeX block={!isInline} math={mathJaxContent} errorColor={'#cc0000'}/>\n    }\n  }\n\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = mathJax({\n    beforeMath: '<app-katex>',\n    afterMath: '</app-katex>',\n    beforeInlineMath: '<app-katex inline>',\n    afterInlineMath: '</app-katex>',\n    beforeDisplayMath: '<app-katex>',\n    afterDisplayMath: '</app-katex>'\n  })\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport { ComponentReplacer } from '../ComponentReplacer'\n\nexport class LinemarkerReplacer extends ComponentReplacer {\n  public getReplacement (codeNode: DomElement): null | undefined {\n    return codeNode.name === 'app-linemarker' ? null : undefined\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { DomElement } from 'domhandler'\nimport React, { ReactElement } from 'react'\nimport { ComponentReplacer, NativeRenderer, SubNodeTransform } from '../ComponentReplacer'\n\nexport const createJumpToMarkClickEventHandler = (id: string) => {\n  return (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    document.getElementById(id)?.scrollIntoView()\n    event.preventDefault()\n  }\n}\n\nexport class LinkReplacer extends ComponentReplacer {\n  constructor (private baseUrl?: string) {\n    super()\n  }\n\n  public getReplacement (node: DomElement, subNodeTransform: SubNodeTransform, nativeRenderer: NativeRenderer): (ReactElement | null | undefined) {\n    if (node.name !== 'a' || !node.attribs || !node.attribs.href) {\n      return undefined\n    }\n\n    const url = node.attribs.href\n    const isJumpMark = url.substr(0, 1) === '#'\n\n    const id = url.substr(1)\n\n    try {\n      node.attribs.href = new URL(url, this.baseUrl).toString()\n    } catch (e) {\n      node.attribs.href = url\n    }\n\n    if (isJumpMark) {\n      return <span onClick={createJumpToMarkClickEventHandler(id)}>\n        {nativeRenderer()}\n      </span>\n    } else {\n      node.attribs.rel = \"noreferer noopener\"\n      node.attribs.target = \"_blank\"\n      return nativeRenderer()\n    }\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../fork-awesome/fork-awesome-icon'\n\nexport interface LockButtonProps {\n  locked: boolean,\n  onLockedChanged: (newState: boolean) => void\n  title: string\n}\n\nexport const LockButton: React.FC<LockButtonProps> = ({ locked, onLockedChanged, title }) => {\n  return (\n    <Button variant='dark' size='sm' onClick={() => onLockedChanged(!locked)} title={title}>\n      { locked\n        ? <ForkAwesomeIcon icon='lock'/>\n        : <ForkAwesomeIcon icon='unlock'/>\n      }\n    </Button>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { LockButton } from '../../../common/lock-button/lock-button'\nimport '../../utils/button-inside.scss'\n\nexport interface MarkmapFrameProps {\n  code: string\n}\n\nconst blockHandler = (event: Event): void => {\n  event.stopPropagation()\n}\n\nexport const MarkmapFrame: React.FC<MarkmapFrameProps> = ({ code }) => {\n  const { t } = useTranslation()\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [disablePanAndZoom, setDisablePanAndZoom] = useState(true)\n\n  useEffect(() => {\n    if (diagramContainer.current) {\n      if (disablePanAndZoom) {\n        diagramContainer.current.addEventListener('wheel', blockHandler, true)\n        diagramContainer.current.addEventListener('mousedown', blockHandler, true)\n        diagramContainer.current.addEventListener('click', blockHandler, true)\n        diagramContainer.current.addEventListener('dblclick', blockHandler, true)\n        diagramContainer.current.addEventListener('touchstart', blockHandler, true)\n      } else {\n        diagramContainer.current.removeEventListener('wheel', blockHandler, true)\n        diagramContainer.current.removeEventListener('mousedown', blockHandler, true)\n        diagramContainer.current.removeEventListener('click', blockHandler, true)\n        diagramContainer.current.removeEventListener('dblclick', blockHandler, true)\n        diagramContainer.current.removeEventListener('touchstart', blockHandler, true)\n      }\n    }\n  }, [diagramContainer, disablePanAndZoom])\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    const actualContainer = diagramContainer.current\n    import('./markmap-loader').then(({ markmapLoader }) => {\n      try {\n        const svg: SVGSVGElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n        svg.setAttribute('width', '100%')\n        actualContainer.querySelectorAll('svg').forEach(child => child.remove())\n        actualContainer.appendChild(svg)\n        markmapLoader(svg, code)\n      } catch(error) {\n        console.error(error)\n      }\n    }).catch(() => {\n      console.error('error while loading markmap')\n    })\n  }, [code])\n\n  return (\n    <Fragment>\n      <div className={'text-center'} ref={diagramContainer}/>\n      <div className={'text-right button-inside'}>\n        <LockButton locked={disablePanAndZoom} onLockedChanged={(newState => setDisablePanAndZoom(newState))}\n                    title={disablePanAndZoom ? t('renderer.markmap.locked') : t('renderer.markmap.unlocked')}/>\n      </div>\n    </Fragment>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MarkmapFrame } from './markmap-frame'\n\nexport class MarkmapReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'markmap' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <MarkmapFrame code={code}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { ShowIf } from '../../../common/show-if/show-if'\nimport './mermaid.scss'\n\nexport interface MermaidChartProps {\n  code: string\n}\n\ninterface MermaidParseError {\n  str: string\n}\n\nlet mermaidInitialized = false\n\nexport const MermaidChart: React.FC<MermaidChartProps> = ({ code }) => {\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (!mermaidInitialized) {\n      import('mermaid').then((mermaid) => {\n        mermaid.default.initialize({ startOnLoad: false })\n        mermaidInitialized = true\n      }).catch(() => { console.error('error while loading mermaid') })\n    }\n  }, [])\n\n  const showError = useCallback((error: string) => {\n    setError(error)\n    console.error(error)\n    if (!diagramContainer.current) {\n      return\n    }\n    diagramContainer.current.querySelectorAll('svg').forEach(child => child.remove())\n  }, [setError])\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    import('mermaid').then((mermaid) => {\n      try {\n          if (!diagramContainer.current) {\n            return\n          }\n          mermaid.default.parse(code)\n          delete diagramContainer.current.dataset.processed\n          diagramContainer.current.textContent = code\n          mermaid.default.init(diagramContainer.current)\n          setError(undefined)\n      } catch (error) {\n        const message = (error as MermaidParseError).str\n        showError(message || t('renderer.mermaid.unknownError'))\n      }\n    }).catch(() => showError('Error while loading mermaid'))\n  }, [code, showError, t])\n\n  return <Fragment>\n    <ShowIf condition={!!error}>\n      <Alert variant={'warning'}>{error}</Alert>\n    </ShowIf>\n    <div className={'text-center mermaid text-black'} ref={diagramContainer}/>\n  </Fragment>\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MermaidChart } from './mermaid-chart'\n\nexport class MermaidReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'mermaid' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <MermaidChart code={code}/>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport './possible-wider-replacer.scss'\n\nconst enabledTags = ['img', 'app-youtube', 'app-vimeo', 'app-asciinema', 'app-pdf']\n\n/**\n * This replacer doesn't actually replace something.\n * It just uses the ComponentReplacer-Class to get access to the DOM and\n * appends the \"wider-possible\" class to paragraphs with special content.\n */\nexport class PossibleWiderReplacer extends ComponentReplacer {\n  public getReplacement (node: DomElement): (undefined) {\n    if (node.name !== 'p') {\n      return\n    }\n    if (!node.children || node.children.length === 0) {\n      return\n    }\n\n    if (node.children.find((subNode) => subNode.name && enabledTags.includes(subNode.name))) {\n      if (!node.attribs) {\n        node.attribs = {}\n      }\n\n      node.attribs.class = `${node.attribs.class ?? ''} wider-possible`\n    }\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport { ReactElement } from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\n\nconst isColorExtraElement = (node: DomElement | undefined): boolean => {\n  if (!node || !node.attribs || !node.attribs.class || !node.attribs['data-color']) {\n    return false\n  }\n  return (node.name === 'span' && node.attribs.class === 'quote-extra')\n}\n\nconst findQuoteOptionsParent = (nodes: DomElement[]): DomElement | undefined => {\n  return nodes.find((child) => {\n    if (child.name !== 'p' || !child.children || child.children.length < 1) {\n      return false\n    }\n    return child.children.find(isColorExtraElement) !== undefined\n  })\n}\n\nexport class QuoteOptionsReplacer extends ComponentReplacer {\n  public getReplacement (node: DomElement):ReactElement|undefined {\n    if (node.name !== 'blockquote' || !node.children || node.children.length < 1) {\n      return\n    }\n    const paragraph = findQuoteOptionsParent(node.children)\n    if (!paragraph) {\n      return\n    }\n    const childElements = paragraph.children || []\n    const optionsTag = childElements.find(isColorExtraElement)\n    if (!optionsTag) {\n      return\n    }\n    paragraph.children = childElements.filter(elem => !isColorExtraElement(elem))\n    const attributes = optionsTag.attribs\n    if (!attributes || !attributes['data-color']) {\n      return\n    }\n    node.attribs = Object.assign(node.attribs || {}, { style: `border-left-color: ${attributes['data-color']};` })\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport links from '../../../../links.json'\nimport { TranslatedExternalLink } from '../../../common/links/translated-external-link'\n\nexport const DeprecationWarning: React.FC = () => {\n  useTranslation()\n\n  return (\n    <Alert data-cy={'yaml'} className={'mt-2'} variant={'warning'}>\n      <span className={'text-wrap'}>\n        <Trans i18nKey={'renderer.sequence.deprecationWarning'}/>\n      </span>\n      <br/>\n      <TranslatedExternalLink i18nKey={'common.readForMoreInfo'} className={'text-primary'} href={links.faq}/>\n    </Alert>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React, { Fragment } from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MermaidChart } from '../mermaid/mermaid-chart'\nimport { DeprecationWarning } from './deprecation-warning'\n\nexport class SequenceDiagramReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'sequence' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <Fragment>\n      <DeprecationWarning/>\n      <MermaidChart code={'sequenceDiagram\\n' + code}/>\n    </Fragment>\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React, { ReactElement } from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\n\nexport class TaskListReplacer extends ComponentReplacer {\n  onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void\n\n  constructor (onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void) {\n    super()\n    this.onTaskCheckedChange = onTaskCheckedChange\n  }\n\n  handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const lineNum = Number(event.currentTarget.dataset.line)\n    if (this.onTaskCheckedChange) {\n      this.onTaskCheckedChange(lineNum, event.currentTarget.checked)\n    }\n  }\n\n  public getReplacement (node: DomElement): (ReactElement | undefined) {\n    if (node.attribs?.class !== 'task-list-item-checkbox') {\n      return\n    }\n    return (\n      <input\n        disabled={this.onTaskCheckedChange === undefined}\n        className=\"task-list-item-checkbox\"\n        type=\"checkbox\"\n        checked={node.attribs.checked !== undefined}\n        onChange={this.handleCheckboxChange}\n        id={node.attribs.id}\n        data-line={node.attribs['data-line']}\n      />\n    )\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { VisualizationSpec } from 'vega-embed'\nimport { ShowIf } from '../../../common/show-if/show-if'\n\nexport interface VegaChartProps {\n  code: string\n}\n\nexport const VegaChart: React.FC<VegaChartProps> = ({ code }) => {\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n  const { t } = useTranslation()\n\n  const showError = useCallback((error: string) => {\n    if (!diagramContainer.current) {\n      return\n    }\n    console.error(error)\n    setError(error)\n  }, [])\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    import(/* webpackChunkName: \"vega\" */ 'vega-embed').then((embed) => {\n      try {\n        if (!diagramContainer.current) {\n          return\n        }\n\n        const spec = JSON.parse(code) as VisualizationSpec\n        embed.default(diagramContainer.current, spec, {\n          actions: {\n            export: true,\n            source: false,\n            compiled: false,\n            editor: false\n          },\n          i18n: {\n            PNG_ACTION: t('renderer.vega-lite.png'),\n            SVG_ACTION: t('renderer.vega-lite.svg')\n          }\n        })\n          .then(() => setError(undefined))\n          .catch(err => showError(err))\n      } catch (err) {\n        showError(t('renderer.vega-lite.errorJson'))\n      }\n    }).catch(() => { console.error('error while loading vega-light') })\n  }, [code, showError, t])\n\n  return <Fragment>\n    <ShowIf condition={!!error}>\n      <Alert variant={'danger'}>{error}</Alert>\n    </ShowIf>\n    <div className={'text-center'}>\n      <div ref={diagramContainer}/>\n    </div>\n  </Fragment>\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { VegaChart } from './vega-chart'\n\nexport class VegaReplacer implements ComponentReplacer {\n  getReplacement (codeNode: DomElement): React.ReactElement | undefined {\n    if (codeNode.name !== 'code' || !codeNode.attribs || !codeNode.attribs['data-highlight-language'] || codeNode.attribs['data-highlight-language'] !== 'vega-lite' || !codeNode.children || !codeNode.children[0]) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <VegaChart code={code}/>\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nexport const replaceLegacyVimeoShortCode: RegexOptions = {\n  name: 'legacy-vimeo-short-code',\n  regex: /^{%vimeo ([\\d]{6,11}) ?%}$/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-vimeo id=\"${match}\"></app-vimeo>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:player\\.)?(?:vimeo\\.com\\/)(?:(?:channels|album|ondemand|groups)\\/\\w+\\/)?(?:video\\/)?/\nconst idRegex = /([\\d]{6,11})/\nconst tailRegex = /(?:[?#].*)?/\nconst vimeoVideoUrlRegex = new RegExp(`(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${vimeoVideoUrlRegex.source}$`, 'i')\n\nexport const replaceVimeoLink: RegexOptions = {\n  name: 'vimeo-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-vimeo id=\"${match}\"></app-vimeo>`\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React, { useCallback } from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\ninterface VimeoApiResponse {\n  // Vimeo uses strange names for their fields. ESLint doesn't like that.\n  // eslint-disable-next-line camelcase\n  thumbnail_large?: string\n}\n\nexport interface VimeoFrameProps {\n  id: string\n}\n\nexport const VimeoFrame: React.FC<VimeoFrameProps> = ({ id }) => {\n  const getPreviewImageLink = useCallback(async () => {\n    const response = await fetch(`https://vimeo.com/api/v2/video/${id}.json`, {\n      credentials: 'omit',\n      referrerPolicy: 'no-referrer'\n    })\n    if (response.status !== 200) {\n      throw new Error('Error while loading data from vimeo api')\n    }\n    const vimeoResponse: VimeoApiResponse[] = await response.json() as VimeoApiResponse[]\n\n    if (vimeoResponse[0] && vimeoResponse[0].thumbnail_large) {\n      return vimeoResponse[0].thumbnail_large\n    } else {\n      throw new Error('Invalid vimeo response')\n    }\n  }, [id])\n\n  return (\n    <OneClickEmbedding containerClassName={'embed-responsive embed-responsive-16by9'} previewContainerClassName={'embed-responsive-item'} loadingImageUrl={'https://i.vimeocdn.com/video/'} hoverIcon={'vimeo-square'}\n      onImageFetch={getPreviewImageLink}>\n      <iframe className='embed-responsive-item' title={`vimeo video of ${id}`}\n        src={`https://player.vimeo.com/video/${id}?autoplay=1`}\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"/>\n    </OneClickEmbedding>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { replaceLegacyVimeoShortCode } from './replace-legacy-vimeo-short-code'\nimport { replaceVimeoLink } from './replace-vimeo-link'\nimport { VimeoFrame } from './vimeo-frame'\n\nexport class VimeoReplacer extends ComponentReplacer {\n  private counterMap: Map<string, number> = new Map<string, number>()\n\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'vimeo')\n    if (attributes && attributes.id) {\n      const videoId = attributes.id\n      const count = (this.counterMap.get(videoId) || 0) + 1\n      this.counterMap.set(videoId, count)\n      return <VimeoFrame id={videoId}/>\n    }\n  }\n\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceVimeoLink)\n    markdownItRegex(markdownIt, replaceLegacyVimeoShortCode)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nexport const replaceLegacyYoutubeShortCode: RegexOptions = {\n  name: 'legacy-youtube-short-code',\n  regex: /^{%youtube ([^\"&?\\\\/\\s]{11}) ?%}$/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-youtube id=\"${match}\"></app-youtube>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst subdomainRegex = /(?:www.)?/\nconst pathRegex = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)/\nconst idRegex = /([^\"&?\\\\/\\s]{11})/\nconst tailRegex = /(?:[?&#].*)?/\nconst youtubeVideoUrlRegex = new RegExp(`(?:${protocolRegex.source}${subdomainRegex.source}${pathRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${youtubeVideoUrlRegex.source}$`, 'i')\n\nexport const replaceYouTubeLink: RegexOptions = {\n  name: 'youtube-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-youtube id=\"${match}\"></app-youtube>`\n  }\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport React from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\nexport interface YouTubeFrameProps {\n  id: string\n}\n\nexport const YouTubeFrame: React.FC<YouTubeFrameProps> = ({ id }) => {\n  return (\n    <OneClickEmbedding containerClassName={'embed-responsive embed-responsive-16by9'}\n      previewContainerClassName={'embed-responsive-item'} hoverIcon={'youtube-play'}\n      loadingImageUrl={`//i.ytimg.com/vi/${id}/maxresdefault.jpg`}>\n      <iframe className='embed-responsive-item' title={`youtube video of ${id}`}\n        src={`//www.youtube-nocookie.com/embed/${id}?autoplay=1`}\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"/>\n    </OneClickEmbedding>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { replaceLegacyYoutubeShortCode } from './replace-legacy-youtube-short-code'\nimport { replaceYouTubeLink } from './replace-youtube-link'\nimport { YouTubeFrame } from './youtube-frame'\n\nexport class YoutubeReplacer extends ComponentReplacer {\n  private counterMap: Map<string, number> = new Map<string, number>()\n\n  public getReplacement (node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'youtube')\n    if (attributes && attributes.id) {\n      const videoId = attributes.id\n      const count = (this.counterMap.get(videoId) || 0) + 1\n      this.counterMap.set(videoId, count)\n      return <YouTubeFrame id={videoId}/>\n    }\n  }\n\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceYouTubeLink)\n    markdownItRegex(markdownIt, replaceLegacyYoutubeShortCode)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useMemo } from 'react'\nimport { AbcReplacer } from '../replace-components/abc/abc-replacer'\nimport { AsciinemaReplacer } from '../replace-components/asciinema/asciinema-replacer'\nimport { ComponentReplacer } from '../replace-components/ComponentReplacer'\nimport { CsvReplacer } from '../replace-components/csv/csv-replacer'\nimport { FlowchartReplacer } from '../replace-components/flow/flowchart-replacer'\nimport { GistReplacer } from '../replace-components/gist/gist-replacer'\nimport { GraphvizReplacer } from '../replace-components/graphviz/graphviz-replacer'\nimport { HighlightedCodeReplacer } from '../replace-components/highlighted-fence/highlighted-fence-replacer'\nimport { ImageClickHandler, ImageReplacer } from '../replace-components/image/image-replacer'\nimport { KatexReplacer } from '../replace-components/katex/katex-replacer'\nimport { LinemarkerReplacer } from '../replace-components/linemarker/linemarker-replacer'\nimport { LinkReplacer } from '../replace-components/link-replacer/link-replacer'\nimport { MarkmapReplacer } from '../replace-components/markmap/markmap-replacer'\nimport { MermaidReplacer } from '../replace-components/mermaid/mermaid-replacer'\nimport { PossibleWiderReplacer } from '../replace-components/possible-wider/possible-wider-replacer'\nimport { QuoteOptionsReplacer } from '../replace-components/quote-options/quote-options-replacer'\nimport { SequenceDiagramReplacer } from '../replace-components/sequence-diagram/sequence-diagram-replacer'\nimport { TaskListReplacer } from '../replace-components/task-list/task-list-replacer'\nimport { VegaReplacer } from '../replace-components/vega-lite/vega-replacer'\nimport { VimeoReplacer } from '../replace-components/vimeo/vimeo-replacer'\nimport { YoutubeReplacer } from '../replace-components/youtube/youtube-replacer'\n\nexport const useReplacerInstanceListCreator = (onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void,\n                                               onImageClick?: ImageClickHandler, baseUrl?: string): () => ComponentReplacer[] => useMemo(() =>\n  () => [\n    new LinkReplacer(baseUrl),\n    new LinemarkerReplacer(),\n    new PossibleWiderReplacer(),\n    new GistReplacer(),\n    new YoutubeReplacer(),\n    new VimeoReplacer(),\n    new AsciinemaReplacer(),\n    new AbcReplacer(),\n    new ImageReplacer(onImageClick),\n    new SequenceDiagramReplacer(),\n    new CsvReplacer(),\n    new FlowchartReplacer(),\n    new MermaidReplacer(),\n    new GraphvizReplacer(),\n    new MarkmapReplacer(),\n    new VegaReplacer(),\n    new HighlightedCodeReplacer(),\n    new QuoteOptionsReplacer(),\n    new KatexReplacer(),\n    new TaskListReplacer(onTaskCheckedChange)\n  ], [onImageClick, onTaskCheckedChange, baseUrl])\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport React, { Fragment, ReactElement, useMemo } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { ShowIf } from '../../common/show-if/show-if'\nimport { createJumpToMarkClickEventHandler } from '../../markdown-renderer/replace-components/link-replacer/link-replacer'\nimport './table-of-contents.scss'\n\nexport interface TableOfContentsProps {\n  ast: TocAst\n  maxDepth?: number\n  className?: string\n  baseUrl?: string\n}\n\nexport const slugify = (content: string): string => {\n  return encodeURIComponent(content.trim().toLowerCase().replace(/\\s+/g, '-'))\n}\n\nconst convertLevel = (toc: TocAst, levelsToShowUnderThis: number, headerCounts: Map<string, number>,\n                      wrapInListItem: boolean, baseUrl?: string): ReactElement | null => {\n  if (levelsToShowUnderThis < 0) {\n    return null\n  }\n\n  const rawName = toc.n.trim()\n  const nameCount = (headerCounts.get(rawName) ?? -1) + 1\n  const slug = `#${slugify(rawName)}${nameCount > 0 ? `-${nameCount}` : ''}`\n  const headlineUrl = new URL(slug, baseUrl).toString()\n\n  headerCounts.set(rawName, nameCount)\n\n  const content = (\n    <Fragment>\n      <ShowIf condition={toc.l > 0}>\n        <a href={headlineUrl} title={rawName} onClick={createJumpToMarkClickEventHandler(slug.substr(1))}>{rawName}</a>\n      </ShowIf>\n      <ShowIf condition={toc.c.length > 0}>\n        <ul>\n          {\n            toc.c.map(child =>\n              (convertLevel(child, levelsToShowUnderThis - 1, headerCounts, true, baseUrl)))\n          }\n        </ul>\n      </ShowIf>\n    </Fragment>\n  )\n\n  if (wrapInListItem) {\n    return (\n      <li key={headlineUrl}>\n        {content}\n      </li>\n    )\n  } else {\n    return content\n  }\n}\n\nexport const TableOfContents: React.FC<TableOfContentsProps> = ({\n                                                                  ast,\n                                                                  maxDepth = 3,\n                                                                  className,\n                                                                  baseUrl\n                                                                }) => {\n  useTranslation()\n  const tocTree = useMemo(() => convertLevel(ast, maxDepth, new Map<string, number>(), false, baseUrl), [ast, maxDepth, baseUrl])\n\n  return (\n    <div className={`markdown-toc ${className ?? ''}`}>\n      <ShowIf condition={ast.c.length === 0}>\n        <Trans i18nKey={'editor.infoToc'}/>\n      </ShowIf>\n      {tocTree}\n    </div>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport anchor from 'markdown-it-anchor'\n\nexport const headlineAnchors: MarkdownIt.PluginSimple = (markdownIt) => {\n  const options: anchor.AnchorOptions = {\n    permalink: true,\n    permalinkBefore: true,\n    permalinkClass: 'heading-anchor text-dark',\n    permalinkSymbol: '<i class=\"fa fa-link\"></i>',\n    permalinkHref: (slug: string): string => `#${slug}`\n  }\n\n  anchor(markdownIt, options)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\n\nconst highlightRegex = /^ *([\\w-]*)(.*)$/\n\nexport const highlightedCode: MarkdownIt.PluginSimple = (md: MarkdownIt) => {\n  md.core.ruler.push('highlighted-code', (state) => {\n    state.tokens.forEach(token => {\n      if (token.type === 'fence') {\n        const highlightInfos = highlightRegex.exec(token.info)\n        if (!highlightInfos) {\n          return\n        }\n        if (highlightInfos[1]) {\n          token.attrJoin('data-highlight-language', highlightInfos[1])\n        }\n        if (highlightInfos[2]) {\n          token.attrJoin('data-extra', highlightInfos[2])\n        }\n      }\n    })\n    return true\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport plantuml from 'markdown-it-plantuml'\nimport MarkdownIt, { Options } from 'markdown-it/lib'\nimport Renderer, { RenderRule } from 'markdown-it/lib/renderer'\nimport Token from 'markdown-it/lib/token'\nimport { store } from '../../../redux'\nimport { MarkdownItPlugin } from '../replace-components/ComponentReplacer'\n\nexport const plantumlWithError: MarkdownItPlugin = (markdownIt: MarkdownIt) => {\n  const plantumlServer = store.getState().config.plantumlServer\n  if (plantumlServer) {\n    plantuml(markdownIt, {\n      openMarker: '```plantuml',\n      closeMarker: '```',\n      server: plantumlServer\n    })\n  } else {\n    plantumlError(markdownIt)\n  }\n}\n\nconst plantumlError: MarkdownIt.PluginSimple = (md) => {\n  const defaultRenderer: RenderRule = md.renderer.rules.fence || (() => '')\n  md.renderer.rules.fence = (tokens: Token[], idx: number, options: Options, env, slf: Renderer) => {\n    const token = tokens[idx]\n    if (token.info === 'plantuml') {\n      return `\n        <p class=\"alert alert-danger\">\n          PlantUML plugin is enabled but not properly configured.\n        </p>\n      `\n    }\n    return defaultRenderer(tokens, idx, options, env, slf)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport { RegexOptions } from '../../../external-types/markdown-it-regex/interface'\n\nexport const quoteExtra: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, replaceQuoteExtraAuthor)\n  markdownItRegex(markdownIt, replaceQuoteExtraColor)\n  markdownItRegex(markdownIt, replaceQuoteExtraTime)\n}\n\nconst replaceQuoteExtraTime: RegexOptions = {\n  name: 'quote-extra-time',\n  regex: /\\[time=([^\\]]+)]/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<span class=\"quote-extra\"><i class=\"fa fa-clock-o mx-1\"></i> ${match}</span>`\n  }\n}\n\nconst cssColorRegex = /\\[color=(#(?:[0-9a-f]{2}){2,4}|(?:#[0-9a-f]{3})|black|silver|gray|whitesmoke|maroon|red|purple|fuchsia|green|lime|olivedrab|yellow|navy|blue|teal|aquamarine|orange|aliceblue|antiquewhite|aqua|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|currentcolor|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|goldenrod|gold|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavenderblush|lavender|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olive|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|transparent|turquoise|violet|wheat|white|yellowgreen)]/i\n\nconst replaceQuoteExtraColor: RegexOptions = {\n  name: 'quote-extra-color',\n  regex: cssColorRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<span class=\"quote-extra\" data-color='${match}' style='color: ${match}'><i class=\"fa fa-tag\"></i></span>`\n  }\n}\n\nconst replaceQuoteExtraAuthor: RegexOptions = {\n  name: 'quote-extra-name',\n  regex: /\\[name=([^\\]]+)]/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<span class=\"quote-extra\"><i class=\"fa fa-user mx-1\"></i> ${match}</span>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%pdf (.*) ?%}$/\n\nexport const legacyPdfShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n    name: 'legacy-pdf-short-code',\n    regex: finalRegex,\n    replace: (match: string) => {\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${match}\">${match}</a>`\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%slideshare (\\w+\\/[\\w-]+) ?%}$/\n\nexport const legacySlideshareShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n    name: 'legacy-slideshare-short-code',\n    regex: finalRegex,\n    replace: (match: string) => {\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.slideshare.net/${match}\">https://www.slideshare.net/${match}</a>`\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%speakerdeck (\\w+\\/[\\w-]+) ?%}$/\n\nexport const legacySpeakerdeckShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n      name: 'legacy-speakerdeck-short-code',\n      regex: finalRegex,\n      replace: (match: string) => {\n        return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://speakerdeck.com/${match}\">https://speakerdeck.com/${match}</a>`\n      }\n    }\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport { RawYAMLMetadata } from '../../editor/yaml-metadata/yaml-metadata'\nimport { documentToc } from '../markdown-it-plugins/document-toc'\nimport { frontmatterExtract } from '../markdown-it-plugins/frontmatter'\nimport { headlineAnchors } from '../markdown-it-plugins/headline-anchors'\nimport { highlightedCode } from '../markdown-it-plugins/highlighted-code'\nimport { plantumlWithError } from '../markdown-it-plugins/plantuml'\nimport { quoteExtra } from '../markdown-it-plugins/quote-extra'\nimport { legacyPdfShortCode } from '../regex-plugins/replace-legacy-pdf-short-code'\nimport { legacySlideshareShortCode } from '../regex-plugins/replace-legacy-slideshare-short-code'\nimport { legacySpeakerdeckShortCode } from '../regex-plugins/replace-legacy-speakerdeck-short-code'\nimport { AsciinemaReplacer } from '../replace-components/asciinema/asciinema-replacer'\nimport { GistReplacer } from '../replace-components/gist/gist-replacer'\nimport { KatexReplacer } from '../replace-components/katex/katex-replacer'\nimport { LineMarkers, lineNumberMarker } from '../replace-components/linemarker/line-number-marker'\nimport { VimeoReplacer } from '../replace-components/vimeo/vimeo-replacer'\nimport { YoutubeReplacer } from '../replace-components/youtube/youtube-replacer'\nimport { BasicMarkdownItConfigurator } from './BasicMarkdownItConfigurator'\n\nexport class FullMarkdownItConfigurator extends BasicMarkdownItConfigurator {\n  constructor (\n    private useFrontmatter: boolean,\n    private passYamlErrorState: (error: boolean) => void,\n    private onRawMeta: (rawMeta: RawYAMLMetadata) => void,\n    private onToc: (toc: TocAst) => void,\n    private onLineMarkers: (lineMarkers: LineMarkers[]) => void\n  ) {\n    super()\n  }\n\n  protected configure (markdownIt: MarkdownIt): void {\n    super.configure(markdownIt)\n\n    this.configurations.push(\n      plantumlWithError,\n      (markdownIt) => {\n        frontmatterExtract(markdownIt,\n          !this.useFrontmatter\n            ? undefined\n            : {\n              onYamlError: (hasError: boolean) => this.passYamlErrorState(hasError),\n              onRawMeta: (rawMeta: RawYAMLMetadata) => this.onRawMeta(rawMeta)\n            })\n      },\n      headlineAnchors,\n      KatexReplacer.markdownItPlugin,\n      YoutubeReplacer.markdownItPlugin,\n      VimeoReplacer.markdownItPlugin,\n      GistReplacer.markdownItPlugin,\n      legacyPdfShortCode,\n      legacySlideshareShortCode,\n      legacySpeakerdeckShortCode,\n      AsciinemaReplacer.markdownItPlugin,\n      highlightedCode,\n      quoteExtra,\n      (markdownIt) => documentToc(markdownIt, this.onToc),\n      (markdownIt) => lineNumberMarker(markdownIt, (lineMarkers) => this.onLineMarkers(lineMarkers))\n    )\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport yaml from 'js-yaml'\nimport MarkdownIt from 'markdown-it'\nimport frontmatter from 'markdown-it-front-matter'\nimport { RawYAMLMetadata } from '../../editor/yaml-metadata/yaml-metadata'\n\ninterface FrontmatterPluginOptions {\n  onYamlError: (error: boolean) => void,\n  onRawMeta: (rawMeta: RawYAMLMetadata) => void,\n}\n\nexport const frontmatterExtract: MarkdownIt.PluginWithOptions<FrontmatterPluginOptions> = (markdownIt: MarkdownIt, options) => {\n  if (!options) {\n    return\n  }\n  frontmatter(markdownIt, (rawMeta: string) => {\n    try {\n      const meta: RawYAMLMetadata = yaml.load(rawMeta) as RawYAMLMetadata\n      options.onYamlError(false)\n      options.onRawMeta(meta)\n    } catch (e) {\n      console.error(e)\n      options.onYamlError(true)\n      options.onRawMeta({} as RawYAMLMetadata)\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport toc, { TocAst } from 'markdown-it-toc-done-right'\nimport { slugify } from '../../editor/table-of-contents/table-of-contents'\n\nexport type DocumentTocPluginOptions = (ast: TocAst) => void\n\nexport const documentToc: MarkdownIt.PluginWithOptions<DocumentTocPluginOptions> = (markdownIt, onToc) => {\n  if (!onToc) {\n    return\n  }\n  toc(markdownIt, {\n    placeholder: '(\\\\[TOC\\\\]|\\\\[toc\\\\])',\n    listType: 'ul',\n    level: [1, 2, 3],\n    callback: (code: string, ast: TocAst): void => {\n      onToc(ast)\n    },\n    slugify: slugify\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport Token from 'markdown-it/lib/token'\n\nexport interface LineMarkers {\n  startLine: number\n  endLine: number\n}\n\nexport type LineNumberMarkerOptions = (lineMarkers: LineMarkers[]) => void;\n\n/**\n * This plugin adds markers to the dom, that are used to map line numbers to dom elements.\n * It also provides a list of line numbers for the top level dom elements.\n */\nexport const lineNumberMarker: MarkdownIt.PluginWithOptions<LineNumberMarkerOptions> = (md: MarkdownIt, options) => {\n  // add app_linemarker token before each opening or self-closing level-0 tag\n  md.core.ruler.push('line_number_marker', (state) => {\n    const lineMarkers: LineMarkers[] = []\n    tagTokens(state.tokens, lineMarkers)\n    if (options) {\n      options(lineMarkers)\n    }\n    return true\n  })\n\n  md.renderer.rules.app_linemarker = (tokens: Token[], index: number): string => {\n    const startLineNumber = tokens[index].attrGet('data-start-line')\n    const endLineNumber = tokens[index].attrGet('data-end-line')\n\n    if (!startLineNumber || !endLineNumber) {\n      // don't render broken linemarkers without a linenumber\n      return ''\n    }\n    // noinspection CheckTagEmptyBody\n    return `<app-linemarker data-start-line='${startLineNumber}' data-end-line='${endLineNumber}'></app-linemarker>`\n  }\n\n  const insertNewLineMarker = (startLineNumber: number, endLineNumber: number, tokenPosition: number, level: number, tokens: Token[]) => {\n    const startToken = new Token('app_linemarker', 'app-linemarker', 0)\n    startToken.level = level\n    startToken.attrPush(['data-start-line', `${startLineNumber}`])\n    startToken.attrPush(['data-end-line', `${endLineNumber}`])\n    tokens.splice(tokenPosition, 0, startToken)\n  }\n\n  const tagTokens = (tokens: Token[], lineMarkers: LineMarkers[]) => {\n    for (let tokenPosition = 0; tokenPosition < tokens.length; tokenPosition++) {\n      const token = tokens[tokenPosition]\n      if (token.hidden) {\n        continue\n      }\n\n      if (!token.map) {\n        continue\n      }\n\n      const startLineNumber = token.map[0] + 1\n      const endLineNumber = token.map[1] + 1\n\n      if (token.level === 0) {\n        lineMarkers.push({ startLine: startLineNumber, endLine: endLineNumber })\n      }\n\n      insertNewLineMarker(startLineNumber, endLineNumber, tokenPosition, token.level, tokens)\n      tokenPosition += 1\n\n      if (token.children) {\n        tagTokens(token.children, lineMarkers)\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport equal from 'fast-deep-equal'\nimport { RefObject, useCallback, useEffect, useRef } from 'react'\nimport useResizeObserver from 'use-resize-observer'\nimport { LineMarkerPosition } from '../types'\nimport { LineMarkers } from '../replace-components/linemarker/line-number-marker'\n\nexport const calculateLineMarkerPositions = (documentElement: HTMLDivElement, currentLineMarkers: LineMarkers[], offset?: number): LineMarkerPosition[] => {\n  const lineMarkers = currentLineMarkers\n  const children: HTMLCollection = documentElement.children\n  const lineMarkerPositions:LineMarkerPosition[] = []\n\n  Array.from(children).forEach((child, childIndex) => {\n    const htmlChild = (child as HTMLElement)\n    if (htmlChild.offsetTop === undefined) {\n      return\n    }\n    const currentLineMarker = lineMarkers[childIndex]\n    if (currentLineMarker === undefined) {\n      return\n    }\n\n    const lastPosition = lineMarkerPositions[lineMarkerPositions.length - 1]\n    if (!lastPosition || lastPosition.line !== currentLineMarker.startLine) {\n      lineMarkerPositions.push({\n        line: currentLineMarker.startLine,\n        position: htmlChild.offsetTop + (offset ?? 0)\n      })\n    }\n\n    lineMarkerPositions.push({\n      line: currentLineMarker.endLine,\n      position: htmlChild.offsetTop + htmlChild.offsetHeight + (offset ?? 0)\n    })\n  })\n\n  return lineMarkerPositions\n}\n\nexport const useCalculateLineMarkerPosition = (documentElement: RefObject<HTMLDivElement>, lineMarkers?: LineMarkers[], onLineMarkerPositionChanged?: (lineMarkerPosition: LineMarkerPosition[]) => void, offset?: number) : void => {\n  const lastLineMarkerPositions = useRef<LineMarkerPosition[]>()\n\n  const calculateNewLineMarkerPositions = useCallback(() => {\n    if (!documentElement.current || !onLineMarkerPositionChanged || !lineMarkers) {\n      return\n    }\n\n    const newLines = calculateLineMarkerPositions(documentElement.current, lineMarkers, offset)\n\n    if (!equal(newLines, lastLineMarkerPositions)) {\n      lastLineMarkerPositions.current = newLines\n      onLineMarkerPositionChanged(newLines)\n    }\n  }, [documentElement, lineMarkers, offset, onLineMarkerPositionChanged])\n\n  useEffect(() => {\n    calculateNewLineMarkerPositions()\n  }, [calculateNewLineMarkerPositions])\n\n  useResizeObserver({\n    ref: documentElement,\n    onResize: () => calculateNewLineMarkerPositions()\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport React, { Ref, useCallback, useMemo, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { InternalLink } from '../common/links/internal-link'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { RawYAMLMetadata, YAMLMetaData } from '../editor/yaml-metadata/yaml-metadata'\nimport { BasicMarkdownRenderer } from './basic-markdown-renderer'\nimport { useExtractFirstHeadline } from './hooks/use-extract-first-headline'\nimport { usePostMetaDataOnChange } from './hooks/use-post-meta-data-on-change'\nimport { usePostTocAstOnChange } from './hooks/use-post-toc-ast-on-change'\nimport { useReplacerInstanceListCreator } from './hooks/use-replacer-instance-list-creator'\nimport { FullMarkdownItConfigurator } from './markdown-it-configurator/FullMarkdownItConfigurator'\nimport { ImageClickHandler } from './replace-components/image/image-replacer'\nimport { LineMarkers } from './replace-components/linemarker/line-number-marker'\nimport { AdditionalMarkdownRendererProps, LineMarkerPosition } from './types'\nimport { useCalculateLineMarkerPosition } from './utils/calculate-line-marker-positions'\n\nexport interface FullMarkdownRendererProps {\n  onFirstHeadingChange?: (firstHeading: string | undefined) => void\n  onLineMarkerPositionChanged?: (lineMarkerPosition: LineMarkerPosition[]) => void\n  onMetaDataChange?: (yamlMetaData: YAMLMetaData | undefined) => void\n  onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void\n  onTocChange?: (ast: TocAst) => void\n  rendererRef?: Ref<HTMLDivElement>\n  baseUrl?: string\n  onImageClick?: ImageClickHandler\n}\n\nexport const FullMarkdownRenderer: React.FC<FullMarkdownRendererProps & AdditionalMarkdownRendererProps> = (\n  {\n    onFirstHeadingChange,\n    onLineMarkerPositionChanged,\n    onMetaDataChange,\n    onTaskCheckedChange,\n    onTocChange,\n    content,\n    className,\n    wide,\n    rendererRef,\n    baseUrl,\n    onImageClick\n  }) => {\n  const allReplacers = useReplacerInstanceListCreator(onTaskCheckedChange, onImageClick, baseUrl)\n  useTranslation()\n\n  const [showYamlError, setShowYamlError] = useState(false)\n  const hasNewYamlError = useRef(false)\n\n  const rawMetaRef = useRef<RawYAMLMetadata>()\n  const firstHeadingRef = useRef<string>()\n  const documentElement = useRef<HTMLDivElement>(null)\n  const currentLineMarkers = useRef<LineMarkers[]>()\n  usePostMetaDataOnChange(rawMetaRef.current, firstHeadingRef.current, onMetaDataChange, onFirstHeadingChange)\n  useCalculateLineMarkerPosition(documentElement, currentLineMarkers.current, onLineMarkerPositionChanged, documentElement.current?.offsetTop ?? 0)\n  useExtractFirstHeadline(documentElement, content, onFirstHeadingChange)\n\n  const tocAst = useRef<TocAst>()\n  usePostTocAstOnChange(tocAst, onTocChange)\n\n  const markdownIt = useMemo(() => {\n    return (new FullMarkdownItConfigurator(\n      !!onMetaDataChange,\n      errorState => hasNewYamlError.current = errorState,\n      rawMeta => {\n        rawMetaRef.current = rawMeta\n      },\n      toc => {\n        tocAst.current = toc\n      },\n      lineMarkers => {\n        currentLineMarkers.current = lineMarkers\n      }\n    )).buildConfiguredMarkdownIt()\n  }, [onMetaDataChange])\n\n  const clearMetadata = useCallback(() => {\n    hasNewYamlError.current = false\n    rawMetaRef.current = undefined\n  }, [])\n\n  const checkYamlErrorState = useCallback(() => {\n    if (hasNewYamlError.current !== showYamlError) {\n      setShowYamlError(hasNewYamlError.current)\n    }\n  }, [setShowYamlError, showYamlError])\n\n  return (\n    <div ref={rendererRef} className={'position-relative'}>\n      <ShowIf condition={showYamlError}>\n        <Alert variant='warning' dir='auto'>\n          <Trans i18nKey='editor.invalidYaml'>\n            <InternalLink text='yaml-metadata' href='/n/yaml-metadata' className='text-primary'/>\n          </Trans>\n        </Alert>\n      </ShowIf>\n      <BasicMarkdownRenderer\n        className={className}\n        wide={wide}\n        content={content}\n        componentReplacers={allReplacers}\n        markdownIt={markdownIt}\n        documentReference={documentElement}\n        onBeforeRendering={clearMetadata}\n        onAfterRendering={checkYamlErrorState}\n      />\n    </div>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport equal from 'fast-deep-equal'\nimport { useEffect, useRef } from 'react'\nimport { RawYAMLMetadata, YAMLMetaData } from '../../editor/yaml-metadata/yaml-metadata'\n\nexport const usePostMetaDataOnChange = (\n  rawMetaRef: RawYAMLMetadata|undefined,\n  firstHeadingRef: string|undefined,\n  onMetaDataChange?: (yamlMetaData: YAMLMetaData | undefined) => void,\n  onFirstHeadingChange?: (firstHeading: string | undefined) => void\n): void => {\n  const oldMetaRef = useRef<RawYAMLMetadata>()\n  const oldFirstHeadingRef = useRef<string>()\n\n  useEffect(() => {\n    if (onMetaDataChange && !equal(oldMetaRef.current, rawMetaRef)) {\n      if (rawMetaRef) {\n        const newMetaData = new YAMLMetaData(rawMetaRef)\n        onMetaDataChange(newMetaData)\n      } else {\n        onMetaDataChange(undefined)\n      }\n      oldMetaRef.current = rawMetaRef\n    }\n    if (onFirstHeadingChange && !equal(firstHeadingRef, oldFirstHeadingRef.current)) {\n      onFirstHeadingChange(firstHeadingRef || undefined)\n      oldFirstHeadingRef.current = firstHeadingRef\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useEffect } from 'react'\n\nexport const useExtractFirstHeadline = (documentElement: React.RefObject<HTMLDivElement>, content: string, onFirstHeadingChange?: (firstHeading: string | undefined) => void): void => {\n  const extractInnerText = useCallback((node: ChildNode): string => {\n    let innerText = ''\n\n    if ((node as HTMLElement).classList?.contains(\"katex-mathml\")) {\n      return ''\n    }\n\n    if (node.childNodes && node.childNodes.length > 0) {\n      node.childNodes.forEach((child) => { innerText += extractInnerText(child) })\n    } else if (node.nodeName === 'IMG') {\n      innerText += (node as HTMLImageElement).getAttribute('alt')\n    } else {\n      innerText += node.textContent\n    }\n    return innerText\n  }, [])\n\n  useEffect(() => {\n    if (onFirstHeadingChange && documentElement.current) {\n      const firstHeading = documentElement.current.getElementsByTagName('h1').item(0)\n      if (firstHeading) {\n        onFirstHeadingChange(extractInnerText(firstHeading))\n      } else {\n        onFirstHeadingChange(undefined)\n      }\n    }\n  }, [documentElement, extractInnerText, onFirstHeadingChange, content])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport equal from 'fast-deep-equal'\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport { RefObject, useEffect, useRef } from 'react'\n\nexport const usePostTocAstOnChange = (tocAst: RefObject<TocAst|undefined>, onTocChange?: (ast: TocAst) => void): void => {\n  const lastTocAst = useRef<TocAst>()\n  useEffect(() => {\n    if (onTocChange && tocAst.current && !equal(tocAst, lastTocAst.current)) {\n      lastTocAst.current = tocAst.current\n      onTocChange(tocAst.current)\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport links from '../../../links.json'\nimport { ApplicationState } from '../../../redux'\nimport { TranslatedExternalLink } from '../../common/links/translated-external-link'\nimport { ShowIf } from '../../common/show-if/show-if'\n\nexport const YamlArrayDeprecationAlert: React.FC = () => {\n  useTranslation()\n  const yamlDeprecatedTags = useSelector((state: ApplicationState) => state.documentContent.metadata.deprecatedTagsSyntax)\n\n  return <ShowIf condition={yamlDeprecatedTags}>\n    <Alert data-cy={'yamlArrayDeprecationAlert'} className={'text-wrap'} variant='warning' dir='auto'>\n        <span className={'text-wrap'}>\n          <span className={'text-wrap'}>\n        <Trans i18nKey='editor.deprecatedTags' />\n        </span>\n      </span>\n      <br/>\n      <TranslatedExternalLink i18nKey={'common.readForMoreInfo'} href={links.faq} className={'text-primary'}/>\n    </Alert>\n  </ShowIf>\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport React, { MutableRefObject, useCallback, useRef, useState } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport useResizeObserver from 'use-resize-observer'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { ShowIf } from '../../common/show-if/show-if'\nimport { FullMarkdownRenderer } from '../../markdown-renderer/full-markdown-renderer'\nimport { ImageClickHandler } from '../../markdown-renderer/replace-components/image/image-replacer'\nimport { LineMarkerPosition } from '../../markdown-renderer/types'\nimport { TableOfContents } from '../table-of-contents/table-of-contents'\nimport { YAMLMetaData } from '../yaml-metadata/yaml-metadata'\nimport { useAdaptedLineMarkerCallback } from './use-adapted-line-markers-callback'\nimport { YamlArrayDeprecationAlert } from './yaml-array-deprecation-alert'\n\nexport interface DocumentRenderPaneProps {\n  extraClasses?: string\n  onFirstHeadingChange?: (firstHeading: string | undefined) => void\n  onLineMarkerPositionChanged?: (lineMarkerPosition: LineMarkerPosition[]) => void\n  onMetadataChange?: (metaData: YAMLMetaData | undefined) => void\n  onMouseEnterRenderer?: () => void\n  onScrollRenderer?: () => void\n  onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void\n  documentRenderPaneRef?: MutableRefObject<HTMLDivElement | null>\n  wide?: boolean,\n  markdownContent: string,\n  baseUrl?: string\n  onImageClick?: ImageClickHandler\n}\n\nexport const DocumentRenderPane: React.FC<DocumentRenderPaneProps> = (\n  {\n    extraClasses,\n    onFirstHeadingChange,\n    onLineMarkerPositionChanged,\n    onMetadataChange,\n    onMouseEnterRenderer,\n    onScrollRenderer,\n    onTaskCheckedChange,\n    documentRenderPaneRef,\n    wide,\n    baseUrl,\n    markdownContent,\n    onImageClick\n  }) => {\n  const [tocAst, setTocAst] = useState<TocAst>()\n  const internalDocumentRenderPaneRef = useRef<HTMLDivElement>()\n  const { width } = useResizeObserver({ ref: internalDocumentRenderPaneRef.current })\n  const realWidth = width ?? 0\n  const rendererRef = useRef<HTMLDivElement | null>(null)\n  const changeLineMarker = useAdaptedLineMarkerCallback(documentRenderPaneRef, rendererRef, onLineMarkerPositionChanged)\n  const setContainerReference = useCallback((instance: HTMLDivElement | null) => {\n    if (documentRenderPaneRef) {\n      documentRenderPaneRef.current = instance || null\n    }\n    internalDocumentRenderPaneRef.current = instance || undefined\n  }, [documentRenderPaneRef])\n\n  return (\n    <div className={`bg-light m-0 pb-5 row ${extraClasses ?? ''}`}\n         ref={setContainerReference} onScroll={onScrollRenderer} onMouseEnter={onMouseEnterRenderer}>\n      <div className={'col-md d-none d-md-block'}/>\n      <div className={'bg-light col'}>\n        <YamlArrayDeprecationAlert/>\n        <div>\n          <FullMarkdownRenderer\n            rendererRef={rendererRef}\n            className={'flex-fill pt-4 mb-3'}\n            content={markdownContent}\n            onFirstHeadingChange={onFirstHeadingChange}\n            onLineMarkerPositionChanged={changeLineMarker}\n            onMetaDataChange={onMetadataChange}\n            onTaskCheckedChange={onTaskCheckedChange}\n            onTocChange={(tocAst) => setTocAst(tocAst)}\n            wide={wide}\n            baseUrl={baseUrl}\n            onImageClick={onImageClick}/>\n        </div>\n      </div>\n\n      <div className={'col-md pt-4'}>\n        <ShowIf condition={!!tocAst}>\n          <ShowIf condition={realWidth >= 1280}>\n            <TableOfContents ast={tocAst as TocAst} className={'sticky'} baseUrl={baseUrl}/>\n          </ShowIf>\n          <ShowIf condition={realWidth < 1280}>\n            <div className={'markdown-toc-sidebar-button'}>\n              <Dropdown drop={'up'}>\n                <Dropdown.Toggle id=\"toc-overlay-button\" variant={'secondary'} className={'no-arrow'}>\n                  <ForkAwesomeIcon icon={'list-ol'}/>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <div className={'p-2'}>\n                    <TableOfContents ast={tocAst as TocAst} baseUrl={baseUrl}/>\n                  </div>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </ShowIf>\n        </ShowIf>\n      </div>\n    </div>\n  )\n}\n","/*\nSPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\nSPDX-License-Identifier: AGPL-3.0-only\n*/\n\nimport { RefObject, useCallback } from 'react'\nimport { LineMarkerPosition } from '../../markdown-renderer/types'\n\nexport const useAdaptedLineMarkerCallback = (documentRenderPaneRef: RefObject<HTMLDivElement> | undefined,\n                                             rendererRef: RefObject<HTMLDivElement>,\n                                             onLineMarkerPositionChanged: ((lineMarkerPosition: LineMarkerPosition[]) => void) | undefined): ((lineMarkerPosition: LineMarkerPosition[]) => void) => {\n  return useCallback((linkMarkerPositions) => {\n    if (!onLineMarkerPositionChanged || !documentRenderPaneRef || !documentRenderPaneRef.current || !rendererRef.current) {\n      return\n    }\n    const documentRenderPaneTop = (documentRenderPaneRef.current.offsetTop ?? 0)\n    const rendererTop = (rendererRef.current.offsetTop ?? 0)\n    const offset = rendererTop - documentRenderPaneTop\n    onLineMarkerPositionChanged(linkMarkerPositions.map(oldMarker => ({\n      line: oldMarker.line,\n      position: oldMarker.position + offset\n    })))\n  }, [documentRenderPaneRef, onLineMarkerPositionChanged, rendererRef])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo, useRef, useState } from 'react'\nimport { LineMarkerPosition } from '../../markdown-renderer/types'\nimport { useOnUserScroll } from '../scroll/hooks/use-on-user-scroll'\nimport { useScrollToLineMark } from '../scroll/hooks/use-scroll-to-line-mark'\nimport { ScrollProps } from '../scroll/scroll-props'\nimport { DocumentRenderPane, DocumentRenderPaneProps } from './document-render-pane'\n\ntype ImplementedProps =\n  'onLineMarkerPositionChanged'\n  | 'onScrollRenderer'\n  | 'rendererReference'\n  | 'onMouseEnterRenderer'\n\nexport type ScrollingDocumentRenderPaneProps = Omit<(DocumentRenderPaneProps & ScrollProps), ImplementedProps>\n\nexport const ScrollingDocumentRenderPane: React.FC<ScrollingDocumentRenderPaneProps> = (\n  {\n    scrollState,\n    wide,\n    onFirstHeadingChange,\n    onMakeScrollSource,\n    onMetadataChange,\n    onScroll,\n    onTaskCheckedChange,\n    markdownContent,\n    extraClasses,\n    baseUrl,\n    onImageClick\n  }) => {\n  const renderer = useRef<HTMLDivElement>(null)\n  const [lineMarks, setLineMarks] = useState<LineMarkerPosition[]>()\n\n  const contentLineCount = useMemo(() => markdownContent.split('\\n').length, [markdownContent])\n  useScrollToLineMark(scrollState, lineMarks, contentLineCount, renderer)\n  const userScroll = useOnUserScroll(lineMarks, renderer, onScroll)\n\n  return (\n    <DocumentRenderPane\n      extraClasses={`overflow-y-scroll h-100 ${extraClasses || ''}`}\n      documentRenderPaneRef={renderer}\n      wide={wide}\n      onFirstHeadingChange={onFirstHeadingChange}\n      onLineMarkerPositionChanged={setLineMarks}\n      onMetadataChange={onMetadataChange}\n      onMouseEnterRenderer={onMakeScrollSource}\n      onScrollRenderer={userScroll}\n      onTaskCheckedChange={onTaskCheckedChange}\n      markdownContent={markdownContent}\n      baseUrl={baseUrl}\n      onImageClick={onImageClick}\n    />\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RefObject, useCallback, useEffect, useRef } from 'react'\nimport { LineMarkerPosition } from '../../../markdown-renderer/types'\nimport { ScrollState } from '../scroll-props'\nimport { findLineMarks } from '../utils'\n\nexport const useScrollToLineMark = (scrollState: ScrollState | undefined, lineMarks: LineMarkerPosition[] | undefined, contentLineCount: number, renderer: RefObject<HTMLElement>): void => {\n  const lastScrollPosition = useRef<number>()\n\n  const scrollTo = useCallback((targetPosition: number): void => {\n    if (!renderer.current || targetPosition === lastScrollPosition.current) {\n      return\n    }\n    lastScrollPosition.current = targetPosition\n    renderer.current.scrollTo({\n      top: targetPosition\n    })\n  }, [renderer])\n\n  useEffect(() => {\n    if (!renderer.current || !lineMarks || lineMarks.length === 0 || !scrollState) {\n      return\n    }\n    if (scrollState.firstLineInView < lineMarks[0].line) {\n      scrollTo(0)\n      return\n    }\n    if (scrollState.firstLineInView > lineMarks[lineMarks.length - 1].line) {\n      scrollTo(renderer.current.offsetHeight)\n      return\n    }\n    const { lastMarkBefore, firstMarkAfter } = findLineMarks(lineMarks, scrollState.firstLineInView)\n    const positionBefore = lastMarkBefore ? lastMarkBefore.position : lineMarks[0].position\n    const positionAfter = firstMarkAfter ? firstMarkAfter.position : renderer.current.offsetHeight\n    const lastMarkBeforeLine = lastMarkBefore ? lastMarkBefore.line : 1\n    const firstMarkAfterLine = firstMarkAfter ? firstMarkAfter.line : contentLineCount\n    const linesBetweenMarkers = firstMarkAfterLine - lastMarkBeforeLine\n    const blockHeight = positionAfter - positionBefore\n    const lineHeight = blockHeight / linesBetweenMarkers\n    const position = positionBefore + (scrollState.firstLineInView - lastMarkBeforeLine) * lineHeight + scrollState.scrolledPercentage / 100 * lineHeight\n    const correctedPosition = Math.floor(position)\n    scrollTo(correctedPosition)\n  }, [contentLineCount, lineMarks, renderer, scrollState, scrollTo])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { LineMarkerPosition } from '../../markdown-renderer/types'\n\nexport const findLineMarks = (lineMarks: LineMarkerPosition[], lineNumber: number): { lastMarkBefore: LineMarkerPosition | undefined, firstMarkAfter: LineMarkerPosition | undefined } => {\n  let lastMarkBefore\n  let firstMarkAfter\n  for (let i = 0; i < lineMarks.length; i++) {\n    const currentMark = lineMarks[i]\n    if (!currentMark) {\n      continue\n    }\n\n    if (currentMark.line <= lineNumber) {\n      lastMarkBefore = currentMark\n    }\n    if (currentMark.line > lineNumber) {\n      firstMarkAfter = currentMark\n    }\n    if (!!firstMarkAfter && !!lastMarkBefore) {\n      break\n    }\n  }\n  return {\n    lastMarkBefore,\n    firstMarkAfter\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RefObject, useCallback } from 'react'\nimport { LineMarkerPosition } from '../../../markdown-renderer/types'\nimport { ScrollState } from '../scroll-props'\n\nexport const useOnUserScroll = (lineMarks: LineMarkerPosition[] | undefined, renderer: RefObject<HTMLElement>, onScroll: ((newScrollState: ScrollState) => void) | undefined): () => void =>\n  useCallback(() => {\n    if (!renderer.current || !lineMarks || lineMarks.length === 0 || !onScroll) {\n      return\n    }\n\n    const scrollTop = renderer.current.scrollTop\n\n    const lineMarksBeforeScrollTop = lineMarks.filter(lineMark => lineMark.position <= scrollTop)\n    if (lineMarksBeforeScrollTop.length === 0) {\n      return\n    }\n\n    const lineMarksAfterScrollTop = lineMarks.filter(lineMark => lineMark.position > scrollTop)\n    if (lineMarksAfterScrollTop.length === 0) {\n      return\n    }\n\n    const beforeLineMark = lineMarksBeforeScrollTop\n      .reduce((prevLineMark, currentLineMark) =>\n        prevLineMark.line >= currentLineMark.line ? prevLineMark : currentLineMark)\n\n    const afterLineMark = lineMarksAfterScrollTop\n      .reduce((prevLineMark, currentLineMark) =>\n        prevLineMark.line < currentLineMark.line ? prevLineMark : currentLineMark)\n\n    const componentHeight = afterLineMark.position - beforeLineMark.position\n    const distanceToBefore = scrollTop - beforeLineMark.position\n    const percentageRaw = (distanceToBefore / componentHeight)\n    const lineCount = afterLineMark.line - beforeLineMark.line\n    const line = Math.floor(lineCount * percentageRaw + beforeLineMark.line)\n    const lineHeight = componentHeight / lineCount\n    const innerScrolling = Math.floor((distanceToBefore % lineHeight) / lineHeight * 100)\n\n    const newScrollState: ScrollState = { firstLineInView: line, scrolledPercentage: innerScrolling }\n    onScroll(newScrollState)\n  }, [lineMarks, onScroll, renderer])\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { ScrollState } from \"../editor/scroll/scroll-props\"\nimport { YAMLMetaData } from \"../editor/yaml-metadata/yaml-metadata\"\nimport { IframeCommunicator } from \"./iframe-communicator\"\nimport {\n  EditorToRendererIframeMessage,\n  ImageDetails,\n  RendererToEditorIframeMessage,\n  RenderIframeMessageType\n} from \"./rendering-message\"\n\nexport class IframeRendererToEditorCommunicator extends IframeCommunicator<RendererToEditorIframeMessage, EditorToRendererIframeMessage> {\n  private onSetMarkdownContentHandler?: ((markdownContent: string) => void)\n  private onSetDarkModeHandler?: ((darkModeActivated: boolean) => void)\n  private onSetWideHandler?: ((wide: boolean) => void)\n  private onSetScrollStateHandler?: ((scrollState: ScrollState) => void)\n  private onSetBaseUrlHandler?: ((baseUrl: string) => void)\n\n  public onSetBaseUrl (handler?: (baseUrl: string) => void): void {\n    this.onSetBaseUrlHandler = handler\n  }\n\n  public onSetMarkdownContent (handler?: (markdownContent: string) => void): void {\n    this.onSetMarkdownContentHandler = handler\n  }\n\n  public onSetDarkMode (handler?: (darkModeActivated: boolean) => void): void {\n    this.onSetDarkModeHandler = handler\n  }\n\n  public onSetWide (handler?: (wide: boolean) => void): void {\n    this.onSetWideHandler = handler\n  }\n\n  public onSetScrollState (handler?: (scrollState: ScrollState) => void): void {\n    this.onSetScrollStateHandler = handler\n  }\n\n  public sendRendererReady (): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.RENDERER_READY\n    })\n  }\n\n  public sendTaskCheckBoxChange (lineInMarkdown: number, checked: boolean): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.ON_TASK_CHECKBOX_CHANGE,\n      checked,\n      lineInMarkdown\n    })\n  }\n\n  public sendFirstHeadingChanged (firstHeading: string | undefined): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.ON_FIRST_HEADING_CHANGE,\n      firstHeading\n    })\n  }\n\n  public sendSetScrollSourceToRenderer (): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.SET_SCROLL_SOURCE_TO_RENDERER\n    })\n  }\n\n  public sendSetMetaData (metaData: YAMLMetaData | undefined): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.ON_SET_META_DATA,\n      metaData\n    })\n  }\n\n  public sendSetScrollState (scrollState: ScrollState): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.SET_SCROLL_STATE,\n      scrollState\n    })\n  }\n\n  protected handleEvent (event: MessageEvent<EditorToRendererIframeMessage>): boolean | undefined {\n    const renderMessage = event.data\n    switch (renderMessage.type) {\n      case RenderIframeMessageType.SET_MARKDOWN_CONTENT:\n        this.onSetMarkdownContentHandler?.(renderMessage.content)\n        return false\n      case RenderIframeMessageType.SET_DARKMODE:\n        this.onSetDarkModeHandler?.(renderMessage.activated)\n        return false\n      case RenderIframeMessageType.SET_WIDE:\n        this.onSetWideHandler?.(renderMessage.activated)\n        return false\n      case RenderIframeMessageType.SET_SCROLL_STATE:\n        this.onSetScrollStateHandler?.(renderMessage.scrollState)\n        return false\n      case RenderIframeMessageType.SET_BASE_URL:\n        this.onSetBaseUrlHandler?.(renderMessage.baseUrl)\n        return false\n    }\n  }\n\n  public sendClickedImageUrl (details: ImageDetails): void {\n    this.sendMessageToOtherSide({\n      type: RenderIframeMessageType.IMAGE_CLICKED,\n      details: details\n    })\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport equal from \"fast-deep-equal\"\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useApplyDarkMode } from '../../hooks/common/use-apply-dark-mode'\nimport { ApplicationState } from '../../redux'\nimport { setDarkMode } from '../../redux/dark-mode/methods'\nimport { setDocumentMetadata } from '../../redux/document-content/methods'\nimport { ScrollingDocumentRenderPane } from '../editor/document-renderer-pane/scrolling-document-render-pane'\nimport { ScrollState } from '../editor/scroll/scroll-props'\nimport { YAMLMetaData } from '../editor/yaml-metadata/yaml-metadata'\nimport { ImageClickHandler } from '../markdown-renderer/replace-components/image/image-replacer'\nimport { IframeRendererToEditorCommunicator } from './iframe-renderer-to-editor-communicator'\n\nexport const RenderPage: React.FC = () => {\n  useApplyDarkMode()\n\n  const [markdownContent, setMarkdownContent] = useState('')\n  const [isWide, setWide] = useState(false)\n  const [scrollState, setScrollState] = useState<ScrollState>({ firstLineInView: 1, scrolledPercentage: 0 })\n  const [baseUrl, setBaseUrl] = useState<string>()\n\n  const editorOrigin = useSelector((state: ApplicationState) => state.config.iframeCommunication.editorOrigin)\n\n  const iframeCommunicator = useMemo(() => {\n    const newCommunicator = new IframeRendererToEditorCommunicator()\n    newCommunicator.setOtherSide(window.parent, editorOrigin)\n    return newCommunicator\n  }, [editorOrigin])\n\n  useEffect(() => {\n    iframeCommunicator.sendRendererReady()\n    return () => iframeCommunicator.unregisterEventListener()\n  }, [iframeCommunicator])\n\n  useEffect(() => iframeCommunicator.onSetBaseUrl(setBaseUrl), [iframeCommunicator])\n  useEffect(() => iframeCommunicator.onSetMarkdownContent(setMarkdownContent), [iframeCommunicator])\n  useEffect(() => iframeCommunicator.onSetDarkMode(setDarkMode), [iframeCommunicator])\n  useEffect(() => iframeCommunicator.onSetWide(setWide), [iframeCommunicator])\n  useEffect(() => iframeCommunicator.onSetScrollState((newScrollState) => {\n    if (!equal(scrollState, newScrollState)) {\n      setScrollState(newScrollState)\n    }\n  }), [iframeCommunicator, scrollState])\n\n  const onTaskCheckedChange = useCallback((lineInMarkdown: number, checked: boolean) => {\n    iframeCommunicator.sendTaskCheckBoxChange(lineInMarkdown, checked)\n  }, [iframeCommunicator])\n\n  const onFirstHeadingChange = useCallback((firstHeading?: string) => {\n    iframeCommunicator.sendFirstHeadingChanged(firstHeading)\n  }, [iframeCommunicator])\n\n  const onMakeScrollSource = useCallback(() => {\n    iframeCommunicator.sendSetScrollSourceToRenderer()\n  }, [iframeCommunicator])\n\n  const onMetaDataChange = useCallback((metaData?: YAMLMetaData) => {\n    setDocumentMetadata(metaData)\n    iframeCommunicator.sendSetMetaData(metaData)\n  }, [iframeCommunicator])\n\n  const onScroll = useCallback((scrollState: ScrollState) => {\n    iframeCommunicator.sendSetScrollState(scrollState)\n  }, [iframeCommunicator])\n\n  const onImageClick: ImageClickHandler = useCallback((event) => {\n    const image = event.target as HTMLImageElement\n    if (image.src === '') {\n      return\n    }\n    iframeCommunicator.sendClickedImageUrl({\n      src: image.src,\n      alt: image.alt,\n      title: image.title\n    })\n  }, [iframeCommunicator])\n\n  if (!baseUrl) {\n    return null\n  }\n\n  return (\n    <div className={\"vh-100 w-100\"}>\n      <ScrollingDocumentRenderPane\n        extraClasses={'w-100'}\n        markdownContent={markdownContent}\n        wide={isWide}\n        onTaskCheckedChange={onTaskCheckedChange}\n        onFirstHeadingChange={onFirstHeadingChange}\n        onMakeScrollSource={onMakeScrollSource}\n        onMetadataChange={onMetaDataChange}\n        scrollState={scrollState}\n        onScroll={onScroll}\n        baseUrl={baseUrl}\n        onImageClick={onImageClick}/>\n    </div>\n  )\n}\n\nexport default RenderPage\n"],"sourceRoot":""}