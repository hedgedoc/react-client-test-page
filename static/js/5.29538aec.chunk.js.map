{"version":3,"sources":["redux/note-details/methods.ts","hooks/common/use-note-markdown-content.ts","hooks/common/use-apply-dark-mode.ts","hooks/common/use-document-title-with-note-title.ts","components/document-read-only-page/ErrorWhileLoadingNoteAlert.tsx","components/document-read-only-page/LoadingNoteAlert.tsx","components/editor-page/utils.ts","components/editor-page/hooks/useLoadNoteFromServer.ts","components/editor-page/document-bar/document-info/document-info-line.tsx","components/editor-page/app-bar/dark-mode-button.tsx","components/editor-page/app-bar/help-button/help-modal.tsx","components/editor-page/app-bar/help-button/shortcuts.tsx","components/editor-page/app-bar/help-button/links.tsx","components/editor-page/app-bar/help-button/cheatsheet-line.tsx","components/editor-page/app-bar/help-button/cheatsheet.tsx","components/editor-page/app-bar/sync-scroll-buttons/disabledScroll.svg","components/editor-page/app-bar/help-button/help-button.tsx","components/editor-page/app-bar/navbar-branding.tsx","components/editor-page/app-bar/sync-scroll-buttons/enabledScroll.svg","components/editor-page/app-bar/sync-scroll-buttons/sync-scroll-buttons.tsx","components/editor-page/app-bar/app-bar.tsx","components/editor-page/app-bar/slide-mode-button.tsx","components/editor-page/app-bar/read-only-mode-button.tsx","components/editor-page/app-bar/new-note-button.tsx","components/editor-page/document-bar/document-info/document-info-time-line.tsx","components/editor-page/document-bar/document-info/time-from-now.tsx"],"names":["setNoteMarkdownContent","content","store","dispatch","type","NoteDetailsActionType","SET_DOCUMENT_CONTENT","setNoteDataFromServer","apiResponse","SET_NOTE_DATA_FROM_SERVER","note","updateNoteTitleByFirstHeading","firstHeading","UPDATE_NOTE_TITLE_BY_FIRST_HEADING","setNoteFrontmatter","frontmatter","initialState","SET_NOTE_FRONTMATTER","SetCheckboxInMarkdownContent","lineInMarkdown","checked","SET_CHECKBOX_IN_MARKDOWN_CONTENT","useNoteMarkdownContent","useSelector","state","noteDetails","markdownContent","useApplyDarkMode","darkModeActivated","useIsDarkModeActivated","useEffect","window","document","body","classList","add","remove","useDocumentTitleWithNoteTitle","untitledNote","t","useTranslation","noteTitle","useDocumentTitle","ErrorWhileLoadingNoteAlert","show","condition","variant","className","i18nKey","LoadingNoteAlert","isMac","navigator","platform","toLowerCase","includes","useLoadNoteFromServer","id","useParams","useState","error","setError","loading","setLoading","getNote","then","catch","e","console","finally","DocumentInfoLine","icon","size","children","fixedWidth","DarkModeState","HelpTabStatus","DarkModeButton","darkModeEnabled","DARK","LIGHT","ToggleButtonGroup","name","value","ToggleButton","title","onChange","setDarkMode","Shortcut","modifierKey","altKey","shortcutMap","Editor","Row","Object","keys","map","category","Card","Header","ListGroup","entries","functionName","shortcuts","Item","Trans","shortcut","shortcutIndex","Links","backendIssueTracker","config","version","issueTrackerUrl","Col","lg","href","links","community","i18nOption","service","chat","translate","HighlightedCode","React","lazy","BasicMarkdownRenderer","CheatsheetLine","code","onTaskCheckedChange","checkboxClick","useCallback","newValue","fallback","colSpan","baseUrl","wrapLines","startLineNumber","language","Cheatsheet","setChecked","codes","useMemo","Table","_g","HelpModal","onHide","tab","setTab","tabContent","Shortcuts","tabTitle","Modal","Body","Button","onClick","HelpButton","setShow","NavbarBranding","Navbar","Brand","to","logoType","HedgeDocLogoType","WB_HORIZONTAL","BW_HORIZONTAL","HedgeDocLogoSize","SMALL","inline","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDisabledScroll","_ref","svgRef","titleId","props","height","viewBox","width","xmlns","ref","fill","transform","d","fillRule","ForwardRef","SvgEnabledScroll","cx","cy","r","SyncScrollState","AppBarMode","SyncScrollButtons","syncScrollEnabled","editorConfig","syncScroll","SYNCED","UNSYNCED","defaultValue","setEditorSyncScroll","SlideModeButton","ReadOnlyModeButton","NewNoteButton","AppBar","mode","userExists","user","noteFrontmatter","equal","bg","Nav","EDITOR","NoteType","SLIDE","DocumentInfoLineWithTimeMode","TimeFromNow","time","toFormat","dateTime","toString","toRelative","DocumentInfoTimeLine","userName","profileImageSrc","CREATED","photo","additionalClasses","undefined"],"mappings":"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","file":"static/js/5.29538aec.chunk.js","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { store } from '..'\nimport { Note } from '../../api/notes'\nimport { NoteFrontmatter } from '../../components/editor-page/note-frontmatter/note-frontmatter'\nimport { initialState } from './reducers'\nimport {\n  NoteDetailsActionType,\n  SetCheckboxInMarkdownContentAction,\n  SetNoteDetailsAction,\n  SetNoteDetailsFromServerAction,\n  SetNoteFrontmatterFromRenderingAction,\n  UpdateNoteTitleByFirstHeadingAction\n} from './types'\n\nexport const setNoteMarkdownContent = (content: string): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_DOCUMENT_CONTENT,\n    content\n  } as SetNoteDetailsAction)\n}\n\nexport const setNoteDataFromServer = (apiResponse: Note): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_NOTE_DATA_FROM_SERVER,\n    note: apiResponse\n  } as SetNoteDetailsFromServerAction)\n}\n\nexport const updateNoteTitleByFirstHeading = (firstHeading?: string): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.UPDATE_NOTE_TITLE_BY_FIRST_HEADING,\n    firstHeading: firstHeading\n  } as UpdateNoteTitleByFirstHeadingAction)\n}\n\nexport const setNoteFrontmatter = (frontmatter: NoteFrontmatter | undefined): void => {\n  if (!frontmatter) {\n    frontmatter = initialState.frontmatter\n  }\n  store.dispatch({\n    type: NoteDetailsActionType.SET_NOTE_FRONTMATTER,\n    frontmatter: frontmatter\n  } as SetNoteFrontmatterFromRenderingAction)\n}\n\nexport const SetCheckboxInMarkdownContent = (lineInMarkdown: number, checked: boolean): void => {\n  store.dispatch({\n    type: NoteDetailsActionType.SET_CHECKBOX_IN_MARKDOWN_CONTENT,\n    checked: checked,\n    lineInMarkdown: lineInMarkdown\n  } as SetCheckboxInMarkdownContentAction)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../redux'\n\nexport const useNoteMarkdownContent = (): string => {\n  return useSelector((state: ApplicationState) => state.noteDetails.markdownContent)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useEffect } from 'react'\nimport { useIsDarkModeActivated } from './use-is-dark-mode-activated'\n\nexport const useApplyDarkMode = (): void => {\n  const darkModeActivated = useIsDarkModeActivated()\n\n  useEffect(() => {\n    if (darkModeActivated) {\n      window.document.body.classList.add('dark')\n    } else {\n      window.document.body.classList.remove('dark')\n    }\n    return () => {\n      window.document.body.classList.remove('dark')\n    }\n  }, [darkModeActivated])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../redux'\nimport { useDocumentTitle } from './use-document-title'\n\nexport const useDocumentTitleWithNoteTitle = (): void => {\n  const { t } = useTranslation()\n  const untitledNote = t('editor.untitledNote')\n  const noteTitle = useSelector((state: ApplicationState) => state.noteDetails.noteTitle)\n\n  useDocumentTitle(noteTitle === '' ? untitledNote : noteTitle)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const ErrorWhileLoadingNoteAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  useTranslation()\n\n  return (\n    <ShowIf condition={ show }>\n      <Alert variant={ 'danger' } className={ 'my-2' }>\n        <b><Trans i18nKey={ 'views.readOnly.error.title' }/></b>\n        <br/>\n        <Trans i18nKey={ 'views.readOnly.error.description' }/>\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans } from 'react-i18next'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const LoadingNoteAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  return (\n    <ShowIf condition={ show }>\n      <Alert variant={ 'info' } className={ 'my-2' }>\n        <Trans i18nKey={ 'views.readOnly.loading' }/>\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const isMac = navigator.platform.toLowerCase()\n                              .includes('mac')\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { getNote } from '../../../api/notes'\nimport { setNoteDataFromServer } from '../../../redux/note-details/methods'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const useLoadNoteFromServer = (): [boolean, boolean] => {\n  const { id } = useParams<EditorPagePathParams>()\n\n  const [error, setError] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getNote(id)\n      .then(note => {\n        setNoteDataFromServer(note)\n      })\n      .catch((e) => {\n        setError(true)\n        console.error(e)\n      })\n      .finally(() => setLoading(false))\n  }, [id])\n\n  return [error, loading]\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ForkAwesomeIcon } from '../../../common/fork-awesome/fork-awesome-icon'\nimport { IconName } from '../../../common/fork-awesome/types'\n\nexport interface DocumentInfoLineProps {\n  icon: IconName\n  size?: '2x' | '3x' | '4x' | '5x' | undefined\n}\n\nexport const DocumentInfoLine: React.FC<DocumentInfoLineProps> = ({ icon, size, children }) => {\n  return (\n    <span className={ 'd-flex align-items-center' }>\n      <ForkAwesomeIcon icon={ icon } size={ size } fixedWidth={ true } className={ 'mx-2' }/>\n      <i className={ 'd-flex align-items-center' }>\n        { children }\n      </i>\n    </span>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { useIsDarkModeActivated } from '../../../hooks/common/use-is-dark-mode-activated'\nimport { setDarkMode } from '../../../redux/dark-mode/methods'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\n\nenum DarkModeState {\n  DARK,\n  LIGHT\n}\n\nconst DarkModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const darkModeEnabled = useIsDarkModeActivated() ? DarkModeState.DARK : DarkModeState.LIGHT\n\n  return (\n    <ToggleButtonGroup\n      type=\"radio\"\n      name=\"dark-mode\"\n      value={ darkModeEnabled }\n      className=\"ml-2\"\n    >\n      <ToggleButton\n        value={ DarkModeState.DARK }\n        variant=\"outline-secondary\"\n        title={ t('editor.darkMode.switchToDark') }\n        onChange={ () => setDarkMode(true) }\n      >\n        <ForkAwesomeIcon icon=\"moon\"/>\n      </ToggleButton>\n      <ToggleButton\n        value={ DarkModeState.LIGHT }\n        variant=\"outline-secondary\"\n        title={ t('editor.darkMode.switchToLight') }\n        onChange={ () => setDarkMode(false) }\n      >\n        <ForkAwesomeIcon icon=\"sun-o\"/>\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport { DarkModeButton }\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { Button, Modal } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport React, { useMemo, useState } from 'react'\nimport { CommonModal } from '../../../common/modals/common-modal'\nimport { Shortcut } from './shortcuts'\nimport { Links } from './links'\nimport { Cheatsheet } from './cheatsheet'\n\nexport enum HelpTabStatus {\n  Cheatsheet = 'cheatsheet.title',\n  Shortcuts = 'shortcuts.title',\n  Links = 'links.title'\n}\n\nexport interface HelpModalProps {\n  show: boolean,\n  onHide: () => void\n}\n\nexport const HelpModal: React.FC<HelpModalProps> = ({ show, onHide }) => {\n  const [tab, setTab] = useState<HelpTabStatus>(HelpTabStatus.Cheatsheet)\n  const { t } = useTranslation()\n\n  const tabContent = useMemo(() => {\n    switch (tab) {\n      case HelpTabStatus.Cheatsheet:\n        return (<Cheatsheet/>)\n      case HelpTabStatus.Shortcuts:\n        return (<Shortcut/>)\n      case HelpTabStatus.Links:\n        return (<Links/>)\n    }\n  }, [tab])\n\n  const tabTitle = useMemo(() => t('editor.documentBar.help') + ' - ' + t(`editor.help.${ tab }`), [t, tab])\n\n  return (\n    <CommonModal icon={ 'question-circle' } show={ show } onHide={ onHide } title={ tabTitle }>\n      <Modal.Body>\n        <nav className='nav nav-tabs'>\n          <Button\n            variant={ 'light' }\n            className={ `nav-link nav-item ${ tab === HelpTabStatus.Cheatsheet ? 'active' : '' }` }\n            onClick={ () => setTab(HelpTabStatus.Cheatsheet) }>\n            <Trans i18nKey={ 'editor.help.cheatsheet.title' }/>\n          </Button>\n          <Button\n            variant={ 'light' }\n            className={ `nav-link nav-item ${ tab === HelpTabStatus.Shortcuts ? 'active' : '' }` }\n            onClick={ () => setTab(HelpTabStatus.Shortcuts) }>\n            <Trans i18nKey={ 'editor.help.shortcuts.title' }/>\n          </Button>\n          <Button\n            variant={ 'light' }\n            className={ `nav-link nav-item ${ tab === HelpTabStatus.Links ? 'active' : '' }` }\n            onClick={ () => setTab(HelpTabStatus.Links) }>\n            <Trans i18nKey={ 'editor.help.links.title' }/>\n          </Button>\n        </nav>\n        { tabContent }\n      </Modal.Body>\n    </CommonModal>)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment } from 'react'\nimport { Card, ListGroup, Row } from 'react-bootstrap'\nimport { Trans } from 'react-i18next'\nimport { isMac } from '../../utils'\n\nexport const Shortcut: React.FC = () => {\n  const modifierKey = isMac ? <kbd>⌘</kbd> : <kbd>Ctrl</kbd>\n  const altKey = isMac ? <kbd>⌥</kbd> : <kbd>Alt</kbd>\n\n  const shortcutMap: { [category: string]: { [functionName: string]: JSX.Element[] } } = {\n    'View Mode': {\n      'editor.help.shortcuts.view': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>V</kbd>],\n      'editor.help.shortcuts.both': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>B</kbd>],\n      'editor.help.shortcuts.edit': [<kbd>Ctrl</kbd>, <> + </>, altKey, <> + </>, <kbd>E</kbd>]\n    },\n    Editor: {\n      'editor.help.shortcuts.bold': [modifierKey, <> + </>, <kbd>B</kbd>],\n      'editor.help.shortcuts.italic': [modifierKey, <> + </>, <kbd>I</kbd>],\n      'editor.help.shortcuts.underline': [modifierKey, <> + </>, <kbd>U</kbd>],\n      'editor.help.shortcuts.strikethrough': [modifierKey, <> + </>, <kbd>D</kbd>],\n      'editor.help.shortcuts.mark': [modifierKey, <> + </>, <kbd>M</kbd>],\n      'editor.help.shortcuts.link': [modifierKey, <> + </>, <kbd>K</kbd>]\n    }\n  }\n  return (\n    <Row className={ 'justify-content-center pt-4' }>\n      { Object.keys(shortcutMap)\n              .map(category => {\n                return (\n                  <Card key={ category } className={ 'm-2 w-50' }>\n                    <Card.Header>{ category }</Card.Header>\n                    <ListGroup variant=\"flush\">\n                      { Object.entries(shortcutMap[category])\n                              .map(([functionName, shortcuts]) => {\n                                return (\n                                  <ListGroup.Item key={ functionName } className={ 'd-flex justify-content-between' }>\n                                    <span><Trans i18nKey={ functionName }/></span>\n                                    <span>\n                      {\n                        shortcuts.map((shortcut, shortcutIndex) =>\n                          <Fragment key={ shortcutIndex }>{ shortcut }</Fragment>)\n                      }\n                    </span>\n                                  </ListGroup.Item>\n                                )\n                              }) }\n                    </ListGroup>\n                  </Card>)\n              })\n      }\n    </Row>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport links from '../../../../links.json'\nimport { ApplicationState } from '../../../../redux'\nimport { TranslatedExternalLink } from '../../../common/links/translated-external-link'\nimport { TranslatedInternalLink } from '../../../common/links/translated-internal-link'\n\nexport const Links: React.FC = () => {\n  useTranslation()\n\n  const backendIssueTracker = useSelector((state: ApplicationState) => state.config.version.issueTrackerUrl)\n  return (\n    <Row className={ 'justify-content-center pt-4' }>\n      <Col lg={ 4 }>\n        <h3><Trans i18nKey='editor.help.contacts.title'/></h3>\n        <div>\n          <ul className=\"list-unstyled\">\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.community'\n                href={ links.community }\n                icon='users'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.meetUsOn'\n                i18nOption={ { service: 'Matrix' } }\n                href={ links.chat }\n                icon='hashtag'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.reportIssue'\n                href={ backendIssueTracker }\n                icon='tag'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedExternalLink\n                i18nKey='editor.help.contacts.helpTranslating'\n                href={ links.translate }\n                icon='language'\n                className='text-primary'\n              />\n            </li>\n          </ul>\n        </div>\n      </Col>\n      <Col lg={ 4 }>\n        <h3><Trans i18nKey='editor.help.documents.title'/></h3>\n        <div>\n          <ul className=\"list-unstyled\">\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.features'\n                href='/n/features'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.yamlMetadata'\n                href='/n/yaml-metadata'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n            <li>\n              <TranslatedInternalLink\n                i18nKey='editor.help.documents.slideExample'\n                href='/n/slide-example'\n                icon='dot-circle-o'\n                className='text-primary'\n              />\n            </li>\n          </ul>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Suspense, useCallback } from 'react'\nimport { WaitSpinner } from '../../../common/wait-spinner/wait-spinner'\n\nexport interface CheatsheetLineProps {\n  code: string,\n  onTaskCheckedChange: (newValue: boolean) => void\n}\n\nconst HighlightedCode = React.lazy(() => import('../../../markdown-renderer/replace-components/highlighted-fence/highlighted-code/highlighted-code'))\nconst BasicMarkdownRenderer = React.lazy(() => import('../../../markdown-renderer/basic-markdown-renderer'))\n\nexport const CheatsheetLine: React.FC<CheatsheetLineProps> = ({ code, onTaskCheckedChange }) => {\n  const checkboxClick = useCallback((lineInMarkdown: number, newValue: boolean) => {\n    onTaskCheckedChange(newValue)\n  }, [onTaskCheckedChange])\n\n  return (\n    <Suspense fallback={ <tr>\n      <td colSpan={ 2 }><WaitSpinner/></td>\n    </tr> }>\n      <tr>\n        <td>\n          <BasicMarkdownRenderer\n            content={ code }\n            baseUrl={ 'https://example.org' }\n            onTaskCheckedChange={ checkboxClick }/>\n        </td>\n        <td className={ 'markdown-body' }>\n          <HighlightedCode code={ code } wrapLines={ true } startLineNumber={ 1 } language={ 'markdown' }/>\n        </td>\n      </tr>\n    </Suspense>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo, useState } from 'react'\nimport { Table } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport './cheatsheet.scss'\nimport { CheatsheetLine } from './cheatsheet-line'\n\nexport const Cheatsheet: React.FC = () => {\n  const { t } = useTranslation()\n  const [checked, setChecked] = useState<boolean>(false)\n  const codes = useMemo(() => [\n    `**${ t('editor.editorToolbar.bold') }**`,\n    `*${ t('editor.editorToolbar.italic') }*`,\n    `++${ t('editor.editorToolbar.underline') }++`,\n    `~~${ t('editor.editorToolbar.strikethrough') }~~`,\n    'H~2~O',\n    '19^th^',\n    `==${ t('editor.help.cheatsheet.highlightedText') }==`,\n    `# ${ t('editor.editorToolbar.header') }`,\n    `\\`${ t('editor.editorToolbar.code') }\\``,\n    '```javascript=\\nvar x = 5;\\n```',\n    `> ${ t('editor.editorToolbar.blockquote') }`,\n    `- ${ t('editor.editorToolbar.unorderedList') }`,\n    `1. ${ t('editor.editorToolbar.orderedList') }`,\n    `- [${ checked ? 'x' : ' ' }] ${ t('editor.editorToolbar.checkList') }`,\n    `[${ t('editor.editorToolbar.link') }](https://example.com)`,\n    `![${ t('editor.editorToolbar.image') }](/icons/apple-touch-icon.png)`,\n    ':smile:',\n    `:::info\\n${ t('editor.help.cheatsheet.exampleAlert') }\\n:::`\n  ], [checked, t])\n\n  return (\n    <Table className=\"table-condensed table-cheatsheet\">\n      <thead>\n      <tr>\n        <th><Trans i18nKey='editor.help.cheatsheet.example'/></th>\n        <th><Trans i18nKey='editor.help.cheatsheet.syntax'/></th>\n      </tr>\n      </thead>\n      <tbody>\n      {\n        codes.map((code) =>\n          <CheatsheetLine code={ code } key={ code } onTaskCheckedChange={ setChecked }/>)\n      }\n      </tbody>\n    </Table>\n  )\n}\n\nexport default Cheatsheet\n","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDisabledScroll(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 135.46666 135.46666\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\",\n    transform: \"translate(253.17277 890.86874)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-185.60701-890.86598c-1.20278.0405-2.35129.51236-3.23554 1.33104l-19.83931 18.35901c-2.0321 1.88196-2.16416 5.08233-.29441 7.12658 1.86949 2.04457 5.06645 2.17956 7.10004.29914l16.43678-15.21017 16.43678 15.21017c2.03361 1.88043 5.23055 1.74545 7.10004-.29914 1.86889-2.04514 1.73629-5.24555-.29677-7.12658l-19.83694-18.35901c-.96887-.89698-2.25281-1.37483-3.57067-1.33104z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-205.48644-783.84278c-1.28698.0542-2.55509.59901-3.48983 1.62131-1.86975 2.04426-1.73769 5.24463.29441 7.12659l19.83931 18.359c.88425.81868 2.03276 1.29062 3.23554 1.33104 1.31786.0439 2.6018-.43406 3.57067-1.33104l19.83694-18.359c2.03306-1.88102 2.16566-5.08144.29677-7.12659-1.86949-2.04459-5.06643-2.17956-7.10004-.29913l-16.43678 15.21017-16.43678-15.21017c-1.01679-.94021-2.32321-1.37647-3.61021-1.32218z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-185.49136-841.40292a18.267478 18.267478 0 0 0 -18.21562 18.26754 18.267478 18.267478 0 0 0 .23777 2.93583l22.52379-20.64169a18.267478 18.267478 0 0 0 -4.49402-.56168 18.267478 18.267478 0 0 0 -.0519 0zm18.08169 15.33288-22.5232 20.64052a18.267478 18.267478 0 0 0 4.49343.56168 18.267478 18.267478 0 0 0 18.26754-18.26754 18.267478 18.267478 0 0 0 -.23777-2.93466z\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m-124.79368-883.92129-126.14511 116.28534 4.95067 5.40084 126.14688-116.28534z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDisabledScroll);\nexport default __webpack_public_path__ + \"static/media/disabledScroll.0d537a0b.svg\";\nexport { ForwardRef as ReactComponent };","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useCallback, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { ForkAwesomeIcon } from '../../../common/fork-awesome/fork-awesome-icon'\nimport { HelpModal } from './help-modal'\n\nexport const HelpButton: React.FC = () => {\n  const { t } = useTranslation()\n  const [show, setShow] = useState(false)\n  const onHide = useCallback(() => setShow(false), [])\n\n  return (\n    <Fragment>\n      <Button title={ t('editor.documentBar.help') } className='ml-2 text-secondary' size='sm' variant='outline-light'\n              onClick={ () => setShow(true) }>\n        <ForkAwesomeIcon icon=\"question-circle\"/>\n      </Button>\n      <HelpModal show={ show } onHide={ onHide }/>\n    </Fragment>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Navbar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useIsDarkModeActivated } from '../../../hooks/common/use-is-dark-mode-activated'\nimport { Branding } from '../../common/branding/branding'\nimport {\n  HedgeDocLogoSize,\n  HedgeDocLogoType,\n  HedgeDocLogoWithText\n} from '../../common/hedge-doc-logo/hedge-doc-logo-with-text'\n\nexport const NavbarBranding: React.FC = () => {\n  const darkModeActivated = useIsDarkModeActivated()\n\n  return (\n    <Navbar.Brand>\n      <Link to=\"/intro\" className=\"text-secondary text-decoration-none d-flex align-items-center\">\n        <HedgeDocLogoWithText\n          logoType={ darkModeActivated ? HedgeDocLogoType.WB_HORIZONTAL : HedgeDocLogoType.BW_HORIZONTAL }\n          size={ HedgeDocLogoSize.SMALL }/>\n        <Branding inline={ true }/>\n      </Link>\n    </Navbar.Brand>\n  )\n}\n","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEnabledScroll(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 135.46666 135.46666\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m67.566309.00276674c-1.20278.040417-2.35129.512357-3.23555 1.33103706l-19.83929 18.3589962c-2.0321 1.881973-2.16417 5.082332-.29442 7.126588 1.8695 2.044576 5.06646 2.17955 7.10005.29913l16.43677-15.210163 16.43678 15.210163c2.03361 1.880432 5.23055 1.745458 7.10004-.29913 1.86889-2.045147 1.73629-5.24555-.29677-7.126588l-19.83693-18.3589962c-.96887-.89697906-2.25281-1.37483336-3.57068-1.33103706z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m47.686889 107.02594c-1.28698.0542-2.55509.59903-3.48984 1.62132-1.86975 2.04426-1.73768 5.24462.29442 7.12659l19.83929 18.359c.88426.81868 2.03277 1.29062 3.23555 1.33104 1.31787.0438 2.60181-.43406 3.57068-1.33104l19.83693-18.359c2.03306-1.88103 2.16566-5.08144.29677-7.12659-1.86949-2.0446-5.06643-2.17956-7.10004-.29913l-16.43678 15.21016-16.43677-15.21016c-1.01679-.94021-2.32322-1.37647-3.61021-1.32219z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 67.733864,\n    cy: 67.733284,\n    fillRule: \"evenodd\",\n    r: 18.267477\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEnabledScroll);\nexport default __webpack_public_path__ + \"static/media/enabledScroll.3198f5be.svg\";\nexport { ForwardRef as ReactComponent };","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../../../redux'\nimport { setEditorSyncScroll } from '../../../../redux/editor/methods'\nimport { ReactComponent as DisabledScrollIcon } from './disabledScroll.svg'\nimport { ReactComponent as EnabledScrollIcon } from './enabledScroll.svg'\nimport './sync-scroll-buttons.scss'\n\nenum SyncScrollState {\n  SYNCED,\n  UNSYNCED\n}\n\nexport const SyncScrollButtons: React.FC = () => {\n  const syncScrollEnabled = useSelector((state: ApplicationState) => state.editorConfig.syncScroll) ? SyncScrollState.SYNCED : SyncScrollState.UNSYNCED\n  const { t } = useTranslation()\n\n  return (\n    <ToggleButtonGroup type=\"radio\" defaultValue={ [] } name=\"sync-scroll\" className={ 'ml-2 sync-scroll-buttons' }\n                       value={ syncScrollEnabled }>\n      <ToggleButton\n        variant={ 'outline-secondary' }\n        title={ t('editor.appBar.syncScroll.enable') }\n        onChange={ () => setEditorSyncScroll(true) }\n        value={ SyncScrollState.SYNCED }\n      >\n        <EnabledScrollIcon/>\n      </ToggleButton>\n      <ToggleButton\n        variant={ 'outline-secondary' }\n        title={ t('editor.appBar.syncScroll.disable') }\n        onChange={ () => setEditorSyncScroll(false) }\n        value={ SyncScrollState.UNSYNCED }\n      >\n        <DisabledScrollIcon/>\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport equal from 'fast-deep-equal'\nimport { Nav, Navbar } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../../redux'\nimport { ShowIf } from '../../common/show-if/show-if'\nimport { SignInButton } from '../../landing-layout/navigation/sign-in-button'\nimport { UserDropdown } from '../../landing-layout/navigation/user-dropdown'\nimport { DarkModeButton } from './dark-mode-button'\nimport { EditorViewMode } from './editor-view-mode'\nimport { HelpButton } from './help-button/help-button'\nimport { NavbarBranding } from './navbar-branding'\nimport { SyncScrollButtons } from './sync-scroll-buttons/sync-scroll-buttons'\nimport { NoteType } from '../note-frontmatter/note-frontmatter'\nimport { SlideModeButton } from './slide-mode-button'\nimport { ReadOnlyModeButton } from './read-only-mode-button'\nimport { NewNoteButton } from './new-note-button'\n\nexport enum AppBarMode {\n  BASIC,\n  EDITOR\n}\n\nexport interface AppBarProps {\n  mode: AppBarMode\n}\n\nexport const AppBar: React.FC<AppBarProps> = ({ mode }) => {\n  const userExists = useSelector((state: ApplicationState) => !!state.user)\n  const noteFrontmatter = useSelector((state: ApplicationState) => state.noteDetails.frontmatter, equal)\n\n  return (\n    <Navbar bg={ 'light' }>\n      <Nav className=\"mr-auto d-flex align-items-center\">\n        <NavbarBranding/>\n        <ShowIf condition={ mode === AppBarMode.EDITOR }>\n          <EditorViewMode/>\n          <SyncScrollButtons/>\n        </ShowIf>\n        <DarkModeButton/>\n        <ShowIf condition={ mode === AppBarMode.EDITOR }>\n          <ShowIf condition={noteFrontmatter.type === NoteType.SLIDE}>\n            <SlideModeButton/>\n          </ShowIf>\n          <ShowIf condition={noteFrontmatter.type !== NoteType.SLIDE}>\n            <ReadOnlyModeButton/>\n          </ShowIf>\n          <HelpButton/>\n        </ShowIf>\n      </Nav>\n      <Nav className=\"d-flex align-items-center text-secondary\">\n        <NewNoteButton/>\n        <ShowIf condition={ !userExists }>\n          <SignInButton size={ 'sm' }/>\n        </ShowIf>\n        <ShowIf condition={ userExists }>\n          <UserDropdown/>\n        </ShowIf>\n      </Nav>\n    </Navbar>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const SlideModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const { id } = useParams<EditorPagePathParams>()\n\n  return (\n    <Link to={ `/p/${ id }` } target='_blank'>\n      <Button title={ t('editor.documentBar.slideMode') } className=\"ml-2 text-secondary\" size=\"sm\"\n              variant=\"outline-light\">\n        <ForkAwesomeIcon icon=\"television\"/>\n      </Button>\n    </Link>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router'\nimport { EditorPagePathParams } from '../editor-page'\n\nexport const ReadOnlyModeButton: React.FC = () => {\n  const { t } = useTranslation()\n  const { id } = useParams<EditorPagePathParams>()\n\n  return (\n    <Link to={ `/s/${ id }` } target='_blank'>\n      <Button title={ t('editor.documentBar.readOnlyMode') } className=\"ml-2 text-secondary\" size=\"sm\"\n              variant=\"outline-light\">\n        <ForkAwesomeIcon icon=\"file-text-o\"/>\n      </Button>\n    </Link>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { ForkAwesomeIcon } from '../../common/fork-awesome/fork-awesome-icon'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Button } from 'react-bootstrap'\n\nexport const NewNoteButton: React.FC = () => {\n  useTranslation()\n\n  return (\n    <Button className=\"mx-2\" size=\"sm\" variant=\"primary\">\n      <ForkAwesomeIcon icon=\"plus\"/> <Trans i18nKey=\"editor.appBar.new\"/>\n    </Button>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DateTime } from 'luxon'\nimport React from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { IconName } from '../../../common/fork-awesome/types'\nimport { UserAvatar } from '../../../common/user-avatar/user-avatar'\nimport { DocumentInfoLine } from './document-info-line'\nimport { TimeFromNow } from './time-from-now'\n\nexport interface DocumentInfoLineWithTimeProps {\n  size?: '2x' | '3x' | '4x' | '5x' | undefined\n  time: DateTime,\n  mode: DocumentInfoLineWithTimeMode\n  userName: string\n  profileImageSrc: string\n}\n\nexport enum DocumentInfoLineWithTimeMode {\n  CREATED,\n  EDITED\n}\n\nexport const DocumentInfoTimeLine: React.FC<DocumentInfoLineWithTimeProps> = ({ time, mode, userName, profileImageSrc, size }) => {\n  useTranslation()\n\n  const i18nKey = mode === DocumentInfoLineWithTimeMode.CREATED ? 'editor.modal.documentInfo.created' : 'editor.modal.documentInfo.edited'\n  const icon: IconName = mode === DocumentInfoLineWithTimeMode.CREATED ? 'plus' : 'pencil'\n\n  return (\n    <DocumentInfoLine icon={ icon } size={ size }>\n      <Trans i18nKey={ i18nKey }>\n        <UserAvatar photo={ profileImageSrc } additionalClasses={ 'font-style-normal bold font-weight-bold' }\n                    name={ userName } size={ size ? 'lg' : undefined }/>\n        <TimeFromNow time={ time }/>\n      </Trans>\n    </DocumentInfoLine>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DateTime } from 'luxon'\n\nimport React from 'react'\n\nexport interface TimeFromNowProps {\n  time: DateTime\n}\n\nexport const TimeFromNow: React.FC<TimeFromNowProps> = ({ time }) => {\n  return (\n    <time className={ 'mx-1' } title={ time.toFormat('DDDD T') }\n          dateTime={ time.toString() }>{ time.toRelative() }</time>\n  )\n}\n"],"sourceRoot":""}