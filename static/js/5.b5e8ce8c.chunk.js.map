{"version":3,"sources":["components/markdown-renderer/document-length-limit-reached-alert.tsx","components/markdown-renderer/utils/html-react-transformer.tsx","components/markdown-renderer/hooks/use-convert-markdown-to-react-dom.ts","components/markdown-renderer/utils/line-number-mapping.ts","components/markdown-renderer/replace-components/abc/abc-frame.tsx","components/markdown-renderer/replace-components/abc/abc-replacer.tsx","components/markdown-renderer/replace-components/utils.ts","components/markdown-renderer/replace-components/one-click-frame/one-click-embedding.tsx","components/markdown-renderer/replace-components/asciinema/asciinema-frame.tsx","components/markdown-renderer/replace-components/asciinema/replace-asciinema-link.ts","components/markdown-renderer/replace-components/asciinema/asciinema-replacer.tsx","components/markdown-renderer/replace-components/csv/csv-parser.ts","components/markdown-renderer/replace-components/csv/csv-table.tsx","components/markdown-renderer/replace-components/csv/csv-replacer.tsx","components/markdown-renderer/replace-components/flow/flowchart/flowchart.tsx","components/markdown-renderer/replace-components/flow/flowchart-replacer.tsx","components/markdown-renderer/replace-components/gist/gist-frame.tsx","components/markdown-renderer/replace-components/gist/gist-preview.png","components/markdown-renderer/replace-components/gist/replace-gist-link.ts","components/markdown-renderer/replace-components/gist/replace-legacy-gist-short-code.ts","components/markdown-renderer/replace-components/gist/gist-replacer.tsx","components/markdown-renderer/replace-components/graphviz/graphviz-frame.tsx","components/markdown-renderer/replace-components/graphviz/graphviz-replacer.tsx","components/markdown-renderer/replace-components/highlighted-fence/highlighted-fence-replacer.tsx","components/markdown-renderer/replace-components/image/image-replacer.tsx","components/markdown-renderer/replace-components/katex/katex-replacer.tsx","components/markdown-renderer/replace-components/linemarker/linemarker-replacer.tsx","components/common/lock-button/lock-button.tsx","components/markdown-renderer/replace-components/markmap/markmap-frame.tsx","components/markdown-renderer/replace-components/markmap/markmap-replacer.tsx","components/markdown-renderer/replace-components/mermaid/mermaid-chart.tsx","components/markdown-renderer/replace-components/mermaid/mermaid-replacer.tsx","components/markdown-renderer/replace-components/colored-blockquote/colored-blockquote-replacer.tsx","components/markdown-renderer/replace-components/sequence-diagram/deprecation-warning.tsx","components/markdown-renderer/replace-components/sequence-diagram/sequence-diagram-replacer.tsx","components/markdown-renderer/replace-components/task-list/task-list-replacer.tsx","components/markdown-renderer/replace-components/vega-lite/vega-chart.tsx","components/markdown-renderer/replace-components/vega-lite/vega-replacer.tsx","components/markdown-renderer/replace-components/vimeo/replace-legacy-vimeo-short-code.ts","components/markdown-renderer/replace-components/vimeo/replace-vimeo-link.ts","components/markdown-renderer/replace-components/vimeo/vimeo-frame.tsx","components/markdown-renderer/replace-components/vimeo/vimeo-replacer.tsx","components/markdown-renderer/replace-components/youtube/replace-legacy-youtube-short-code.ts","components/markdown-renderer/replace-components/youtube/replace-youtube-link.ts","components/markdown-renderer/replace-components/youtube/youtube-frame.tsx","components/markdown-renderer/replace-components/youtube/youtube-replacer.tsx","components/markdown-renderer/hooks/use-component-replacers.ts","components/markdown-renderer/utils/calculate-line-marker-positions.ts","components/markdown-renderer/hooks/use-on-ref-change.ts","components/markdown-renderer/markdown-it-plugins/linkify-extra.ts","components/markdown-renderer/markdown-it-plugins/parser-debugger.ts","components/markdown-renderer/markdown-it-plugins/spoiler-container.ts","components/markdown-renderer/markdown-it-plugins/tasks-lists.ts","components/markdown-renderer/markdown-it-plugins/emoji/mapping.ts","components/markdown-renderer/markdown-it-plugins/twitter-emojis.ts","components/markdown-renderer/markdown-it-plugins/plantuml.ts","components/markdown-renderer/markdown-it-plugins/headline-anchors.ts","components/markdown-renderer/regex-plugins/replace-legacy-pdf-short-code.ts","components/markdown-renderer/regex-plugins/replace-legacy-slideshare-short-code.ts","components/markdown-renderer/regex-plugins/replace-legacy-speakerdeck-short-code.ts","components/markdown-renderer/markdown-it-plugins/highlighted-code.ts","components/markdown-renderer/markdown-it-plugins/quote-extra.ts","components/markdown-renderer/markdown-it-plugins/quote-extra-color.ts","components/markdown-renderer/markdown-it-plugins/document-table-of-contents.ts","components/markdown-renderer/markdown-it-plugins/document-toc.ts","components/markdown-renderer/markdown-it-configurator/BasicMarkdownItConfigurator.tsx","components/markdown-renderer/markdown-it-plugins/frontmatter.ts","components/markdown-renderer/replace-components/linemarker/line-number-marker.ts","components/markdown-renderer/invalid-yaml-alert.tsx","components/markdown-renderer/basic-markdown-renderer.tsx","components/markdown-renderer/hooks/use-trimmed-content.ts","components/markdown-renderer/hooks/use-extract-first-headline.ts","components/markdown-renderer/replace-components/ComponentReplacer.ts","components/markdown-renderer/replace-components/link-replacer/link-replacer.tsx","../node_modules/markdown-it-imsize/lib/imsize/types sync /^/.//.*$","components/editor-page/table-of-contents/toc-slugify.ts","components/common/copyable/copy-to-clipboard-button/copy-to-clipboard-button.tsx","components/markdown-renderer/replace-components/highlighted-fence/highlighted-code/highlighted-code.tsx"],"names":["DocumentLengthLimitReachedAlert","show","useTranslation","maxLength","useSelector","state","config","maxDocumentLength","condition","Alert","variant","dir","data-cy","Trans","i18nKey","values","buildTransformer","lineKeys","allReplacers","transform","node","index","nativeRenderer","key","undefined","attribs","convertNodeToElement","renderNativeNode","lineMarker","prev","startLineInMarkdown","endLineInMarkdown","startLineIndex","Number","endLineIndex","startLine","endLine","id","calculateKeyFromLineMarker","toString","tryReplacement","subNodeTransform","map","componentReplacer","getReplacement","find","replacement","findNodeReplacement","subNode","subIndex","fallback","useConvertMarkdownToReactDom","markdownCode","markdownIt","baseReplacers","additionalReplacers","onBeforeRendering","onAfterRendering","oldMarkdownLineKeys","useRef","lastUsedLineId","useMemo","html","render","newMarkdownLines","oldLineKeys","lineDifferences","diffArrays","comparator","left","right","line","newLines","filter","change","added","forEach","value","removed","push","lines","calculateNewLineNumberMapping","split","current","newLastUsedLineId","replacers","concat","transformer","length","rendering","ReactHtmlParser","AbcFrame","code","container","useEffect","actualContainer","then","imp","renderAbc","catch","console","error","ref","className","AbcReplacer","codeNode","name","children","data","getAttributesFromHedgeDocTag","tagName","OneClickEmbedding","previewContainerClassName","containerClassName","onImageFetch","loadingImageUrl","tooltip","hoverIcon","hoverTextI18nKey","onActivate","useState","showFrame","setShowFrame","previewImageUrl","setPreviewImageUrl","imageLink","message","onClick","src","alt","title","AsciinemaFrame","gistUrlRegex","RegExp","source","replaceAsciinemaLink","regex","replace","match","AsciinemaReplacer","attributes","asciinemaId","ComponentReplacer","markdownItPlugin","markdownItRegex","CsvTable","rows","delimiter","showHeader","tableRowClassName","tableColumnClassName","rowsWithColumns","csvText","csvColumnDelimiter","splitRegex","row","parseCsv","trim","headerRow","splice","column","columnNumber","renderTableHeader","rowNumber","columnIndex","CsvReplacer","extraData","extraInfos","exec","FlowChart","diagramRef","setError","darkModeActivated","useIsDarkModeActivated","currentDiagramRef","parserOutput","parse","drawSVG","fill","Array","from","remove","FlowchartReplacer","GistFrame","iframeHtml","frameHeight","setFrameHeight","sizeMessage","useCallback","size","window","addEventListener","removeEventListener","sandbox","width","height","frameBorder","btoa","replaceGistLink","replaceLegacyGistShortCode","GistReplacer","gistId","preview","GraphvizFrame","showError","querySelectorAll","child","frontendBaseUrl","useFrontendBaseUrl","wasmPlugin","wasmFolder","graphvizImport","graphviz","useWorker","zoom","onerror","renderDot","GraphvizReplacer","HighlightedCodeReplacer","lastLineNumber","language","showLineNumbers","startLineNumberAttribute","wrapLines","startsWith","startLineNumber","this","parseInt","ImageReplacer","clickHandler","class","KaTeX","React","lazy","KatexReplacer","katex","subnode","inline","getNodeIfKatexBlock","getNodeIfInlineKatex","mathJaxContent","isInline","block","math","errorColor","mathJax","beforeMath","afterMath","beforeInlineMath","afterInlineMath","beforeDisplayMath","afterDisplayMath","LinemarkerReplacer","LockButton","locked","onLockedChanged","Button","icon","blockHandler","event","stopPropagation","MarkmapFrame","t","diagramContainer","disablePanAndZoom","setDisablePanAndZoom","markmapLoader","svg","document","createElementNS","setAttribute","appendChild","newState","MarkmapReplacer","mermaidInitialized","MermaidChart","mermaid","default","initialize","startOnLoad","dataset","processed","textContent","init","str","MermaidReplacer","isColorExtraElement","ColoredBlockquoteReplacer","paragraph","childElements","optionsTag","elem","Object","assign","style","DeprecationWarning","href","links","faq","SequenceDiagramReplacer","TaskListReplacer","onTaskCheckedChange","handleCheckboxChange","lineNum","currentTarget","checked","disabled","type","onChange","data-line","VegaChart","embed","spec","JSON","actions","export","compiled","editor","i18n","PNG_ACTION","SVG_ACTION","VegaReplacer","replaceLegacyVimeoShortCode","vimeoVideoUrlRegex","replaceVimeoLink","VimeoFrame","getPreviewImageLink","a","fetch","credentials","referrerPolicy","response","status","Error","json","vimeoResponse","thumbnail_large","allow","VimeoReplacer","videoId","replaceLegacyYoutubeShortCode","youtubeVideoUrlRegex","replaceYouTubeLink","YouTubeFrame","YoutubeReplacer","useCalculateLineMarkerPosition","documentElement","lineMarkers","onLineMarkerPositionChanged","offset","lastLineMarkerPositions","calculateNewLineMarkerPositions","currentLineMarkers","lineMarkerPositions","childIndex","htmlChild","offsetTop","currentLineMarker","lastPosition","position","offsetHeight","calculateLineMarkerPositions","equal","useResizeObserver","onResize","useOnRefChange","reference","lastValue","linkifyExtra","md","core","ruler","options","linkify","MarkdownItParserDebugger","process","spoilerRegEx","spoilerContainer","markdownItContainer","validate","params","test","tokens","matches","info","nesting","escapeHtml","tasksLists","markdownItTaskLists","enabled","label","lineNumber","shortCodeMap","emojiData","reduce","reduceObject","emoji","shortcodes","shortcode","emojiSkinToneModifierMap","modifierValue","codepoint","forkAwesomeIconMap","keys","ForkAwesomeIcons","combinedEmojiData","twitterEmojis","defs","plantumlWithError","plantumlServer","store","getState","plantuml","openMarker","closeMarker","server","plantumlError","defaultRenderer","renderer","rules","fence","idx","env","slf","headlineAnchors","anchor","permalink","permalinkBefore","permalinkClass","permalinkSymbol","permalinkHref","slug","finalRegex","legacyPdfShortCode","legacySlideshareShortCode","legacySpeakerdeckShortCode","highlightRegex","highlightedCode","token","highlightInfos","attrJoin","quoteExtra","quoteLabel","quoteExtraTagValues","parseQuoteExtraTag","pos","posMax","valueEndIndex","attrSet","innerTokens","innerHtml","renderInline","attrGet","start","maxPos","labelStartIndex","labelEndIndex","parseLabel","valueStartIndex","parseValue","substr","level","currentCharacter","cssColorRegex","quoteExtraColor","color","documentTableOfContents","onTocChange","onToc","toc","placeholder","listType","callback","ast","slugify","tocSlugify","documentToc","BasicMarkdownItConfigurator","configurations","postConfigurations","plugin","MarkdownIt","breaks","useAlternativeBreaks","langPrefix","typographer","configure","configuration","use","postConfiguration","abbreviation","definitionList","subscript","superscript","inserted","marked","footnote","imsize","alertContainer","useFrontmatter","onParseError","onRawMetaChange","frontmatter","rawMeta","meta","yaml","load","e","onLineMarkers","tagTokens","app_linemarker","endLineNumber","insertNewLineMarker","tokenPosition","startToken","Token","attrPush","hidden","lineNumberMarker","InvalidYamlAlert","text","BasicMarkdownRenderer","content","onFirstHeadingChange","onFrontmatterChange","baseUrl","onImageClick","outerContainerRef","rawMetaRef","markdownBodyRef","hasNewYamlError","tocAst","showYamlError","setShowYamlError","contentExceedsLimit","useTrimmedContent","trimmedContent","errorState","buildConfiguredMarkdownIt","clearFrontmatter","checkYamlErrorState","LinkReplacer","useComponentReplacers","markdownReactDom","extractInnerText","classList","contains","innerText","childNodes","nodeName","getAttribute","lastFirstHeading","firstHeading","getElementsByTagName","item","headingText","useExtractFirstHeadline","newValue","NoteFrontmatter","createJumpToMarkClickEventHandler","getElementById","scrollIntoView","preventDefault","url","isJumpMark","URL","rel","target","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","module","exports","encodeURIComponent","toLowerCase","CopyToClipboardButton","props","button","clickComponent","HighlightedCode","dom","setDom","hljs","lang","replacedDom","replaceCode","listLanguages","includes","highlight","replaceAll"],"mappings":"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","file":"static/js/5.b5e8ce8c.chunk.js","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../redux'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const DocumentLengthLimitReachedAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  useTranslation()\n\n  const maxLength = useSelector((state: ApplicationState) => state.config.maxDocumentLength)\n\n  return (\n    <ShowIf condition={show}>\n      <Alert variant='danger' dir={'auto'} data-cy={'limitReachedMessage'}>\n        <Trans i18nKey={'editor.error.limitReached.description'} values={{ maxLength }} />\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React, { ReactElement, Suspense } from 'react'\nimport { convertNodeToElement, Transform } from 'react-html-parser'\nimport { ComponentReplacer, NativeRenderer, SubNodeTransform } from '../replace-components/ComponentReplacer'\nimport { LineKeys } from '../types'\n\nexport interface TextDifferenceResult {\n  lines: LineKeys[]\n  lastUsedLineId: number\n}\n\nexport const calculateKeyFromLineMarker = (node: DomElement, lineKeys?: LineKeys[]): string | undefined => {\n  if (!node.attribs || lineKeys === undefined) {\n    return\n  }\n\n  const key = node.attribs['data-key']\n  if (key) {\n    return key\n  }\n\n  const lineMarker = node.prev\n  if (!lineMarker || !lineMarker.attribs) {\n    return\n  }\n\n  const startLineInMarkdown = lineMarker.attribs['data-start-line']\n  const endLineInMarkdown = lineMarker.attribs['data-end-line']\n  if (startLineInMarkdown === undefined || endLineInMarkdown === undefined) {\n    return\n  }\n\n  const startLineIndex = Number(startLineInMarkdown)\n  const endLineIndex = Number(endLineInMarkdown)\n  const startLine = lineKeys[startLineIndex - 1]\n  const endLine = lineKeys[endLineIndex - 2]\n  if (startLine === undefined || endLine === undefined) {\n    return\n  }\n\n  return `${startLine.id}_${endLine.id}`\n}\n\nexport const findNodeReplacement = (\n  node: DomElement,\n  allReplacers: ComponentReplacer[],\n  subNodeTransform: SubNodeTransform,\n  nativeRenderer: NativeRenderer\n): ReactElement | null | undefined => {\n  return allReplacers\n    .map((componentReplacer) => componentReplacer.getReplacement(node, subNodeTransform, nativeRenderer))\n    .find((replacement) => replacement !== undefined)\n}\n\nexport const renderNativeNode = (node: DomElement, key: string, transform: Transform): ReactElement => {\n  if (node.attribs === undefined) {\n    node.attribs = {}\n  }\n\n  delete node.attribs['data-key']\n  return convertNodeToElement(node, key as unknown as number, transform)\n}\n\nexport const buildTransformer = (lineKeys: LineKeys[] | undefined, allReplacers: ComponentReplacer[]): Transform => {\n  const transform: Transform = (node, index) => {\n    const nativeRenderer: NativeRenderer = () => renderNativeNode(node, key, transform)\n    const subNodeTransform: SubNodeTransform = (subNode, subIndex) => transform(subNode, subIndex, transform)\n\n    const key = calculateKeyFromLineMarker(node, lineKeys) ?? (-index).toString()\n    const tryReplacement = findNodeReplacement(node, allReplacers, subNodeTransform, nativeRenderer)\n    if (tryReplacement === null) {\n      return null\n    } else if (tryReplacement === undefined) {\n      return nativeRenderer()\n    } else {\n      return (\n        <Suspense key={key} fallback={<span>Loading...</span>}>\n          {tryReplacement}\n        </Suspense>\n      )\n    }\n  }\n  return transform\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport { ReactElement, useMemo, useRef } from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { ComponentReplacer } from '../replace-components/ComponentReplacer'\nimport { LineKeys } from '../types'\nimport { buildTransformer } from '../utils/html-react-transformer'\nimport { calculateNewLineNumberMapping } from '../utils/line-number-mapping'\n\nexport const useConvertMarkdownToReactDom = (\n  markdownCode: string,\n  markdownIt: MarkdownIt,\n  baseReplacers: () => ComponentReplacer[],\n  additionalReplacers?: () => ComponentReplacer[],\n  onBeforeRendering?: () => void,\n  onAfterRendering?: () => void\n): ReactElement[] => {\n  const oldMarkdownLineKeys = useRef<LineKeys[]>()\n  const lastUsedLineId = useRef<number>(0)\n\n  return useMemo(() => {\n    if (onBeforeRendering) {\n      onBeforeRendering()\n    }\n    const html = markdownIt.render(markdownCode)\n    const contentLines = markdownCode.split('\\n')\n    const { lines: newLines, lastUsedLineId: newLastUsedLineId } = calculateNewLineNumberMapping(\n      contentLines,\n      oldMarkdownLineKeys.current ?? [],\n      lastUsedLineId.current\n    )\n    oldMarkdownLineKeys.current = newLines\n    lastUsedLineId.current = newLastUsedLineId\n\n    const replacers = baseReplacers().concat(additionalReplacers ? additionalReplacers() : [])\n    const transformer = replacers.length > 0 ? buildTransformer(newLines, replacers) : undefined\n    const rendering = ReactHtmlParser(html, { transform: transformer })\n    if (onAfterRendering) {\n      onAfterRendering()\n    }\n    return rendering\n  }, [onBeforeRendering, markdownIt, markdownCode, baseReplacers, additionalReplacers, onAfterRendering])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { diffArrays } from 'diff'\nimport { TextDifferenceResult } from './html-react-transformer'\nimport { LineKeys } from '../types'\n\nexport const calculateNewLineNumberMapping = (\n  newMarkdownLines: string[],\n  oldLineKeys: LineKeys[],\n  lastUsedLineId: number\n): TextDifferenceResult => {\n  const lineDifferences = diffArrays<string, LineKeys>(newMarkdownLines, oldLineKeys, {\n    comparator: (left: string | LineKeys, right: string | LineKeys) => {\n      const leftLine = (left as LineKeys).line ?? (left as string)\n      const rightLine = (right as LineKeys).line ?? (right as string)\n      return leftLine === rightLine\n    }\n  })\n\n  const newLines: LineKeys[] = []\n\n  lineDifferences\n    .filter((change) => change.added === undefined || !change.added)\n    .forEach((value) => {\n      if (value.removed) {\n        ;(value.value as string[]).forEach((line) => {\n          lastUsedLineId += 1\n          newLines.push({ line: line, id: lastUsedLineId })\n        })\n      } else {\n        ;(value.value as LineKeys[]).forEach((line) => newLines.push(line))\n      }\n    })\n\n  return { lines: newLines, lastUsedLineId: lastUsedLineId }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useRef } from 'react'\nimport './abc.scss'\n\nexport interface AbcFrameProps {\n  code: string\n}\n\nexport const AbcFrame: React.FC<AbcFrameProps> = ({ code }) => {\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!container.current) {\n      return\n    }\n    const actualContainer = container.current\n    import(/* webpackChunkName: \"abc.js\" */ 'abcjs')\n      .then((imp) => {\n        imp.renderAbc(actualContainer, code, {})\n      })\n      .catch(() => {\n        console.error('error while loading abcjs')\n      })\n  }, [code])\n\n  return <div ref={container} className={'abcjs-score bg-white text-black text-center overflow-x-auto'} />\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { AbcFrame } from './abc-frame'\n\nexport class AbcReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'abc' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <AbcFrame code={code} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\n\nexport const getAttributesFromHedgeDocTag = (\n  node: DomElement,\n  tagName: string\n): { [s: string]: string } | undefined => {\n  if (node.name !== `app-${tagName}` || !node.attribs) {\n    return\n  }\n  return node.attribs\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useState } from 'react'\nimport { Trans } from 'react-i18next'\nimport { IconName } from '../../../common/fork-awesome/types'\nimport { ShowIf } from '../../../common/show-if/show-if'\nimport './one-click-embedding.scss'\nimport { ProxyImageFrame } from '../image/proxy-image-frame'\n\ninterface OneClickFrameProps {\n  onImageFetch?: () => Promise<string>\n  loadingImageUrl?: string\n  hoverIcon?: IconName\n  hoverTextI18nKey?: string\n  tooltip?: string\n  containerClassName?: string\n  previewContainerClassName?: string\n  onActivate?: () => void\n}\n\nexport const OneClickEmbedding: React.FC<OneClickFrameProps> = ({\n  previewContainerClassName,\n  containerClassName,\n  onImageFetch,\n  loadingImageUrl,\n  children,\n  tooltip,\n  hoverIcon,\n  hoverTextI18nKey,\n  onActivate\n}) => {\n  const [showFrame, setShowFrame] = useState(false)\n  const [previewImageUrl, setPreviewImageUrl] = useState(loadingImageUrl)\n\n  const showChildren = () => {\n    setShowFrame(true)\n    if (onActivate) {\n      onActivate()\n    }\n  }\n\n  useEffect(() => {\n    if (!onImageFetch) {\n      return\n    }\n    onImageFetch()\n      .then((imageLink) => {\n        setPreviewImageUrl(imageLink)\n      })\n      .catch((message) => {\n        console.error(message)\n      })\n  }, [onImageFetch])\n\n  return (\n    <span className={containerClassName}>\n      <ShowIf condition={showFrame}>{children}</ShowIf>\n      <ShowIf condition={!showFrame}>\n        <span className={`one-click-embedding ${previewContainerClassName || ''}`} onClick={showChildren}>\n          <ShowIf condition={!!previewImageUrl}>\n            <ProxyImageFrame\n              className={'one-click-embedding-preview'}\n              src={previewImageUrl}\n              alt={tooltip || ''}\n              title={tooltip || ''}\n            />\n          </ShowIf>\n          <ShowIf condition={!!hoverIcon}>\n            <span className='one-click-embedding-icon text-center'>\n              <i className={`fa fa-${hoverIcon as string} fa-5x mb-2`} />\n              <ShowIf condition={!!hoverTextI18nKey}>\n                <br />\n                <Trans i18nKey={hoverTextI18nKey} />\n              </ShowIf>\n            </span>\n          </ShowIf>\n        </span>\n      </ShowIf>\n    </span>\n  )\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\nexport interface AsciinemaFrameProps {\n  id: string\n}\n\nexport const AsciinemaFrame: React.FC<AsciinemaFrameProps> = ({ id }) => {\n  return (\n    <OneClickEmbedding\n      containerClassName={'embed-responsive embed-responsive-16by9'}\n      previewContainerClassName={'embed-responsive-item'}\n      hoverIcon={'play'}\n      loadingImageUrl={`https://asciinema.org/a/${id}.png`}>\n      <iframe\n        className='embed-responsive-item'\n        title={`asciinema cast ${id}`}\n        src={`https://asciinema.org/a/${id}/embed?autoplay=1`}\n      />\n    </OneClickEmbedding>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:asciinema\\.org\\/a\\/)/\nconst idRegex = /(\\d+)/\nconst tailRegex = /(?:[./?#].*)?/\nconst gistUrlRegex = new RegExp(`(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${gistUrlRegex.source}$`, 'i')\n\nexport const replaceAsciinemaLink: RegexOptions = {\n  name: 'asciinema-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-asciinema id=\"${match}\"></app-asciinema>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { AsciinemaFrame } from './asciinema-frame'\nimport { replaceAsciinemaLink } from './replace-asciinema-link'\n\nexport class AsciinemaReplacer extends ComponentReplacer {\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceAsciinemaLink)\n  }\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'asciinema')\n    if (attributes && attributes.id) {\n      const asciinemaId = attributes.id\n      return <AsciinemaFrame id={asciinemaId} />\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const parseCsv = (csvText: string, csvColumnDelimiter: string): string[][] => {\n  const rows = csvText.split('\\n')\n  if (!rows || rows.length === 0) {\n    return []\n  }\n  const splitRegex = new RegExp(`${csvColumnDelimiter}(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)`)\n  return rows.filter((row) => row !== '').map((row) => row.split(splitRegex))\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useMemo } from 'react'\nimport { parseCsv } from './csv-parser'\n\nexport interface CsvTableProps {\n  code: string\n  delimiter: string\n  showHeader: boolean\n  tableRowClassName?: string\n  tableColumnClassName?: string\n}\n\nexport const CsvTable: React.FC<CsvTableProps> = ({\n  code,\n  delimiter,\n  showHeader,\n  tableRowClassName,\n  tableColumnClassName\n}) => {\n  const { rowsWithColumns, headerRow } = useMemo(() => {\n    const rowsWithColumns = parseCsv(code.trim(), delimiter)\n    let headerRow: string[] = []\n    if (showHeader) {\n      headerRow = rowsWithColumns.splice(0, 1)[0]\n    }\n    return { rowsWithColumns, headerRow }\n  }, [code, delimiter, showHeader])\n\n  const renderTableHeader = (row: string[]) => {\n    if (row !== []) {\n      return (\n        <thead>\n          <tr>\n            {row.map((column, columnNumber) => (\n              <th key={`header-${columnNumber}`}>{column}</th>\n            ))}\n          </tr>\n        </thead>\n      )\n    }\n  }\n\n  const renderTableBody = (rows: string[][]) => {\n    return (\n      <tbody>\n        {rows.map((row, rowNumber) => (\n          <tr className={tableRowClassName} key={`row-${rowNumber}`}>\n            {row.map((column, columnIndex) => (\n              <td className={tableColumnClassName} key={`cell-${rowNumber}-${columnIndex}`}>\n                {column.replace(/^\"|\"$/g, '')}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    )\n  }\n\n  return (\n    <table className={'csv-html-table table-striped'}>\n      {renderTableHeader(headerRow)}\n      {renderTableBody(rowsWithColumns)}\n    </table>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { CsvTable } from './csv-table'\n\nexport class CsvReplacer extends ComponentReplacer {\n  public getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'csv' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    const extraData = codeNode.attribs['data-extra']\n    const extraRegex = /\\s*(delimiter=([^\\s]*))?\\s*(header)?/\n    const extraInfos = extraRegex.exec(extraData)\n\n    let delimiter = ','\n    let showHeader = false\n\n    if (extraInfos) {\n      delimiter = extraInfos[2] || delimiter\n      showHeader = extraInfos[3] !== undefined\n    }\n\n    return <CsvTable code={code} delimiter={delimiter} showHeader={showHeader} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useIsDarkModeActivated } from '../../../../../hooks/common/use-is-dark-mode-activated'\n\nexport interface FlowChartProps {\n  code: string\n}\n\nexport const FlowChart: React.FC<FlowChartProps> = ({ code }) => {\n  const diagramRef = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState(false)\n  const darkModeActivated = useIsDarkModeActivated()\n\n  useTranslation()\n\n  useEffect(() => {\n    if (diagramRef.current === null) {\n      return\n    }\n    const currentDiagramRef = diagramRef.current\n    import(/* webpackChunkName: \"flowchart.js\" */ 'flowchart.js')\n      .then((imp) => {\n        const parserOutput = imp.parse(code)\n        try {\n          parserOutput.drawSVG(currentDiagramRef, {\n            'line-width': 2,\n            fill: 'none',\n            'font-size': 16,\n            'line-color': darkModeActivated ? '#ffffff' : '#000000',\n            'element-color': darkModeActivated ? '#ffffff' : '#000000',\n            'font-color': darkModeActivated ? '#ffffff' : '#000000',\n            'font-family': 'Source Sans Pro, \"Twemoji\", monospace'\n          })\n          setError(false)\n        } catch (error) {\n          setError(true)\n        }\n      })\n      .catch(() => console.error('error while loading flowchart.js'))\n\n    return () => {\n      Array.from(currentDiagramRef.children).forEach((value) => value.remove())\n    }\n  }, [code, darkModeActivated])\n\n  if (error) {\n    return (\n      <Alert variant={'danger'}>\n        <Trans i18nKey={'renderer.flowchart.invalidSyntax'} />\n      </Alert>\n    )\n  } else {\n    return <div ref={diagramRef} data-cy={'flowchart'} className={'text-center'} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { FlowChart } from './flowchart/flowchart'\n\nexport class FlowchartReplacer extends ComponentReplacer {\n  public getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'flow' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <FlowChart code={code} />\n  }\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport './gist-frame.scss'\n\nexport interface GistFrameProps {\n  id: string\n}\n\ninterface resizeEvent {\n  size: number\n  id: string\n}\n\nexport const GistFrame: React.FC<GistFrameProps> = ({ id }) => {\n  const iframeHtml = useMemo(() => {\n    return `\n      <html lang=\"en\">\n        <head>\n          <base target=\"_parent\">\n          <title>gist</title>\n          <style>\n            * { font-size:12px; }\n            body{ overflow:hidden; margin: 0;}\n          </style>\n          <script type=\"text/javascript\">\n            function doLoad() {\n                window.parent.postMessage({eventType: 'gistResize', size: document.body.scrollHeight, id: '${id}'}, '*')\n                tweakLinks();\n            }\n            function tweakLinks() {\n                document.querySelectorAll(\".gist-meta > a\").forEach((link) => {\n                    link.rel=\"noopener noreferer\"\n                    link.target=\"_blank\"\n                })\n            }\n          </script>\n        </head>\n        <body onload=\"doLoad()\">\n          <script type=\"text/javascript\" src=\"https://gist.github.com/${id}.js\"></script>\n        </body>\n      </html>`\n  }, [id])\n\n  const [frameHeight, setFrameHeight] = useState(0)\n\n  const sizeMessage = useCallback(\n    (message: MessageEvent) => {\n      const data = message.data as resizeEvent\n      if (data.id !== id) {\n        return\n      }\n      setFrameHeight(data.size)\n    },\n    [id]\n  )\n\n  useEffect(() => {\n    window.addEventListener('message', sizeMessage)\n    return () => {\n      window.removeEventListener('message', sizeMessage)\n    }\n  }, [sizeMessage])\n\n  return (\n    <iframe\n      sandbox='allow-scripts allow-top-navigation-by-user-activation allow-popups'\n      data-cy={'gh-gist'}\n      width='100%'\n      height={`${frameHeight}px`}\n      frameBorder='0'\n      title={`gist ${id}`}\n      src={`data:text/html;base64,${btoa(iframeHtml)}`}\n    />\n  )\n}\n","export default __webpack_public_path__ + \"static/media/gist-preview.d7b810ad.png\";","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:gist\\.github\\.com\\/)/\nconst idRegex = /(\\w+\\/\\w+)/\nconst tailRegex = /(?:[./?#].*)?/\nconst gistUrlRegex = new RegExp(`(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`)\nconst linkRegex = new RegExp(`^${gistUrlRegex.source}$`, 'i')\n\nexport const replaceGistLink: RegexOptions = {\n  name: 'gist-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-gist id=\"${match}\"></app-gist>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst finalRegex = /^{%gist (\\w+\\/\\w+) ?%}$/\n\nexport const replaceLegacyGistShortCode: RegexOptions = {\n  name: 'legacy-gist-short-code',\n  regex: finalRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-gist id=\"${match}\"></app-gist>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { GistFrame } from './gist-frame'\nimport preview from './gist-preview.png'\nimport { replaceGistLink } from './replace-gist-link'\nimport { replaceLegacyGistShortCode } from './replace-legacy-gist-short-code'\n\nexport class GistReplacer extends ComponentReplacer {\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceGistLink)\n    markdownItRegex(markdownIt, replaceLegacyGistShortCode)\n  }\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'gist')\n    if (attributes && attributes.id) {\n      const gistId = attributes.id\n      return (\n        <OneClickEmbedding\n          previewContainerClassName={'gist-frame'}\n          loadingImageUrl={preview}\n          hoverIcon={'github'}\n          tooltip={'click to load gist'}>\n          <GistFrame id={gistId} />\n        </OneClickEmbedding>\n      )\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { ShowIf } from '../../../common/show-if/show-if'\nimport { useFrontendBaseUrl } from '../../../../hooks/common/use-frontend-base-url'\n\nexport interface GraphvizFrameProps {\n  code: string\n}\n\nexport const GraphvizFrame: React.FC<GraphvizFrameProps> = ({ code }) => {\n  const container = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n\n  const showError = useCallback((error: string) => {\n    if (!container.current) {\n      return\n    }\n    setError(error)\n    console.error(error)\n    container.current.querySelectorAll('svg').forEach((child) => child.remove())\n  }, [])\n\n  const frontendBaseUrl = useFrontendBaseUrl()\n\n  useEffect(() => {\n    if (!container.current) {\n      return\n    }\n    const actualContainer = container.current\n\n    import(/* webpackChunkName: \"d3-graphviz\" */ '@hpcc-js/wasm')\n      .then((wasmPlugin) => {\n        wasmPlugin.wasmFolder(`${frontendBaseUrl}/static/js`)\n      })\n      .then(() => import(/* webpackChunkName: \"d3-graphviz\" */ 'd3-graphviz'))\n      .then((graphvizImport) => {\n        try {\n          setError(undefined)\n          graphvizImport\n            .graphviz(actualContainer, {\n              useWorker: false,\n              zoom: false\n            })\n            .onerror(showError)\n            .renderDot(code)\n        } catch (error) {\n          showError(error)\n        }\n      })\n      .catch(() => {\n        console.error('error while loading graphviz')\n      })\n  }, [code, error, frontendBaseUrl, showError])\n\n  return (\n    <Fragment>\n      <ShowIf condition={!!error}>\n        <Alert variant={'warning'}>{error}</Alert>\n      </ShowIf>\n      <div className={'text-center overflow-x-auto'} data-cy={'graphviz'} ref={container} />\n    </Fragment>\n  )\n}\n\nexport default GraphvizFrame\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { GraphvizFrame } from './graphviz-frame'\n\nexport class GraphvizReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'graphviz' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <GraphvizFrame code={code} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { HighlightedCode } from './highlighted-code/highlighted-code'\n\nexport class HighlightedCodeReplacer extends ComponentReplacer {\n  private lastLineNumber = 0\n\n  public getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const language = codeNode.attribs['data-highlight-language']\n    const extraData = codeNode.attribs['data-extra']\n    const extraInfos = /(=(\\d+|\\+)?)?(!?)/.exec(extraData)\n\n    let showLineNumbers = false\n    let startLineNumberAttribute = ''\n    let wrapLines = false\n\n    if (extraInfos) {\n      showLineNumbers = extraInfos[1]?.startsWith('=') || false\n      startLineNumberAttribute = extraInfos[2]\n      wrapLines = extraInfos[3] === '!'\n    }\n\n    const startLineNumber =\n      startLineNumberAttribute === '+' ? this.lastLineNumber : parseInt(startLineNumberAttribute) || 1\n    const code = codeNode.children[0].data as string\n\n    if (showLineNumbers) {\n      this.lastLineNumber = startLineNumber + code.split('\\n').filter((line) => !!line).length\n    }\n\n    return (\n      <HighlightedCode\n        language={language}\n        startLineNumber={showLineNumbers ? startLineNumber : undefined}\n        wrapLines={wrapLines}\n        code={code}\n      />\n    )\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { ProxyImageFrame } from './proxy-image-frame'\n\nexport type ImageClickHandler = (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void\n\nexport class ImageReplacer extends ComponentReplacer {\n  private readonly clickHandler?: ImageClickHandler\n\n  constructor(clickHandler?: ImageClickHandler) {\n    super()\n    this.clickHandler = clickHandler\n  }\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    if (node.name === 'img' && node.attribs) {\n      return (\n        <ProxyImageFrame\n          id={node.attribs.id}\n          className={`${node.attribs.class} cursor-zoom-in`}\n          src={node.attribs.src}\n          alt={node.attribs.alt}\n          title={node.attribs.title}\n          width={node.attribs.width}\n          height={node.attribs.height}\n          onClick={this.clickHandler}\n        />\n      )\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport mathJax from 'markdown-it-mathjax'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport './katex.scss'\n\nconst getNodeIfKatexBlock = (node: DomElement): DomElement | undefined => {\n  if (node.name !== 'p' || !node.children || node.children.length === 0) {\n    return\n  }\n  return node.children.find((subnode) => {\n    return subnode.name === 'app-katex' && subnode.attribs?.inline === undefined\n  })\n}\n\nconst getNodeIfInlineKatex = (node: DomElement): DomElement | undefined => {\n  return node.name === 'app-katex' && node.attribs?.inline !== undefined ? node : undefined\n}\n\nconst KaTeX = React.lazy(() => import(/* webpackChunkName: \"katex\" */ '@matejmazur/react-katex'))\n\nexport class KatexReplacer extends ComponentReplacer {\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = mathJax({\n    beforeMath: '<app-katex>',\n    afterMath: '</app-katex>',\n    beforeInlineMath: '<app-katex inline>',\n    afterInlineMath: '</app-katex>',\n    beforeDisplayMath: '<app-katex>',\n    afterDisplayMath: '</app-katex>'\n  })\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    const katex = getNodeIfKatexBlock(node) || getNodeIfInlineKatex(node)\n    if (katex?.children && katex.children[0]) {\n      const mathJaxContent = katex.children[0]?.data as string\n      const isInline = katex.attribs?.inline !== undefined\n      return <KaTeX block={!isInline} math={mathJaxContent} errorColor={'#cc0000'} />\n    }\n  }\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport { ComponentReplacer } from '../ComponentReplacer'\n\nexport class LinemarkerReplacer extends ComponentReplacer {\n  public getReplacement(codeNode: DomElement): null | undefined {\n    return codeNode.name === 'app-linemarker' ? null : undefined\n  }\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { ForkAwesomeIcon } from '../fork-awesome/fork-awesome-icon'\n\nexport interface LockButtonProps {\n  locked: boolean\n  onLockedChanged: (newState: boolean) => void\n  title: string\n}\n\nexport const LockButton: React.FC<LockButtonProps> = ({ locked, onLockedChanged, title }) => {\n  return (\n    <Button variant='dark' size='sm' onClick={() => onLockedChanged(!locked)} title={title}>\n      {locked ? <ForkAwesomeIcon icon='lock' /> : <ForkAwesomeIcon icon='unlock' />}\n    </Button>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { LockButton } from '../../../common/lock-button/lock-button'\nimport '../../utils/button-inside.scss'\n\nexport interface MarkmapFrameProps {\n  code: string\n}\n\nconst blockHandler = (event: Event): void => {\n  event.stopPropagation()\n}\n\nexport const MarkmapFrame: React.FC<MarkmapFrameProps> = ({ code }) => {\n  const { t } = useTranslation()\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [disablePanAndZoom, setDisablePanAndZoom] = useState(true)\n\n  useEffect(() => {\n    if (diagramContainer.current) {\n      if (disablePanAndZoom) {\n        diagramContainer.current.addEventListener('wheel', blockHandler, true)\n        diagramContainer.current.addEventListener('mousedown', blockHandler, true)\n        diagramContainer.current.addEventListener('click', blockHandler, true)\n        diagramContainer.current.addEventListener('dblclick', blockHandler, true)\n        diagramContainer.current.addEventListener('touchstart', blockHandler, true)\n      } else {\n        diagramContainer.current.removeEventListener('wheel', blockHandler, true)\n        diagramContainer.current.removeEventListener('mousedown', blockHandler, true)\n        diagramContainer.current.removeEventListener('click', blockHandler, true)\n        diagramContainer.current.removeEventListener('dblclick', blockHandler, true)\n        diagramContainer.current.removeEventListener('touchstart', blockHandler, true)\n      }\n    }\n  }, [diagramContainer, disablePanAndZoom])\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    const actualContainer = diagramContainer.current\n    import(/* webpackChunkName: \"markmap\" */ './markmap-loader')\n      .then(({ markmapLoader }) => {\n        try {\n          const svg: SVGSVGElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n          svg.setAttribute('width', '100%')\n          actualContainer.querySelectorAll('svg').forEach((child) => child.remove())\n          actualContainer.appendChild(svg)\n          markmapLoader(svg, code)\n        } catch (error) {\n          console.error(error)\n        }\n      })\n      .catch(() => {\n        console.error('error while loading markmap')\n      })\n  }, [code])\n\n  return (\n    <div data-cy={'markmap'}>\n      <div className={'text-center'} ref={diagramContainer} />\n      <div className={'text-right button-inside'}>\n        <LockButton\n          locked={disablePanAndZoom}\n          onLockedChanged={(newState) => setDisablePanAndZoom(newState)}\n          title={disablePanAndZoom ? t('renderer.markmap.locked') : t('renderer.markmap.unlocked')}\n        />\n      </div>\n    </div>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MarkmapFrame } from './markmap-frame'\n\nexport class MarkmapReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'markmap' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <MarkmapFrame code={code} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { ShowIf } from '../../../common/show-if/show-if'\nimport './mermaid.scss'\n\nexport interface MermaidChartProps {\n  code: string\n}\n\ninterface MermaidParseError {\n  str: string\n}\n\nlet mermaidInitialized = false\n\nexport const MermaidChart: React.FC<MermaidChartProps> = ({ code }) => {\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (!mermaidInitialized) {\n      import(/* webpackChunkName: \"mermaid\" */ 'mermaid')\n        .then((mermaid) => {\n          mermaid.default.initialize({ startOnLoad: false })\n          mermaidInitialized = true\n        })\n        .catch(() => {\n          console.error('error while loading mermaid')\n        })\n    }\n  }, [])\n\n  const showError = useCallback(\n    (error: string) => {\n      setError(error)\n      console.error(error)\n      if (!diagramContainer.current) {\n        return\n      }\n      diagramContainer.current.querySelectorAll('svg').forEach((child) => child.remove())\n    },\n    [setError]\n  )\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    import(/* webpackChunkName: \"mermaid\" */ 'mermaid')\n      .then((mermaid) => {\n        try {\n          if (!diagramContainer.current) {\n            return\n          }\n          mermaid.default.parse(code)\n          delete diagramContainer.current.dataset.processed\n          diagramContainer.current.textContent = code\n          mermaid.default.init(diagramContainer.current)\n          setError(undefined)\n        } catch (error) {\n          const message = (error as MermaidParseError).str\n          showError(message || t('renderer.mermaid.unknownError'))\n        }\n      })\n      .catch(() => showError('Error while loading mermaid'))\n  }, [code, showError, t])\n\n  return (\n    <Fragment>\n      <ShowIf condition={!!error}>\n        <Alert variant={'warning'}>{error}</Alert>\n      </ShowIf>\n      <div className={'text-center mermaid text-black'} ref={diagramContainer} />\n    </Fragment>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MermaidChart } from './mermaid-chart'\n\nexport class MermaidReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'mermaid' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <MermaidChart code={code} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport { ReactElement } from 'react'\nimport { ComponentReplacer, NativeRenderer, SubNodeTransform } from '../ComponentReplacer'\n\nconst isColorExtraElement = (node: DomElement | undefined): boolean => {\n  if (!node || !node.attribs || !node.attribs.class || !node.attribs['data-color']) {\n    return false\n  }\n  return node.name === 'span' && node.attribs.class === 'quote-extra'\n}\n\nconst findQuoteOptionsParent = (nodes: DomElement[]): DomElement | undefined => {\n  return nodes.find((child) => {\n    if (child.name !== 'p' || !child.children || child.children.length < 1) {\n      return false\n    }\n    return child.children.find(isColorExtraElement) !== undefined\n  })\n}\n\nexport class ColoredBlockquoteReplacer extends ComponentReplacer {\n  public getReplacement(\n    node: DomElement,\n    subNodeTransform: SubNodeTransform,\n    nativeRenderer: NativeRenderer\n  ): ReactElement | undefined {\n    if (node.name !== 'blockquote' || !node.children || node.children.length < 1) {\n      return\n    }\n    const paragraph = findQuoteOptionsParent(node.children)\n    if (!paragraph) {\n      return\n    }\n    const childElements = paragraph.children || []\n    const optionsTag = childElements.find(isColorExtraElement)\n    if (!optionsTag) {\n      return\n    }\n    paragraph.children = childElements.filter((elem) => !isColorExtraElement(elem))\n    const attributes = optionsTag.attribs\n    if (!attributes || !attributes['data-color']) {\n      return\n    }\n    node.attribs = Object.assign(node.attribs || {}, { style: `border-left-color: ${attributes['data-color']};` })\n    return nativeRenderer()\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport links from '../../../../links.json'\nimport { TranslatedExternalLink } from '../../../common/links/translated-external-link'\n\nexport const DeprecationWarning: React.FC = () => {\n  useTranslation()\n\n  return (\n    <Alert data-cy={'yaml'} className={'mt-2'} variant={'warning'}>\n      <span className={'text-wrap'}>\n        <Trans i18nKey={'renderer.sequence.deprecationWarning'} />\n      </span>\n      <br />\n      <TranslatedExternalLink i18nKey={'common.readForMoreInfo'} className={'text-primary'} href={links.faq} />\n    </Alert>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React, { Fragment } from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { MermaidChart } from '../mermaid/mermaid-chart'\nimport { DeprecationWarning } from './deprecation-warning'\n\nexport class SequenceDiagramReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'sequence' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return (\n      <Fragment>\n        <DeprecationWarning />\n        <MermaidChart code={'sequenceDiagram\\n' + code} />\n      </Fragment>\n    )\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React, { ReactElement } from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\n\nexport type TaskCheckedChangeHandler = (lineInMarkdown: number, checked: boolean) => void\n\nexport class TaskListReplacer extends ComponentReplacer {\n  onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void\n\n  constructor(onTaskCheckedChange?: TaskCheckedChangeHandler) {\n    super()\n    this.onTaskCheckedChange = onTaskCheckedChange\n  }\n\n  handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const lineNum = Number(event.currentTarget.dataset.line)\n    if (this.onTaskCheckedChange) {\n      this.onTaskCheckedChange(lineNum, event.currentTarget.checked)\n    }\n  }\n\n  public getReplacement(node: DomElement): ReactElement | undefined {\n    if (node.attribs?.class !== 'task-list-item-checkbox') {\n      return\n    }\n    return (\n      <input\n        disabled={this.onTaskCheckedChange === undefined}\n        className='task-list-item-checkbox'\n        type='checkbox'\n        checked={node.attribs.checked !== undefined}\n        onChange={this.handleCheckboxChange}\n        id={node.attribs.id}\n        data-line={node.attribs['data-line']}\n      />\n    )\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { VisualizationSpec } from 'vega-embed'\nimport { ShowIf } from '../../../common/show-if/show-if'\n\nexport interface VegaChartProps {\n  code: string\n}\n\nexport const VegaChart: React.FC<VegaChartProps> = ({ code }) => {\n  const diagramContainer = useRef<HTMLDivElement>(null)\n  const [error, setError] = useState<string>()\n  const { t } = useTranslation()\n\n  const showError = useCallback((error: string) => {\n    if (!diagramContainer.current) {\n      return\n    }\n    console.error(error)\n    setError(error)\n  }, [])\n\n  useEffect(() => {\n    if (!diagramContainer.current) {\n      return\n    }\n    import(/* webpackChunkName: \"vega\" */ 'vega-embed')\n      .then((embed) => {\n        try {\n          if (!diagramContainer.current) {\n            return\n          }\n\n          const spec = JSON.parse(code) as VisualizationSpec\n          embed\n            .default(diagramContainer.current, spec, {\n              actions: {\n                export: true,\n                source: false,\n                compiled: false,\n                editor: false\n              },\n              i18n: {\n                PNG_ACTION: t('renderer.vega-lite.png'),\n                SVG_ACTION: t('renderer.vega-lite.svg')\n              }\n            })\n            .then(() => setError(undefined))\n            .catch((error: Error) => showError(error.message))\n        } catch (error) {\n          showError(t('renderer.vega-lite.errorJson'))\n        }\n      })\n      .catch(() => {\n        console.error('error while loading vega-light')\n      })\n  }, [code, showError, t])\n\n  return (\n    <Fragment>\n      <ShowIf condition={!!error}>\n        <Alert variant={'danger'}>{error}</Alert>\n      </ShowIf>\n      <div className={'text-center'}>\n        <div ref={diagramContainer} />\n      </div>\n    </Fragment>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { VegaChart } from './vega-chart'\n\nexport class VegaReplacer implements ComponentReplacer {\n  getReplacement(codeNode: DomElement): React.ReactElement | undefined {\n    if (\n      codeNode.name !== 'code' ||\n      !codeNode.attribs ||\n      !codeNode.attribs['data-highlight-language'] ||\n      codeNode.attribs['data-highlight-language'] !== 'vega-lite' ||\n      !codeNode.children ||\n      !codeNode.children[0]\n    ) {\n      return\n    }\n\n    const code = codeNode.children[0].data as string\n\n    return <VegaChart code={code} />\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nexport const replaceLegacyVimeoShortCode: RegexOptions = {\n  name: 'legacy-vimeo-short-code',\n  regex: /^{%vimeo ([\\d]{6,11}) ?%}$/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-vimeo id=\"${match}\"></app-vimeo>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst domainRegex = /(?:player\\.)?(?:vimeo\\.com\\/)(?:(?:channels|album|ondemand|groups)\\/\\w+\\/)?(?:video\\/)?/\nconst idRegex = /([\\d]{6,11})/\nconst tailRegex = /(?:[?#].*)?/\nconst vimeoVideoUrlRegex = new RegExp(\n  `(?:${protocolRegex.source}${domainRegex.source}${idRegex.source}${tailRegex.source})`\n)\nconst linkRegex = new RegExp(`^${vimeoVideoUrlRegex.source}$`, 'i')\n\nexport const replaceVimeoLink: RegexOptions = {\n  name: 'vimeo-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-vimeo id=\"${match}\"></app-vimeo>`\n  }\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback } from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\ninterface VimeoApiResponse {\n  // Vimeo uses strange names for their fields. ESLint doesn't like that.\n  // eslint-disable-next-line camelcase\n  thumbnail_large?: string\n}\n\nexport interface VimeoFrameProps {\n  id: string\n}\n\nexport const VimeoFrame: React.FC<VimeoFrameProps> = ({ id }) => {\n  const getPreviewImageLink = useCallback(async () => {\n    const response = await fetch(`https://vimeo.com/api/v2/video/${id}.json`, {\n      credentials: 'omit',\n      referrerPolicy: 'no-referrer'\n    })\n    if (response.status !== 200) {\n      throw new Error('Error while loading data from vimeo api')\n    }\n    const vimeoResponse: VimeoApiResponse[] = (await response.json()) as VimeoApiResponse[]\n\n    if (vimeoResponse[0] && vimeoResponse[0].thumbnail_large) {\n      return vimeoResponse[0].thumbnail_large\n    } else {\n      throw new Error('Invalid vimeo response')\n    }\n  }, [id])\n\n  return (\n    <OneClickEmbedding\n      containerClassName={'embed-responsive embed-responsive-16by9'}\n      previewContainerClassName={'embed-responsive-item'}\n      loadingImageUrl={'https://i.vimeocdn.com/video/'}\n      hoverIcon={'vimeo-square'}\n      onImageFetch={getPreviewImageLink}>\n      <iframe\n        className='embed-responsive-item'\n        title={`vimeo video of ${id}`}\n        src={`https://player.vimeo.com/video/${id}?autoplay=1`}\n        allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n      />\n    </OneClickEmbedding>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { replaceLegacyVimeoShortCode } from './replace-legacy-vimeo-short-code'\nimport { replaceVimeoLink } from './replace-vimeo-link'\nimport { VimeoFrame } from './vimeo-frame'\n\nexport class VimeoReplacer extends ComponentReplacer {\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceVimeoLink)\n    markdownItRegex(markdownIt, replaceLegacyVimeoShortCode)\n  }\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'vimeo')\n    if (attributes && attributes.id) {\n      const videoId = attributes.id\n      return <VimeoFrame id={videoId} />\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nexport const replaceLegacyYoutubeShortCode: RegexOptions = {\n  name: 'legacy-youtube-short-code',\n  regex: /^{%youtube ([^\"&?\\\\/\\s]{11}) ?%}$/,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-youtube id=\"${match}\"></app-youtube>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { RegexOptions } from '../../../../external-types/markdown-it-regex/interface'\n\nconst protocolRegex = /(?:http(?:s)?:\\/\\/)?/\nconst subdomainRegex = /(?:www.)?/\nconst pathRegex = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)/\nconst idRegex = /([^\"&?\\\\/\\s]{11})/\nconst tailRegex = /(?:[?&#].*)?/\nconst youtubeVideoUrlRegex = new RegExp(\n  `(?:${protocolRegex.source}${subdomainRegex.source}${pathRegex.source}${idRegex.source}${tailRegex.source})`\n)\nconst linkRegex = new RegExp(`^${youtubeVideoUrlRegex.source}$`, 'i')\n\nexport const replaceYouTubeLink: RegexOptions = {\n  name: 'youtube-link',\n  regex: linkRegex,\n  replace: (match) => {\n    // ESLint wants to collapse this tag, but then the tag won't be valid html anymore.\n    // noinspection CheckTagEmptyBody\n    return `<app-youtube id=\"${match}\"></app-youtube>`\n  }\n}\n","/*\n SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n\n SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { OneClickEmbedding } from '../one-click-frame/one-click-embedding'\n\nexport interface YouTubeFrameProps {\n  id: string\n}\n\nexport const YouTubeFrame: React.FC<YouTubeFrameProps> = ({ id }) => {\n  return (\n    <OneClickEmbedding\n      containerClassName={'embed-responsive embed-responsive-16by9'}\n      previewContainerClassName={'embed-responsive-item'}\n      hoverIcon={'youtube-play'}\n      loadingImageUrl={`https://i.ytimg.com/vi/${id}/maxresdefault.jpg`}>\n      <iframe\n        className='embed-responsive-item'\n        title={`youtube video of ${id}`}\n        src={`https://www.youtube-nocookie.com/embed/${id}?autoplay=1`}\n        allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n      />\n    </OneClickEmbedding>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport markdownItRegex from 'markdown-it-regex'\nimport React from 'react'\nimport { ComponentReplacer } from '../ComponentReplacer'\nimport { getAttributesFromHedgeDocTag } from '../utils'\nimport { replaceLegacyYoutubeShortCode } from './replace-legacy-youtube-short-code'\nimport { replaceYouTubeLink } from './replace-youtube-link'\nimport { YouTubeFrame } from './youtube-frame'\n\nexport class YoutubeReplacer extends ComponentReplacer {\n  public static readonly markdownItPlugin: MarkdownIt.PluginSimple = (markdownIt) => {\n    markdownItRegex(markdownIt, replaceYouTubeLink)\n    markdownItRegex(markdownIt, replaceLegacyYoutubeShortCode)\n  }\n\n  public getReplacement(node: DomElement): React.ReactElement | undefined {\n    const attributes = getAttributesFromHedgeDocTag(node, 'youtube')\n    if (attributes && attributes.id) {\n      const videoId = attributes.id\n      return <YouTubeFrame id={videoId} />\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useCallback } from 'react'\nimport { AbcReplacer } from '../replace-components/abc/abc-replacer'\nimport { AsciinemaReplacer } from '../replace-components/asciinema/asciinema-replacer'\nimport { ComponentReplacer } from '../replace-components/ComponentReplacer'\nimport { CsvReplacer } from '../replace-components/csv/csv-replacer'\nimport { FlowchartReplacer } from '../replace-components/flow/flowchart-replacer'\nimport { GistReplacer } from '../replace-components/gist/gist-replacer'\nimport { GraphvizReplacer } from '../replace-components/graphviz/graphviz-replacer'\nimport { HighlightedCodeReplacer } from '../replace-components/highlighted-fence/highlighted-fence-replacer'\nimport { ImageClickHandler, ImageReplacer } from '../replace-components/image/image-replacer'\nimport { KatexReplacer } from '../replace-components/katex/katex-replacer'\nimport { LinemarkerReplacer } from '../replace-components/linemarker/linemarker-replacer'\nimport { LinkReplacer } from '../replace-components/link-replacer/link-replacer'\nimport { MarkmapReplacer } from '../replace-components/markmap/markmap-replacer'\nimport { MermaidReplacer } from '../replace-components/mermaid/mermaid-replacer'\nimport { ColoredBlockquoteReplacer } from '../replace-components/colored-blockquote/colored-blockquote-replacer'\nimport { SequenceDiagramReplacer } from '../replace-components/sequence-diagram/sequence-diagram-replacer'\nimport { TaskCheckedChangeHandler, TaskListReplacer } from '../replace-components/task-list/task-list-replacer'\nimport { VegaReplacer } from '../replace-components/vega-lite/vega-replacer'\nimport { VimeoReplacer } from '../replace-components/vimeo/vimeo-replacer'\nimport { YoutubeReplacer } from '../replace-components/youtube/youtube-replacer'\n\nexport const useComponentReplacers = (\n  onTaskCheckedChange?: TaskCheckedChangeHandler,\n  onImageClick?: ImageClickHandler,\n  baseUrl?: string\n): (() => ComponentReplacer[]) =>\n  useCallback(\n    () => [\n      new LinemarkerReplacer(),\n      new GistReplacer(),\n      new YoutubeReplacer(),\n      new VimeoReplacer(),\n      new AsciinemaReplacer(),\n      new AbcReplacer(),\n      new ImageReplacer(onImageClick),\n      new SequenceDiagramReplacer(),\n      new CsvReplacer(),\n      new FlowchartReplacer(),\n      new MermaidReplacer(),\n      new GraphvizReplacer(),\n      new MarkmapReplacer(),\n      new VegaReplacer(),\n      new HighlightedCodeReplacer(),\n      new ColoredBlockquoteReplacer(),\n      new KatexReplacer(),\n      new TaskListReplacer(onTaskCheckedChange),\n      new LinkReplacer(baseUrl)\n    ],\n    [onImageClick, onTaskCheckedChange, baseUrl]\n  )\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport equal from 'fast-deep-equal'\nimport { RefObject, useCallback, useEffect, useRef } from 'react'\nimport useResizeObserver from 'use-resize-observer'\nimport { LineMarkerPosition } from '../types'\nimport { LineMarkers } from '../replace-components/linemarker/line-number-marker'\n\nexport const calculateLineMarkerPositions = (\n  documentElement: HTMLDivElement,\n  currentLineMarkers: LineMarkers[],\n  offset?: number\n): LineMarkerPosition[] => {\n  const lineMarkers = currentLineMarkers\n  const children: HTMLCollection = documentElement.children\n  const lineMarkerPositions: LineMarkerPosition[] = []\n\n  Array.from(children).forEach((child, childIndex) => {\n    const htmlChild = child as HTMLElement\n    if (htmlChild.offsetTop === undefined) {\n      return\n    }\n    const currentLineMarker = lineMarkers[childIndex]\n    if (currentLineMarker === undefined) {\n      return\n    }\n\n    const lastPosition = lineMarkerPositions[lineMarkerPositions.length - 1]\n    if (!lastPosition || lastPosition.line !== currentLineMarker.startLine) {\n      lineMarkerPositions.push({\n        line: currentLineMarker.startLine,\n        position: htmlChild.offsetTop + (offset ?? 0)\n      })\n    }\n\n    lineMarkerPositions.push({\n      line: currentLineMarker.endLine,\n      position: htmlChild.offsetTop + htmlChild.offsetHeight + (offset ?? 0)\n    })\n  })\n\n  return lineMarkerPositions\n}\n\nexport const useCalculateLineMarkerPosition = (\n  documentElement: RefObject<HTMLDivElement>,\n  lineMarkers?: LineMarkers[],\n  onLineMarkerPositionChanged?: (lineMarkerPosition: LineMarkerPosition[]) => void,\n  offset?: number\n): void => {\n  const lastLineMarkerPositions = useRef<LineMarkerPosition[]>()\n\n  const calculateNewLineMarkerPositions = useCallback(() => {\n    if (!documentElement.current || !onLineMarkerPositionChanged || !lineMarkers) {\n      return\n    }\n\n    const newLines = calculateLineMarkerPositions(documentElement.current, lineMarkers, offset)\n\n    if (!equal(newLines, lastLineMarkerPositions)) {\n      lastLineMarkerPositions.current = newLines\n      onLineMarkerPositionChanged(newLines)\n    }\n  }, [documentElement, lineMarkers, offset, onLineMarkerPositionChanged])\n\n  useEffect(() => {\n    calculateNewLineMarkerPositions()\n  }, [calculateNewLineMarkerPositions])\n\n  useResizeObserver({\n    ref: documentElement,\n    onResize: () => calculateNewLineMarkerPositions()\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport equal from 'fast-deep-equal'\nimport { MutableRefObject, useEffect, useRef } from 'react'\n\nexport const useOnRefChange = <T>(\n  reference: MutableRefObject<T | undefined>,\n  onChange?: (newValue?: T) => void\n): void => {\n  const lastValue = useRef<T | undefined>()\n  useEffect(() => {\n    if (onChange && !equal(reference, lastValue.current)) {\n      lastValue.current = reference.current\n      onChange(reference.current)\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport linkify from 'markdown-it/lib/rules_core/linkify'\n\nexport const linkifyExtra: MarkdownIt.PluginSimple = (md) => {\n  md.core.ruler.push('linkify', (state) => {\n    try {\n      state.md.options.linkify = true\n      return linkify(state)\n    } finally {\n      state.md.options.linkify = false\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\n\nexport const MarkdownItParserDebugger: MarkdownIt.PluginSimple = (md: MarkdownIt) => {\n  if (process.env.NODE_ENV !== 'production') {\n    md.core.ruler.push('test', (state) => {\n      console.log(state)\n      return false\n    })\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport { escapeHtml } from 'markdown-it/lib/common/utils'\nimport markdownItContainer from 'markdown-it-container'\nimport Token from 'markdown-it/lib/token'\nimport { MarkdownItPlugin } from '../replace-components/ComponentReplacer'\nimport { RenderContainerReturn } from './alert-container'\n\nexport const spoilerRegEx = /^spoiler\\s+(.*)$/\n\nconst createSpoilerContainer = (): RenderContainerReturn => {\n  return (tokens: Token[], index: number) => {\n    const matches = spoilerRegEx.exec(tokens[index].info.trim())\n\n    if (tokens[index].nesting === 1 && matches && matches[1]) {\n      // opening tag\n      return `<details><summary>${escapeHtml(matches[1])}</summary>`\n    } else {\n      // closing tag\n      return '</details>\\n'\n    }\n  }\n}\n\nexport const spoilerContainer: MarkdownItPlugin = (markdownIt: MarkdownIt) => {\n  markdownItContainer(markdownIt, 'spoiler', {\n    validate: (params: string) => spoilerRegEx.test(params),\n    render: createSpoilerContainer()\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItTaskLists from '@hedgedoc/markdown-it-task-lists'\nimport MarkdownIt from 'markdown-it'\n\nexport const tasksLists: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItTaskLists(markdownIt, {\n    enabled: true,\n    label: true,\n    lineNumber: true\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport emojiData from 'emoji-picker-element-data/en/emojibase/data.json'\nimport { ForkAwesomeIcons } from '../../../editor-page/editor-pane/tool-bar/emoji-picker/icon-names'\n\ninterface EmojiEntry {\n  shortcodes: string[]\n  emoji: string\n}\n\ntype ShortCodeMap = { [key: string]: string }\n\nconst shortCodeMap = (emojiData as unknown as EmojiEntry[]).reduce((reduceObject, emoji) => {\n  emoji.shortcodes.forEach((shortcode) => {\n    reduceObject[shortcode] = emoji.emoji\n  })\n  return reduceObject\n}, {} as ShortCodeMap)\n\nconst emojiSkinToneModifierMap = [1, 2, 3, 4, 5].reduce((reduceObject, modifierValue) => {\n  const lightSkinCode = 127995\n  const codepoint = lightSkinCode + (modifierValue - 1)\n  const shortcode = `skin-tone-${modifierValue}`\n  reduceObject[shortcode] = `&#${codepoint};`\n  return reduceObject\n}, {} as ShortCodeMap)\n\nconst forkAwesomeIconMap = Object.keys(ForkAwesomeIcons).reduce((reduceObject, icon) => {\n  const shortcode = `fa-${icon}`\n  // noinspection CheckTagEmptyBody\n  reduceObject[shortcode] = `<i class=\"fa fa-${icon}\"></i>`\n  return reduceObject\n}, {} as ShortCodeMap)\n\nexport const combinedEmojiData = {\n  ...shortCodeMap,\n  ...emojiSkinToneModifierMap,\n  ...forkAwesomeIconMap\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport emoji from 'markdown-it-emoji/bare'\nimport { combinedEmojiData } from './emoji/mapping'\n\nexport const twitterEmojis: MarkdownIt.PluginSimple = (markdownIt) => {\n  emoji(markdownIt, {\n    defs: combinedEmojiData\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport plantuml from 'markdown-it-plantuml'\nimport MarkdownIt, { Options } from 'markdown-it/lib'\nimport Renderer, { RenderRule } from 'markdown-it/lib/renderer'\nimport Token from 'markdown-it/lib/token'\nimport { store } from '../../../redux'\nimport { MarkdownItPlugin } from '../replace-components/ComponentReplacer'\n\nexport const plantumlWithError: MarkdownItPlugin = (markdownIt: MarkdownIt) => {\n  const plantumlServer = store.getState().config.plantumlServer\n  if (plantumlServer) {\n    plantuml(markdownIt, {\n      openMarker: '```plantuml',\n      closeMarker: '```',\n      server: plantumlServer\n    })\n  } else {\n    plantumlError(markdownIt)\n  }\n}\n\nconst plantumlError: MarkdownIt.PluginSimple = (md) => {\n  const defaultRenderer: RenderRule = md.renderer.rules.fence || (() => '')\n  md.renderer.rules.fence = (tokens: Token[], idx: number, options: Options, env, slf: Renderer) => {\n    const token = tokens[idx]\n    if (token.info === 'plantuml') {\n      return `\n        <p class=\"alert alert-danger\">\n          PlantUML plugin is enabled but not properly configured.\n        </p>\n      `\n    }\n    return defaultRenderer(tokens, idx, options, env, slf)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport anchor from 'markdown-it-anchor'\n\nexport const headlineAnchors: MarkdownIt.PluginSimple = (markdownIt) => {\n  const options: anchor.AnchorOptions = {\n    permalink: true,\n    permalinkBefore: true,\n    permalinkClass: 'heading-anchor text-dark',\n    permalinkSymbol: '<i class=\"fa fa-link\"></i>',\n    permalinkHref: (slug: string): string => `#${slug}`\n  }\n\n  anchor(markdownIt, options)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%pdf (.*) ?%}$/\n\nexport const legacyPdfShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n    name: 'legacy-pdf-short-code',\n    regex: finalRegex,\n    replace: (match: string) => {\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${match}\">${match}</a>`\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%slideshare (\\w+\\/[\\w-]+) ?%}$/\n\nexport const legacySlideshareShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n    name: 'legacy-slideshare-short-code',\n    regex: finalRegex,\n    replace: (match: string) => {\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.slideshare.net/${match}\">https://www.slideshare.net/${match}</a>`\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport markdownItRegex from 'markdown-it-regex'\nimport MarkdownIt from 'markdown-it/lib'\n\nconst finalRegex = /^{%speakerdeck (\\w+\\/[\\w-]+) ?%}$/\n\nexport const legacySpeakerdeckShortCode: MarkdownIt.PluginSimple = (markdownIt) => {\n  markdownItRegex(markdownIt, {\n    name: 'legacy-speakerdeck-short-code',\n    regex: finalRegex,\n    replace: (match: string) => {\n      return `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://speakerdeck.com/${match}\">https://speakerdeck.com/${match}</a>`\n    }\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\n\nconst highlightRegex = /^ *([\\w-]*)(.*)$/\n\nexport const highlightedCode: MarkdownIt.PluginSimple = (md: MarkdownIt) => {\n  md.core.ruler.push('highlighted-code', (state) => {\n    state.tokens.forEach((token) => {\n      if (token.type === 'fence') {\n        const highlightInfos = highlightRegex.exec(token.info)\n        if (!highlightInfos) {\n          return\n        }\n        if (highlightInfos[1]) {\n          token.attrJoin('data-highlight-language', highlightInfos[1])\n        }\n        if (highlightInfos[2]) {\n          token.attrJoin('data-extra', highlightInfos[2])\n        }\n      }\n    })\n    return true\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport Token from 'markdown-it/lib/token'\nimport { IconName } from '../../common/fork-awesome/types'\n\nexport const quoteExtra: (quoteLabel: string, icon: IconName) => MarkdownIt.PluginSimple =\n  (quoteLabel: string, icon: IconName) => (md) => {\n    md.inline.ruler.push(`extraQuote_${quoteLabel}`, (state) => {\n      const quoteExtraTagValues = parseQuoteExtraTag(state.src, state.pos, state.posMax)\n\n      if (!quoteExtraTagValues || quoteExtraTagValues.label !== quoteLabel) {\n        return false\n      }\n      state.pos = quoteExtraTagValues.valueEndIndex + 1\n\n      const tokens: Token[] = []\n      state.md.inline.parse(quoteExtraTagValues.value, state.md, state.env, tokens)\n\n      const token = state.push('quote-extra', '', 0)\n      token.attrSet('icon', icon)\n      token.children = tokens\n\n      return true\n    })\n\n    if (md.renderer.rules['quote-extra']) {\n      return\n    }\n\n    md.renderer.rules['quote-extra'] = (tokens, idx, options: MarkdownIt.Options, env: unknown) => {\n      const token = tokens[idx]\n      const innerTokens = token.children\n\n      if (!innerTokens) {\n        return ''\n      }\n\n      const innerHtml = md.renderer.renderInline(innerTokens, options, env)\n      return `<span class=\"quote-extra\"><i class=\"fa fa-${token.attrGet('icon') ?? ''} mx-1\"></i>${innerHtml}</span>`\n    }\n  }\n\nexport interface QuoteExtraTagValues {\n  labelStartIndex: number\n  labelEndIndex: number\n  valueStartIndex: number\n  valueEndIndex: number\n  label: string\n  value: string\n}\n\nexport const parseQuoteExtraTag = (line: string, start: number, maxPos: number): QuoteExtraTagValues | undefined => {\n  if (line[start] !== '[') {\n    return\n  }\n\n  const labelStartIndex = start + 1\n  const labelEndIndex = parseLabel(line, labelStartIndex, maxPos)\n  if (!labelEndIndex || labelStartIndex === labelEndIndex) {\n    return\n  }\n\n  const valueStartIndex = labelEndIndex + 1\n  const valueEndIndex = parseValue(line, valueStartIndex, maxPos)\n  if (!valueEndIndex || valueStartIndex === valueEndIndex) {\n    return\n  }\n\n  return {\n    labelStartIndex,\n    labelEndIndex,\n    valueStartIndex,\n    valueEndIndex,\n    label: line.substr(labelStartIndex, labelEndIndex - labelStartIndex),\n    value: line.substr(valueStartIndex, valueEndIndex - valueStartIndex)\n  }\n}\n\nconst parseValue = (line: string, start: number, maxPos: number): number | undefined => {\n  let level = 1\n  for (let pos = start; pos <= maxPos; pos += 1) {\n    const currentCharacter = line[pos]\n    if (currentCharacter === ']') {\n      level -= 1\n      if (level === 0) {\n        return pos\n      }\n    } else if (currentCharacter === '[') {\n      level += 1\n    }\n  }\n}\n\nconst parseLabel = (line: string, start: number, maxPos: number): number | undefined => {\n  for (let pos = start; pos <= maxPos; pos += 1) {\n    if (line[pos] === '=') {\n      return pos\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport { parseQuoteExtraTag } from './quote-extra'\n\nconst cssColorRegex =\n  /(#(?:[0-9a-f]{2}){2,4}|(?:#[0-9a-f]{3})|black|silver|gray|whitesmoke|maroon|red|purple|fuchsia|green|lime|olivedrab|yellow|navy|blue|teal|aquamarine|orange|aliceblue|antiquewhite|aqua|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|currentcolor|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|goldenrod|gold|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavenderblush|lavender|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olive|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|transparent|turquoise|violet|wheat|white|yellowgreen)/i\n\nexport const quoteExtraColor: MarkdownIt.PluginSimple = (md) => {\n  md.inline.ruler.push(`extraQuote_color`, (state) => {\n    const quoteExtraTagValues = parseQuoteExtraTag(state.src, state.pos, state.posMax)\n\n    if (!quoteExtraTagValues || quoteExtraTagValues.label !== 'color') {\n      return false\n    }\n    state.pos = quoteExtraTagValues.valueEndIndex + 1\n\n    if (!cssColorRegex.exec(quoteExtraTagValues.value)) {\n      return false\n    }\n\n    state.pos = quoteExtraTagValues.valueEndIndex + 1\n\n    const token = state.push('quote-extra-color', '', 0)\n    token.attrSet('color', quoteExtraTagValues.value)\n\n    return true\n  })\n\n  md.renderer.rules['quote-extra-color'] = (tokens, idx) => {\n    const token = tokens[idx]\n    const color = token.attrGet('color') ?? ''\n\n    return `<span class=\"quote-extra\" data-color='${color}' style='color: ${color}'><i class=\"fa fa-tag\"></i></span>`\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport { documentToc } from './document-toc'\n\nexport const documentTableOfContents = (onTocChange: (toc: TocAst) => void): MarkdownIt.PluginSimple => {\n  return (markdownIt) => documentToc(markdownIt, onTocChange)\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport toc, { TocAst } from 'markdown-it-toc-done-right'\nimport { tocSlugify } from '../../editor-page/table-of-contents/toc-slugify'\n\nexport type DocumentTocPluginOptions = (ast: TocAst) => void\n\nexport const documentToc: MarkdownIt.PluginWithOptions<DocumentTocPluginOptions> = (markdownIt, onToc) => {\n  if (!onToc) {\n    return\n  }\n  toc(markdownIt, {\n    placeholder: '(\\\\[TOC\\\\]|\\\\[toc\\\\])',\n    listType: 'ul',\n    level: [1, 2, 3],\n    callback: (code: string, ast: TocAst): void => {\n      onToc(ast)\n    },\n    slugify: tocSlugify\n  })\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it'\nimport abbreviation from 'markdown-it-abbr'\nimport definitionList from 'markdown-it-deflist'\nimport footnote from 'markdown-it-footnote'\nimport imsize from 'markdown-it-imsize'\nimport inserted from 'markdown-it-ins'\nimport marked from 'markdown-it-mark'\nimport subscript from 'markdown-it-sub'\nimport superscript from 'markdown-it-sup'\nimport { alertContainer } from '../markdown-it-plugins/alert-container'\nimport { linkifyExtra } from '../markdown-it-plugins/linkify-extra'\nimport { MarkdownItParserDebugger } from '../markdown-it-plugins/parser-debugger'\nimport { spoilerContainer } from '../markdown-it-plugins/spoiler-container'\nimport { tasksLists } from '../markdown-it-plugins/tasks-lists'\nimport { twitterEmojis } from '../markdown-it-plugins/twitter-emojis'\nimport { RawNoteFrontmatter } from '../../editor-page/note-frontmatter/note-frontmatter'\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport { LineMarkers, lineNumberMarker } from '../replace-components/linemarker/line-number-marker'\nimport { plantumlWithError } from '../markdown-it-plugins/plantuml'\nimport { headlineAnchors } from '../markdown-it-plugins/headline-anchors'\nimport { KatexReplacer } from '../replace-components/katex/katex-replacer'\nimport { YoutubeReplacer } from '../replace-components/youtube/youtube-replacer'\nimport { VimeoReplacer } from '../replace-components/vimeo/vimeo-replacer'\nimport { GistReplacer } from '../replace-components/gist/gist-replacer'\nimport { legacyPdfShortCode } from '../regex-plugins/replace-legacy-pdf-short-code'\nimport { legacySlideshareShortCode } from '../regex-plugins/replace-legacy-slideshare-short-code'\nimport { legacySpeakerdeckShortCode } from '../regex-plugins/replace-legacy-speakerdeck-short-code'\nimport { AsciinemaReplacer } from '../replace-components/asciinema/asciinema-replacer'\nimport { highlightedCode } from '../markdown-it-plugins/highlighted-code'\nimport { quoteExtraColor } from '../markdown-it-plugins/quote-extra-color'\nimport { quoteExtra } from '../markdown-it-plugins/quote-extra'\nimport { documentTableOfContents } from '../markdown-it-plugins/document-table-of-contents'\nimport { frontmatterExtract } from '../markdown-it-plugins/frontmatter'\n\nexport interface ConfiguratorDetails {\n  useFrontmatter: boolean\n  onParseError: (error: boolean) => void\n  onRawMetaChange: (rawMeta: RawNoteFrontmatter) => void\n  onToc: (toc: TocAst) => void\n  onLineMarkers?: (lineMarkers: LineMarkers[]) => void\n  useAlternativeBreaks?: boolean\n}\n\nexport class BasicMarkdownItConfigurator<T extends ConfiguratorDetails> {\n  protected readonly options: T\n  protected configurations: MarkdownIt.PluginSimple[] = []\n  protected postConfigurations: MarkdownIt.PluginSimple[] = []\n\n  constructor(options: T) {\n    this.options = options\n  }\n\n  public pushConfig(plugin: MarkdownIt.PluginSimple): this {\n    this.configurations.push(plugin)\n    return this\n  }\n\n  public buildConfiguredMarkdownIt(): MarkdownIt {\n    const markdownIt = new MarkdownIt('default', {\n      html: true,\n      breaks: this.options.useAlternativeBreaks ?? true,\n      langPrefix: '',\n      typographer: true\n    })\n    this.configure(markdownIt)\n    this.configurations.forEach((configuration) => markdownIt.use(configuration))\n    this.postConfigurations.forEach((postConfiguration) => markdownIt.use(postConfiguration))\n    return markdownIt\n  }\n\n  protected configure(markdownIt: MarkdownIt): void {\n    this.configurations.push(\n      plantumlWithError,\n      headlineAnchors,\n      KatexReplacer.markdownItPlugin,\n      YoutubeReplacer.markdownItPlugin,\n      VimeoReplacer.markdownItPlugin,\n      GistReplacer.markdownItPlugin,\n      legacyPdfShortCode,\n      legacySlideshareShortCode,\n      legacySpeakerdeckShortCode,\n      AsciinemaReplacer.markdownItPlugin,\n      highlightedCode,\n      quoteExtraColor,\n      quoteExtra('name', 'user'),\n      quoteExtra('time', 'clock-o'),\n      documentTableOfContents(this.options.onToc),\n      twitterEmojis,\n      abbreviation,\n      definitionList,\n      subscript,\n      superscript,\n      inserted,\n      marked,\n      footnote,\n      imsize,\n      tasksLists,\n      alertContainer,\n      spoilerContainer\n    )\n\n    if (this.options.useFrontmatter) {\n      this.configurations.push(\n        frontmatterExtract({\n          onParseError: this.options.onParseError,\n          onRawMetaChange: this.options.onRawMetaChange\n        })\n      )\n    }\n\n    if (this.options.onLineMarkers) {\n      this.configurations.push(lineNumberMarker(this.options.onLineMarkers))\n    }\n\n    this.postConfigurations.push(linkifyExtra, MarkdownItParserDebugger)\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport yaml from 'js-yaml'\nimport MarkdownIt from 'markdown-it'\nimport frontmatter from 'markdown-it-front-matter'\nimport { RawNoteFrontmatter } from '../../editor-page/note-frontmatter/note-frontmatter'\n\ninterface FrontmatterPluginOptions {\n  onParseError: (error: boolean) => void\n  onRawMetaChange: (rawMeta: RawNoteFrontmatter) => void\n}\n\nexport const frontmatterExtract: (options: FrontmatterPluginOptions) => MarkdownIt.PluginSimple =\n  (options) => (markdownIt) => {\n    frontmatter(markdownIt, (rawMeta: string) => {\n      try {\n        const meta: RawNoteFrontmatter = yaml.load(rawMeta) as RawNoteFrontmatter\n        options.onParseError(false)\n        options.onRawMetaChange(meta)\n      } catch (e) {\n        console.error(e)\n        options.onParseError(true)\n        options.onRawMetaChange({} as RawNoteFrontmatter)\n      }\n    })\n  }\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport MarkdownIt from 'markdown-it/lib'\nimport Token from 'markdown-it/lib/token'\n\nexport interface LineMarkers {\n  startLine: number\n  endLine: number\n}\n\nexport type LineNumberMarkerOptions = (lineMarkers: LineMarkers[]) => void\n\n/**\n * This plugin adds markers to the dom, that are used to map line numbers to dom elements.\n * It also provides a list of line numbers for the top level dom elements.\n */\nexport const lineNumberMarker: (options: LineNumberMarkerOptions) => MarkdownIt.PluginSimple =\n  (options) => (md: MarkdownIt) => {\n    // add app_linemarker token before each opening or self-closing level-0 tag\n    md.core.ruler.push('line_number_marker', (state) => {\n      const lineMarkers: LineMarkers[] = []\n      tagTokens(state.tokens, lineMarkers)\n      if (options) {\n        options(lineMarkers)\n      }\n      return true\n    })\n\n    md.renderer.rules.app_linemarker = (tokens: Token[], index: number): string => {\n      const startLineNumber = tokens[index].attrGet('data-start-line')\n      const endLineNumber = tokens[index].attrGet('data-end-line')\n\n      if (!startLineNumber || !endLineNumber) {\n        // don't render broken linemarkers without a linenumber\n        return ''\n      }\n      // noinspection CheckTagEmptyBody\n      return `<app-linemarker data-start-line='${startLineNumber}' data-end-line='${endLineNumber}'></app-linemarker>`\n    }\n\n    const insertNewLineMarker = (\n      startLineNumber: number,\n      endLineNumber: number,\n      tokenPosition: number,\n      level: number,\n      tokens: Token[]\n    ) => {\n      const startToken = new Token('app_linemarker', 'app-linemarker', 0)\n      startToken.level = level\n      startToken.attrPush(['data-start-line', `${startLineNumber}`])\n      startToken.attrPush(['data-end-line', `${endLineNumber}`])\n      tokens.splice(tokenPosition, 0, startToken)\n    }\n\n    const tagTokens = (tokens: Token[], lineMarkers: LineMarkers[]) => {\n      for (let tokenPosition = 0; tokenPosition < tokens.length; tokenPosition++) {\n        const token = tokens[tokenPosition]\n        if (token.hidden) {\n          continue\n        }\n\n        if (!token.map) {\n          continue\n        }\n\n        const startLineNumber = token.map[0] + 1\n        const endLineNumber = token.map[1] + 1\n\n        if (token.level === 0) {\n          lineMarkers.push({ startLine: startLineNumber, endLine: endLineNumber })\n        }\n\n        insertNewLineMarker(startLineNumber, endLineNumber, tokenPosition, token.level, tokens)\n        tokenPosition += 1\n\n        if (token.children) {\n          tagTokens(token.children, lineMarkers)\n        }\n      }\n    }\n  }\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { InternalLink } from '../common/links/internal-link'\nimport { ShowIf } from '../common/show-if/show-if'\nimport { SimpleAlertProps } from '../common/simple-alert/simple-alert-props'\n\nexport const InvalidYamlAlert: React.FC<SimpleAlertProps> = ({ show }) => {\n  useTranslation()\n\n  return (\n    <ShowIf condition={show}>\n      <Alert variant='warning' dir='auto'>\n        <Trans i18nKey='editor.invalidYaml'>\n          <InternalLink text='yaml-metadata' href='/n/yaml-metadata' className='text-primary' />\n        </Trans>\n      </Alert>\n    </ShowIf>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Ref, useCallback, useMemo, useRef, useState } from 'react'\nimport { DocumentLengthLimitReachedAlert } from './document-length-limit-reached-alert'\nimport { useConvertMarkdownToReactDom } from './hooks/use-convert-markdown-to-react-dom'\nimport './markdown-renderer.scss'\nimport { ComponentReplacer } from './replace-components/ComponentReplacer'\nimport { AdditionalMarkdownRendererProps, LineMarkerPosition } from './types'\nimport { useComponentReplacers } from './hooks/use-component-replacers'\nimport { useTranslation } from 'react-i18next'\nimport { NoteFrontmatter, RawNoteFrontmatter } from '../editor-page/note-frontmatter/note-frontmatter'\nimport { LineMarkers } from './replace-components/linemarker/line-number-marker'\nimport { useCalculateLineMarkerPosition } from './utils/calculate-line-marker-positions'\nimport { useExtractFirstHeadline } from './hooks/use-extract-first-headline'\nimport { TocAst } from 'markdown-it-toc-done-right'\nimport { useOnRefChange } from './hooks/use-on-ref-change'\nimport { BasicMarkdownItConfigurator } from './markdown-it-configurator/BasicMarkdownItConfigurator'\nimport { ImageClickHandler } from './replace-components/image/image-replacer'\nimport { InvalidYamlAlert } from './invalid-yaml-alert'\nimport { useTrimmedContent } from './hooks/use-trimmed-content'\n\nexport interface BasicMarkdownRendererProps {\n  additionalReplacers?: () => ComponentReplacer[]\n  onBeforeRendering?: () => void\n  onAfterRendering?: () => void\n  onFirstHeadingChange?: (firstHeading: string | undefined) => void\n  onLineMarkerPositionChanged?: (lineMarkerPosition: LineMarkerPosition[]) => void\n  onFrontmatterChange?: (frontmatter: NoteFrontmatter | undefined) => void\n  onTaskCheckedChange?: (lineInMarkdown: number, checked: boolean) => void\n  onTocChange?: (ast?: TocAst) => void\n  baseUrl?: string\n  onImageClick?: ImageClickHandler\n  outerContainerRef?: Ref<HTMLDivElement>\n  useAlternativeBreaks?: boolean\n}\n\nexport const BasicMarkdownRenderer: React.FC<BasicMarkdownRendererProps & AdditionalMarkdownRendererProps> = ({\n  className,\n  content,\n  additionalReplacers,\n  onBeforeRendering,\n  onAfterRendering,\n  onFirstHeadingChange,\n  onLineMarkerPositionChanged,\n  onFrontmatterChange,\n  onTaskCheckedChange,\n  onTocChange,\n  baseUrl,\n  onImageClick,\n  outerContainerRef,\n  useAlternativeBreaks\n}) => {\n  const rawMetaRef = useRef<RawNoteFrontmatter>()\n  const markdownBodyRef = useRef<HTMLDivElement>(null)\n  const currentLineMarkers = useRef<LineMarkers[]>()\n  const hasNewYamlError = useRef(false)\n  const tocAst = useRef<TocAst>()\n  const [showYamlError, setShowYamlError] = useState(false)\n  const [trimmedContent, contentExceedsLimit] = useTrimmedContent(content)\n\n  const markdownIt = useMemo(\n    () =>\n      new BasicMarkdownItConfigurator({\n        useFrontmatter: !!onFrontmatterChange,\n        onParseError: (errorState) => (hasNewYamlError.current = errorState),\n        onRawMetaChange: (rawMeta) => (rawMetaRef.current = rawMeta),\n        onToc: (toc) => (tocAst.current = toc),\n        onLineMarkers:\n          onLineMarkerPositionChanged === undefined\n            ? undefined\n            : (lineMarkers) => (currentLineMarkers.current = lineMarkers),\n        useAlternativeBreaks\n      }).buildConfiguredMarkdownIt(),\n    [onFrontmatterChange, onLineMarkerPositionChanged, useAlternativeBreaks]\n  )\n\n  const clearFrontmatter = useCallback(() => {\n    hasNewYamlError.current = false\n    rawMetaRef.current = undefined\n    onBeforeRendering?.()\n  }, [onBeforeRendering])\n\n  const checkYamlErrorState = useCallback(() => {\n    setShowYamlError(hasNewYamlError.current)\n    onAfterRendering?.()\n  }, [onAfterRendering])\n\n  const baseReplacers = useComponentReplacers(onTaskCheckedChange, onImageClick, baseUrl)\n  const markdownReactDom = useConvertMarkdownToReactDom(\n    trimmedContent,\n    markdownIt,\n    baseReplacers,\n    additionalReplacers,\n    clearFrontmatter,\n    checkYamlErrorState\n  )\n\n  useTranslation()\n  useCalculateLineMarkerPosition(\n    markdownBodyRef,\n    currentLineMarkers.current,\n    onLineMarkerPositionChanged,\n    markdownBodyRef.current?.offsetTop ?? 0\n  )\n  useExtractFirstHeadline(markdownBodyRef, content, onFirstHeadingChange)\n  useOnRefChange(tocAst, onTocChange)\n  useOnRefChange(rawMetaRef, (newValue) => {\n    if (!newValue) {\n      onFrontmatterChange?.(undefined)\n    } else {\n      onFrontmatterChange?.(new NoteFrontmatter(newValue))\n    }\n  })\n\n  return (\n    <div ref={outerContainerRef} className={'position-relative'}>\n      <InvalidYamlAlert show={showYamlError} />\n      <DocumentLengthLimitReachedAlert show={contentExceedsLimit} />\n      <div\n        ref={markdownBodyRef}\n        className={`${className ?? ''} markdown-body w-100 d-flex flex-column align-items-center`}>\n        {markdownReactDom}\n      </div>\n    </div>\n  )\n}\n\nexport default BasicMarkdownRenderer\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { useSelector } from 'react-redux'\nimport { ApplicationState } from '../../../redux'\nimport { useMemo } from 'react'\n\nexport const useTrimmedContent = (content: string): [trimmedContent: string, contentExceedsLimit: boolean] => {\n  const maxLength = useSelector((state: ApplicationState) => state.config.maxDocumentLength)\n  const contentExceedsLimit = content.length > maxLength\n\n  const trimmedContent = useMemo(\n    () => (contentExceedsLimit ? content.substr(0, maxLength) : content),\n    [content, contentExceedsLimit, maxLength]\n  )\n  return [trimmedContent, contentExceedsLimit]\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { useCallback, useEffect, useRef } from 'react'\n\nexport const useExtractFirstHeadline = (\n  documentElement: React.RefObject<HTMLDivElement>,\n  content: string,\n  onFirstHeadingChange?: (firstHeading: string | undefined) => void\n): void => {\n  const extractInnerText = useCallback((node: ChildNode | null): string => {\n    if (!node) {\n      return ''\n    }\n\n    if ((node as HTMLElement).classList?.contains('katex-mathml')) {\n      return ''\n    }\n\n    let innerText = ''\n\n    if (node.childNodes && node.childNodes.length > 0) {\n      node.childNodes.forEach((child) => {\n        innerText += extractInnerText(child)\n      })\n    } else if (node.nodeName === 'IMG') {\n      innerText += (node as HTMLImageElement).getAttribute('alt')\n    } else {\n      innerText += node.textContent\n    }\n    return innerText\n  }, [])\n\n  const lastFirstHeading = useRef<string | undefined>()\n\n  useEffect(() => {\n    if (onFirstHeadingChange && documentElement.current) {\n      const firstHeading = documentElement.current.getElementsByTagName('h1').item(0)\n      const headingText = extractInnerText(firstHeading).trim()\n      if (headingText !== lastFirstHeading.current) {\n        lastFirstHeading.current = headingText\n        onFirstHeadingChange(headingText)\n      }\n    }\n  }, [documentElement, extractInnerText, onFirstHeadingChange, content])\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport { DomElement } from 'domhandler'\nimport MarkdownIt from 'markdown-it'\nimport { ReactElement } from 'react'\n\nexport type SubNodeTransform = (node: DomElement, subIndex: number) => ReactElement | void | null\n\nexport type NativeRenderer = () => ReactElement\n\nexport type MarkdownItPlugin = MarkdownIt.PluginSimple | MarkdownIt.PluginWithOptions | MarkdownIt.PluginWithParams\n\nexport abstract class ComponentReplacer {\n  public abstract getReplacement(\n    node: DomElement,\n    subNodeTransform: SubNodeTransform,\n    nativeRenderer: NativeRenderer\n  ): ReactElement | null | undefined\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\nimport { DomElement } from 'domhandler'\nimport React, { ReactElement } from 'react'\nimport { ComponentReplacer, NativeRenderer, SubNodeTransform } from '../ComponentReplacer'\n\nexport const createJumpToMarkClickEventHandler = (id: string) => {\n  return (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    document.getElementById(id)?.scrollIntoView()\n    event.preventDefault()\n  }\n}\n\nexport class LinkReplacer extends ComponentReplacer {\n  constructor(private baseUrl?: string) {\n    super()\n  }\n\n  public getReplacement(\n    node: DomElement,\n    subNodeTransform: SubNodeTransform,\n    nativeRenderer: NativeRenderer\n  ): ReactElement | null | undefined {\n    if (node.name !== 'a' || !node.attribs || !node.attribs.href) {\n      return undefined\n    }\n\n    const url = node.attribs.href.trim()\n\n    // eslint-disable-next-line no-script-url\n    if (url.startsWith('data:') || url.startsWith('javascript:')) {\n      return <span>{node.attribs.href}</span>\n    }\n\n    const isJumpMark = url.substr(0, 1) === '#'\n\n    const id = url.substr(1)\n\n    try {\n      node.attribs.href = new URL(url, this.baseUrl).toString()\n    } catch (e) {\n      node.attribs.href = url\n    }\n\n    if (isJumpMark) {\n      return <span onClick={createJumpToMarkClickEventHandler(id)}>{nativeRenderer()}</span>\n    } else {\n      node.attribs.rel = 'noreferer noopener'\n      node.attribs.target = '_blank'\n      return nativeRenderer()\n    }\n  }\n}\n","var map = {\n\t\"./bmp\": 628,\n\t\"./bmp.js\": 628,\n\t\"./gif\": 629,\n\t\"./gif.js\": 629,\n\t\"./jpg\": 630,\n\t\"./jpg.js\": 630,\n\t\"./png\": 631,\n\t\"./png.js\": 631,\n\t\"./psd\": 632,\n\t\"./psd.js\": 632,\n\t\"./svg\": 633,\n\t\"./svg.js\": 633,\n\t\"./tiff\": 634,\n\t\"./tiff.js\": 634,\n\t\"./webp\": 635,\n\t\"./webp.js\": 635\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 627;","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nexport const tocSlugify = (content: string): string => {\n  return encodeURIComponent(content.trim().toLowerCase().replace(/\\s+/g, '-'))\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, useRef } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Variant } from 'react-bootstrap/types'\nimport { useTranslation } from 'react-i18next'\nimport { ForkAwesomeIcon } from '../../fork-awesome/fork-awesome-icon'\nimport { CopyOverlay } from '../copy-overlay'\n\nexport interface CopyToClipboardButtonProps {\n  content: string\n  size?: 'sm' | 'lg'\n  variant?: Variant\n  'data-cy'?: string\n}\n\nexport const CopyToClipboardButton: React.FC<CopyToClipboardButtonProps> = ({\n  content,\n  size = 'sm',\n  variant = 'dark',\n  ...props\n}) => {\n  const { t } = useTranslation()\n  const button = useRef<HTMLButtonElement>(null)\n\n  return (\n    <Fragment>\n      <Button\n        ref={button}\n        size={size}\n        variant={variant}\n        title={t('renderer.highlightCode.copyCode')}\n        data-cy={props['data-cy']}>\n        <ForkAwesomeIcon icon='files-o' />\n      </Button>\n      <CopyOverlay content={content} clickComponent={button} />\n    </Fragment>\n  )\n}\n","/*\n * SPDX-FileCopyrightText: 2021 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: AGPL-3.0-only\n */\n\nimport React, { Fragment, ReactElement, useEffect, useState } from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { CopyToClipboardButton } from '../../../../common/copyable/copy-to-clipboard-button/copy-to-clipboard-button'\nimport '../../../utils/button-inside.scss'\nimport './highlighted-code.scss'\n\nexport interface HighlightedCodeProps {\n  code: string\n  language?: string\n  startLineNumber?: number\n  wrapLines: boolean\n}\n\n/*\n TODO: Test method or rewrite code so this is not necessary anymore\n */\nconst escapeHtml = (unsafe: string): string => {\n  return unsafe\n    .replaceAll(/&/g, '&amp;')\n    .replaceAll(/</g, '&lt;')\n    .replaceAll(/>/g, '&gt;')\n    .replaceAll(/\"/g, '&quot;')\n    .replaceAll(/'/g, '&#039;')\n}\n\nconst replaceCode = (code: string): ReactElement[][] => {\n  return code\n    .split('\\n')\n    .filter((line) => !!line)\n    .map((line) => ReactHtmlParser(line))\n}\n\nexport const HighlightedCode: React.FC<HighlightedCodeProps> = ({ code, language, startLineNumber, wrapLines }) => {\n  const [dom, setDom] = useState<ReactElement[]>()\n\n  useEffect(() => {\n    import(/* webpackChunkName: \"highlight.js\" */ '../../../../common/hljs/hljs')\n      .then((hljs) => {\n        const languageSupported = (lang: string) => hljs.default.listLanguages().includes(lang)\n        const unreplacedCode =\n          !!language && languageSupported(language)\n            ? hljs.default.highlight(code, { language }).value\n            : escapeHtml(code)\n        const replacedDom = replaceCode(unreplacedCode).map((line, index) => (\n          <Fragment key={index}>\n            <span className={'linenumber'}>{(startLineNumber || 1) + index}</span>\n            <div className={'codeline'}>{line}</div>\n          </Fragment>\n        ))\n        setDom(replacedDom)\n      })\n      .catch(() => {\n        console.error('error while loading highlight.js')\n      })\n  }, [code, language, startLineNumber])\n\n  return (\n    <Fragment>\n      <code className={`hljs ${startLineNumber !== undefined ? 'showGutter' : ''} ${wrapLines ? 'wrapLines' : ''}`}>\n        {dom}\n      </code>\n      <div className={'text-right button-inside'}>\n        <CopyToClipboardButton content={code} data-cy='copy-code-button' />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default HighlightedCode\n"],"sourceRoot":""}