{"version":3,"sources":["../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it-abbr/index.js","../node_modules/markdown-it-deflist/index.js","../node_modules/markdown-it-footnote/index.js","../node_modules/markdown-it-imsize/lib/index.js","../node_modules/markdown-it-imsize/lib/imsize/index.js","../node_modules/path-browserify/index.js","../node_modules/markdown-it-imsize/lib/imsize/detector.js","../node_modules/markdown-it-imsize/lib/imsize/readUInt.js","../node_modules/markdown-it-imsize/lib/helpers/parse_image_size.js","../node_modules/markdown-it-ins/index.js","../node_modules/markdown-it-mark/index.js","../node_modules/markdown-it-sub/index.js","../node_modules/markdown-it-sup/index.js","../node_modules/@hedgedoc/markdown-it-task-lists/dist/index.js","../node_modules/markdown-it-emoji/bare.js","../node_modules/markdown-it-emoji/lib/render.js","../node_modules/markdown-it-emoji/lib/replace.js","../node_modules/markdown-it-emoji/lib/normalize_opts.js","../node_modules/markdown-it-plantuml/index.js","../node_modules/markdown-it-plantuml/lib/deflate.js","../../index.js","../node_modules/js-yaml/dist/js-yaml.mjs","../node_modules/markdown-it-front-matter/index.js","../node_modules/markdown-it/lib/common/utils.js","../../../../../../index.js","../webpack:/webpack/bootstrap 0d1a0c903c89c60b9ef4","../../../../../../src/index.js","../node_modules/markdown-it/lib/token.js","../node_modules/webpack/buildin/module.js","../node_modules/markdown-it-container/index.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/use-resize-observer/dist/bundle.esm.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/process/browser.js","../node_modules/markdown-it-imsize/lib/imsize/types.js","../node_modules/markdown-it-imsize/lib/imsize/types/bmp.js","../node_modules/markdown-it-imsize/lib/imsize/types/gif.js","../node_modules/markdown-it-imsize/lib/imsize/types/jpg.js","../node_modules/markdown-it-imsize/lib/imsize/types/png.js","../node_modules/markdown-it-imsize/lib/imsize/types/psd.js","../node_modules/markdown-it-imsize/lib/imsize/types/svg.js","../node_modules/markdown-it-imsize/lib/imsize/types/tiff.js","../node_modules/markdown-it-imsize/lib/imsize/types/webp.js","../node_modules/diff/dist/diff.js","../node_modules/markdown-it-mathjax/markdown-it-mathjax.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js"],"names":["EMAIL_RE","AUTOLINK_RE","module","exports","state","silent","url","fullUrl","token","ch","start","max","pos","src","charCodeAt","posMax","slice","test","md","normalizeLink","validateLink","push","attrs","markup","info","content","normalizeLinkText","length","HTML_TAG_RE","require","match","options","html","lc","isLetter","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","code","toLowerCase","parseInt","pending","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","hasOwnProperty","marker","jump","open","end","curr","tokens_meta","last","level","tokens","nesting","type","Token","isWhiteSpace","isPunctChar","isMdAsciiPunct","StateInline","env","outTokens","this","Array","pendingLevel","cache","_prev_delimiters","backticks","backticksScanned","prototype","pushPending","tag","token_meta","pop","scanDelims","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","String","fromCharCode","assign","obj","sources","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","schema","__schema__","index","lastIndex","raw","createMatch","LinkifyIt","schemas","reduce","acc","k","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","root","nodeType","freeGlobal","global","window","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","fn","mapDomain","string","parts","ucs2decode","value","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","input","out","basic","j","oldi","w","t","baseMinusT","codePoint","inputLength","i","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","define","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","components","core","block","inline","rules","rules2","utils","arrayReplaceAt","OTHER_CHARS","UNICODE_PUNCT_RE","lib","ucmicro","P","UNICODE_SPACE_RE","Z","ruler","before","startLine","endLine","label","title","labelStart","labelEnd","bMarks","tShift","eMarks","trim","abbreviations","line","alt","after","l","nodes","reg","regText","regSimple","currentToken","blockTokens","x","substr","a","b","children","isSpace","skipMarker","skipSpaces","contentStart","ddLine","dtLine","itemLines","listLines","listTokIdx","nextLine","offset","oldDDIndent","oldIndent","oldParentType","oldSCount","oldTShift","oldTight","prevEmptyEnd","tight","ddIndent","isEmpty","sCount","blkIndent","OUTER","getLines","parentType","tokenize","hidden","markTightParagraphs","render_footnote_anchor_name","Number","meta","id","prefix","docId","render_footnote_caption","subId","render_footnote_ref","slf","footnote_anchor_name","caption","footnote_caption","refid","render_footnote_block_open","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","parseLinkLabel","helpers","renderer","footnote_ref","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","oldBMark","initial","posAfterColon","footnotes","refs","footnoteId","parse","footnoteSubId","lastParagraph","current","currentLabel","insideRef","refTokens","tok","sizeOf","parseImageSize","ref","res","width","height","href","oldPos","parseLinkDestination","ok","parseLinkTitle","references","normalizeReference","newState","State","autofill","dimensions","e","image_with_size","fs","path","detector","handlers","MaxBufferSize","lookup","buffer","filepath","size","calculate","TypeError","callback","resolve","descriptor","openSync","fstatSync","bufferSize","min","Buffer","readSync","closeSync","syncFileToBuffer","err0","read","err1","err2","asyncFileToBuffer","err","normalizeArray","allowAboveRoot","up","unshift","xs","f","resolvedPath","resolvedAbsolute","process","cwd","charAt","p","isAbsolute","trailingSlash","paths","relative","from","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","typeMap","detect","bits","isBigEndian","parseNextNumber","resultW","resultH","postProcess","startDelim","endDelim","loneMarkers","scanned","ruler2","UNESCAPE_RE","subscript","found","skipToken","superscript","checkboxRegex","markdownItTaskLists","enabled","lineNumber","allTokens","isTodoItem","todoify","attrJoin","parentToken","findParentToken","processToken","taskListItemCheckbox","checkedAttribute","attrGet","disabledAttribute","idAttribute","taskListItemLabel_close","taskListItemLabel_open","targetLevel","currentTokenIndex","isParagraph","isListItem","startsWithTodoMarkdown","ceil","random","generateIdForToken","checkbox","attrSet","checkboxRegexResult","createCheckboxToken","labelBeginToken","createLabelBeginToken","emoji_html","emoji_replace","normalize_opts","defs","shortcuts","emoji","scanRE","replaceRE","emojies","ucm","ZPCc","Cc","splitTextToken","last_pos","emoji_name","autolinkLevel","names","openMarker","openChar","closeMarker","closeChar","render","image","generateSource","umlCode","pluginOptions","imageFormat","diagramName","server","deflate","encode64","zip_deflate","unescape","encodeURIComponent","params","autoClosed","closeMarkerMatched","contents","altToken","uml_diagram","buff","zip_deflate_data","zip_deflate_pos","zip_compr_level","zip_initflag","zip_eofile","zip_outbuf","zip_free_queue","zip_qhead","zip_qtail","zip_OUTBUFSIZ","zip_window","zip_window_size","zip_d_buf","zip_DIST_BUFSIZE","zip_l_buf","zip_INBUFSIZ","zip_prev","zip_dyn_ltree","zip_HEAP_SIZE","zip_DeflateCT","zip_dyn_dtree","zip_static_ltree","zip_L_CODES","zip_static_dtree","zip_D_CODES","zip_bl_tree","zip_l_desc","zip_DeflateTreeDesc","zip_d_desc","zip_bl_desc","zip_bl_count","zip_MAX_BITS","zip_heap","zip_depth","zip_length_code","zip_MAX_MATCH","zip_dist_code","zip_base_length","zip_base_dist","zip_flag_buf","zip_LIT_BUFSIZE","zip_deflate_start","zip_deflate_internal","data","r","append3bytes","zip_outcnt","zip_outoff","zip_complete","zip_bi_buf","zip_bi_valid","zip_block_start","zip_ins_h","zip_hash_head","zip_prev_match","zip_match_available","zip_match_length","zip_prev_length","zip_strstart","zip_match_start","zip_lookahead","zip_max_chain_length","zip_max_lazy_match","zip_good_match","zip_heap_len","zip_heap_max","zip_last_lit","zip_last_dist","zip_last_flags","zip_flags","zip_flag_bit","zip_opt_len","zip_static_len","zip_WSIZE","zip_HASH_SIZE","zip_HASH_MASK","zip_MIN_LOOKAHEAD","zip_MAX_DIST","zip_LITERALS","zip_BL_CODES","zip_H_SHIFT","zip_extra_lbits","zip_extra_dbits","zip_extra_blbits","zip_bl_order","zip_configuration_table","zip_DeflateConfiguration","fc","dl","dyn_tree","static_tree","extra_bits","extra_base","elems","max_length","max_code","c","d","good_length","max_lazy","nice_length","max_chain","zip_DeflateBuffer","ptr","off","zip_reuse_queue","zip_head1","zip_head2","zip_put_byte","zip_new_queue","zip_qoutbuf","zip_put_short","zip_INSERT_STRING","zip_SEND_CODE","tree","zip_send_bits","zip_D_CODE","dist","zip_SMALLER","zip_read_buff","zip_longest_match","cur_match","matchp","chain_length","scanp","best_len","limit","strendp","scan_end1","scan_end","zip_fill_window","more","zip_init_deflate","zip_LENGTH_CODES","zip_gen_codes","zip_bi_reverse","zip_init_block","zip_ct_init","zip_MIN_MATCH","zip_lm_init","buff_size","zip_qcopy","flush","zip_ct_tally","zip_flush_block","zip_deflate_fast","zip_deflate_better","zip_pqdownheap","v","next_code","zip_build_tree","desc","stree","node","xnew","h","xbits","overflow","zip_gen_bitlen","zip_scan_tree","curlen","prevlen","nextlen","max_count","min_count","zip_send_tree","eof","opt_lenb","static_lenb","max_blindex","stored_len","zip_build_bl_tree","zip_bi_windup","zip_compress_block","lcodes","dcodes","blcodes","rank","zip_send_all_trees","dcode","out_length","in_length","ltree","dtree","lx","dx","fx","b1","b2","b3","c2","c3","c4","encode6bit","position","false","true","hasProp","uniqueSlug","slug","slugs","failOnNonUnique","startIndex","uniq","anchor","defaults","selection","isLevelSelected","includes","slugify","uniqueSlugStartIndex","permalink","renderPermalink","s","linkTokens","permalinkClass","permalinkHref","entries","permalinkAttrs","permalinkSymbol","permalinkSpace","permalinkBefore","htmlencode","ast","placeholder","containerClass","containerId","listClass","itemClass","linkClass","listType","format","pattern","tocOpen","_options","inlineOptions","tocClose","tocBody","uniques","ast2html","u","stack","iK","lineFirstToken","matches","JSON","ex","isNothing","subject","common","isObject","toArray","sequence","repeat","cycle","isNegativeZero","number","NEGATIVE_INFINITY","extend","target","sourceKeys","formatError","exception","compact","where","message","reason","mark","column","snippet","YAMLException$1","captureStackTrace","constructor","create","getLine","lineStart","lineEnd","maxLineLength","head","maxHalfLength","padStart","maxLength","indent","linesBefore","linesAfter","lineStarts","lineEnds","foundLineNo","lineNoLength","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","kind","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","style","compileStyleAliases","compileList","currentType","newIndex","previousType","previousIndex","Schema$1","implicit","explicit","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","compileMap","seq","failsafe","_null","object","canonical","lowercase","uppercase","camelcase","empty","bool","isOctCode","isDecCode","int","hasDigits","sign","binary","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","float","POSITIVE_INFINITY","NaN","parseFloat","isNaN","json","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","timestamp","year","month","day","hour","minute","second","date","fraction","Date","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","bitlen","tailbits","Uint8Array","_hasOwnProperty$3","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","_default","_hasOwnProperty$1","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","handle","tagMap","decodeURIComponent","captureSegment","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loader","loadAll","iterator","load","_toString","_hasOwnProperty","CHAR_BOM","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","generateNextLine","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","moreIndented","lineRe","nextLF","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","writeBlockSequence","writeNode","detectType","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","renamed","jsYaml","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","cb","marker_str","marker_char","marker_len","marker_count","old_parent","old_line_max","start_content","auto_closed","lineMax","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","mdurl","unescapeMd","unescapeAll","escaped","entity","replaceEntityPattern","escapeHtml","newElements","modules","__webpack_require__","get","_toConsumableArray","arr2","rendererRule","coreRuler","regex","newTokens","item","newToken","default","attrIndex","attrPush","attrData","webpackPolyfill","deprecate","renderToken","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","altName","chain","at","opt","beforeName","ruleName","afterName","enable","ignoreInvalid","enableOnly","disable","getRules","chainName","useResizeObserver","onResize","onResizeRef","useRef","undefined","resizeObserverRef","_useState","useState","setSize","didUnmount","useEffect","previous","refCallback","subscriber","refOrElement","_ref","refElement","callbackRefElement","useCallback","element","callSubscriber","lastReportedElementRef","cleanupRef","HTMLElement","useResolvedElement","ResizeObserver","entry","newWidth","round","contentRect","newHeight","newSize","observe","unobserve","useMemo","isLinkClose","ln","lastPos","htmlLinkLevel","urlText","links","open_tag","close_tag","HTML_OPEN_CLOSE_TAG_RE","isStrong","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","noop","nextTick","apply","browser","argv","versions","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","readUInt32LE","gifRegexp","signature","readUInt16LE","validJFIFMarkers","red","extractSize","readUInt16BE","validateBuffer","SOIMarker","JFIFMarker","got","expected","console","warn","readUInt32BE","svgReg","extractorRegExps","section","ratio","viewbox","dim","getRatio","parsed","readUInt","readValue","low","nextTag","hex4","determineEndianness","tags","extractTags","ifdOffset","fileSize","statSync","endBuffer","readIFD","riffHeader","webpHeader","vp8Header","chunkHeader","readInt16LE","calculateLossy","calculateLossless","Diff","buildValues","diff","newString","oldString","useLongestToken","componentPos","componentLen","newPos","component","removed","added","oldValue","lastComponent","equals","clonePath","done","castInput","removeEmpty","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","pushComponent","ret","commonCount","left","right","comparator","ignoreCase","chars","characterDiff","diffChars","oldStr","newStr","generateOptions","extendedWordChars","reWhitespace","wordDiff","diffWords","ignoreWhitespace","diffWordsWithSpace","lineDiff","diffLines","diffTrimmedLines","retLines","linesAndNewlines","newlineIsToken","sentenceDiff","diffSentences","cssDiff","diffCss","_typeof","Symbol","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","o","minLen","objectPrototypeToString","jsonDiff","diffJson","oldObj","newObj","canonicalize","replacementStack","canonicalizedObj","toJSON","_key","sortedKeys","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","stringify","arrayDiff","diffArrays","oldArr","newArr","parsePatch","uniDiff","diffstr","parseIndex","header","parseFileHeader","hunks","parseHunk","strict","fileHeader","keyPrefix","fileName","chunkHeaderIndex","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","operation","distanceIterator","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","removeEOFNL","addEOFNL","compareLine","patchContent","errorCount","fuzzFactor","hunkFits","toPos","diffOffset","_i","_hunk","_toPos","previousOperation","_k","applyPatches","currentIndex","processIndex","complete","loadFile","updatedContent","patched","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","context","contextLines","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","_curRange","_curRange2","_curRange3","contextSize","oldEOFNewline","newEOFNewline","noNlBeforeAdds","formatPatch","createTwoFilesPatch","createPatch","arrayEqual","arrayStartsWith","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","mine","theirs","loadPatch","fileNameChanged","selectField","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","Infinity","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","_hunk$lines","collectChange","_hunk$lines2","removal","mutualChange","insertTrailing","myChanges","theirChanges","allRemoves","_hunk$lines3","_hunk$lines4","skipRemoveSuperset","_hunk$lines5","swap","_hunk$lines6","collectContext","merged","insert","matchChanges","changes","matchIndex","contextChanges","conflicted","change","removeChanges","changeContent","myCount","theirCount","convertChangesToDMP","convertChangesToXML","escapeHTML","factory","math","startMathPos","endMarker","includeMarkers","endMarkerPos","nextPos","texMath","afterStartMarker","beforeEndMarker","suffix","beforeMath","afterMath","beforeInlineMath","afterInlineMath","beforeDisplayMath","afterDisplayMath","Renderer","ParserCore","ParserBlock","ParserInline","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","hostname","protocol","toASCII","er","toUnicode","defaultChars","MarkdownIt","presetName","configure","presets","missed","use","plugin","parseInline","inlineMode","renderInline","encodeCache","exclude","keepEscaped","nextCode","getEncodeCache","componentChars","decodeCache","getDecodeCache","b4","chr","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","qm","Any","Cf","disableNested","prevPos","default_rules","code_inline","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","renderInlineAsText","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","canOpen","canClose","isSingle","openQuote","closeQuote","single","StateCore","hasEmptyLines","skipEmptyLines","escapedSplit","isEscaped","substring","lineText","columns","columnCount","aligns","tableLines","tbodyLines","terminate","terminatorRules","firstCh","secondCh","mem","haveEndMarker","skipChars","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","indentAfterMarker","isOrdered","markerCharCode","markerValue","oldListIndent","posAfterMarker","isTerminatingParagraph","listIndent","_endLine","destEndPos","destEndLineNo","block_names","HTML_SEQUENCES","skipSpacesBack","skipCharsBack","StateBlock","indent_found","begin","keepLastLF","_rules2","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","openerLength","closerLength","parseReference"],"mappings":"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","file":"static/js/4.7d72fa62.chunk.js","sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference', 'blockquote' ] });\n};\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// Process ![test]( x =100x200)\n//                    ^^^^^^^^ this size specification\n\n'use strict';\n\nvar sizeOf = require('./imsize');\n\nvar parseImageSize = require('./helpers/parse_image_size');\n\nfunction image_with_size(md, options) {\n  return function(state, silent) {\n    var attrs,\n        code,\n        label,\n        labelEnd,\n        labelStart,\n        pos,\n        ref,\n        res,\n        title,\n        width = '',\n        height = '',\n        token,\n        tokens,\n        start,\n        href = '',\n        oldPos = state.pos,\n        max = state.posMax;\n\n    if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n    if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = state.pos + 2;\n    labelEnd = md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n    // parser failed to find ']', so it's not a valid link\n    if (labelEnd < 0) { return false; }\n\n    pos = labelEnd + 1;\n    if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n\n      //\n      // Inline link\n      //\n\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n      if (pos >= max) { return false; }\n\n      // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n      start = pos;\n      res = md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (code !== 0x20 && code !== 0x0A) { break; }\n        }\n      } else {\n        title = '';\n      }\n\n      // [link](  <href>  \"title\" =WxH  )\n      //                          ^^^^ parsing image size\n      if (pos - 1 >= 0) {\n        code = state.src.charCodeAt(pos - 1);\n\n        // there must be at least one white spaces\n        // between previous field and the size\n        if (code === 0x20) {\n          res = parseImageSize(state.src, pos, state.posMax);\n          if (res.ok) {\n            width = res.width;\n            height = res.height;\n            pos = res.pos;\n\n            // [link](  <href>  \"title\" =WxH  )\n            //                              ^^ skipping these spaces\n            for (; pos < max; pos++) {\n              code = state.src.charCodeAt(pos);\n              if (code !== 0x20 && code !== 0x0A) { break; }\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n        state.pos = oldPos;\n        return false;\n      }\n      pos++;\n\n    } else {\n      //\n      // Link reference\n      //\n      if (typeof state.env.references === 'undefined') { return false; }\n\n      // [foo]  [bar]\n      //      ^^ optional whitespace (can include newlines)\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n        start = pos + 1;\n        pos = md.helpers.parseLinkLabel(state, pos);\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n        pos = labelEnd + 1;\n      }\n\n      // covers label === '' and label === undefined\n      // (collapsed reference link and shortcut reference link respectively)\n      if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n      ref = state.env.references[md.utils.normalizeReference(label)];\n      if (!ref) {\n        state.pos = oldPos;\n        return false;\n      }\n      href = ref.href;\n      title = ref.title;\n    }\n\n    //\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      state.pos = labelStart;\n      state.posMax = labelEnd;\n\n      var newState = new state.md.inline.State(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n      newState.md.inline.tokenize(newState);\n\n      // if 'autofill' option is specified\n      // and width/height are both blank,\n      // they are filled automatically\n      if (options) {\n        if (options.autofill && width === '' && height === '') {\n          try {\n            var dimensions = sizeOf(href);\n            width = dimensions.width;\n            height = dimensions.height;\n          } catch (e) { }\n        }\n      }\n\n      token          = state.push('image', 'img', 0);\n      token.attrs    = attrs = [ [ 'src', href ],\n                                 [ 'alt', '' ] ];\n      token.children = tokens;\n      if (title) {\n        attrs.push([ 'title', title ]);\n      }\n\n      if (width !== '') {\n        attrs.push([ 'width', width ]);\n      }\n\n      if (height !== '') {\n        attrs.push([ 'height', height ]);\n      }\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  };\n}\n\nmodule.exports = function imsize_plugin(md, options) {\n  md.inline.ruler.before('emphasis', 'image', image_with_size(md, options));\n};\n","'use strict';\n\nvar fs   = require('fs');\nvar path = require('path');\n\nvar detector = require('./detector');\nvar handlers = {};\nvar types = require('./types');\n\ntypes.forEach(function(type) {\n  handlers[type] = require('./types/' + type);\n});\n\nvar MaxBufferSize = 128 * 1024;\n\nfunction lookup(buffer, filepath) {\n  var type = detector(buffer, filepath);\n\n  if (type in handlers) {\n    var size = handlers[type].calculate(buffer, filepath);\n    if (size !== false) {\n      size.type = type;\n      return size;\n    }\n  }\n\n  throw new TypeError('Unsupported file type');\n}\n\nfunction asyncFileToBuffer(filepath, callback) {\n  fs.open(filepath, 'r', function(err0, descriptor) {\n    if (err0) {\n      return callback(err0);\n    }\n\n    var size = fs.fstatSync(descriptor).size;\n    var bufferSize = Math.min(size, MaxBufferSize);\n    var buffer = new Buffer(bufferSize);\n    fs.read(descriptor, buffer, 0, bufferSize, 0, function(err1) {\n      if (err1) {\n        return callback(err1);\n      }\n\n      fs.close(descriptor, function(err2) {\n        callback(err2, buffer);\n      });\n    });\n  });\n}\n\nfunction syncFileToBuffer(filepath) {\n  var descriptor = fs.openSync(filepath, 'r');\n  var size = fs.fstatSync(descriptor).size;\n  var bufferSize = Math.min(size, MaxBufferSize);\n  var buffer = new Buffer(bufferSize);\n  fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n  fs.closeSync(descriptor);\n  return buffer;\n}\n\n/**\n * Returns the dimensions of the image file\n * @param[in] input: input image path\n * @param[in] callback(option): if specified, gets size async.\n */\nmodule.exports = function(input, callback) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Input must be file name');\n  }\n\n  var filepath = path.resolve(input);\n\n  if (typeof callback === 'function') {\n    asyncFileToBuffer(filepath, function(err, buffer) {\n      if (err) {\n        return callback(err);\n      }\n\n      var dimensions;\n      try {\n        dimensions = lookup(buffer, filepath);\n      } catch (e) {\n        err = e;\n      }\n      callback(err, dimensions);\n    });\n  } else {\n    var buffer = syncFileToBuffer(filepath);\n    return lookup(buffer, filepath);\n  }\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nvar typeMap = {};\nvar types = require('./types');\n\ntypes.forEach(function(type) {\n  typeMap[type] = require('./types/' + type).detect;\n});\n\nmodule.exports = function(buffer, filepath) {\n  var type, result;\n  for (type in typeMap) {\n    if (type in typeMap) {\n      result = typeMap[type](buffer, filepath);\n      if (result) {\n        return type;\n      }\n    }\n  }\n  throw new TypeError('Unsupported type');\n};\n","'use strict';\n\nmodule.exports = function(buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  var endian = !!isBigEndian ? 'BE' : 'LE';\n  var method = buffer['readUInt' + bits + endian];\n  return method.call(buffer, offset);\n}\n","// Parse image size\n//\n'use strict';\n\nfunction parseNextNumber(str, pos, max) {\n  var code,\n  start = pos,\n  result = {\n    ok: false,\n    pos: pos,\n    value: ''\n  };\n\n  code = str.charCodeAt(pos);\n\n  while (pos < max && (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) || code === 0x25 /* % */) {\n    code = str.charCodeAt(++pos);\n  }\n\n  result.ok = true;\n  result.pos = pos;\n  result.value = str.slice(start, pos);\n\n  return result;\n}\n\nmodule.exports = function parseImageSize(str, pos, max) {\n  var code,\n  result = {\n    ok: false,\n    pos: 0,\n    width: '',\n    height: ''\n  };\n\n  if (pos >= max) { return result; }\n\n  code = str.charCodeAt(pos);\n\n  if (code !== 0x3d /* = */) { return result; }\n\n  pos++;\n\n  // size must follow = without any white spaces as follows\n  // (1) =300x200\n  // (2) =300x\n  // (3) =x200\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */ && (code < 0x30 || code  > 0x39) /* [0-9] */) {\n    return result;\n  }\n\n  // parse width\n  var resultW = parseNextNumber(str, pos, max);\n  pos = resultW.pos;\n\n  // next charactor must be 'x'\n  code = str.charCodeAt(pos);\n  if (code !== 0x78 /* x */) { return result; }\n\n  pos++;\n\n  // parse height\n  var resultH = parseNextNumber(str, pos, max);\n  pos = resultH.pos;\n\n  result.width = resultW.value;\n  result.height = resultH.value;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x2B/* + */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i / 2, // 1 delimiter = 2 characters\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'ins_open';\n      token.tag     = 'ins';\n      token.nesting = 1;\n      token.markup  = '++';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'ins_close';\n      token.tag     = 'ins';\n      token.nesting = -1;\n      token.markup  = '++';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize);\n  md.inline.ruler2.before('emphasis', 'ins', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      if (!scanned.can_open && !scanned.can_close) { continue; }\n\n      state.delimiters.push({\n        marker: marker,\n        length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n        jump:   i / 2, // 1 delimiter = 2 characters\n        token:  state.tokens.length - 1,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state, delimiters) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        max = delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', function (state) {\n    var curr,\n        tokens_meta = state.tokens_meta,\n        max = (state.tokens_meta || []).length;\n\n    postProcess(state, state.delimiters);\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n        postProcess(state, tokens_meta[curr].delimiters);\n      }\n    }\n  });\n};\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","/*\n * SPDX-FileCopyrightText: 2020 The HedgeDoc developers (see AUTHORS file)\n *\n * SPDX-License-Identifier: ISC\n */\nimport Token from 'markdown-it/lib/token';\nvar checkboxRegex = /^ *\\[([ x])\\] /i;\nexport default function markdownItTaskLists(md, options) {\n    if (options === void 0) { options = { enabled: false, label: false, lineNumber: false }; }\n    md.core.ruler.after('inline', 'github-task-lists', function (state) { return processToken(state, options); });\n    md.renderer.rules.taskListItemCheckbox = function (tokens) {\n        var token = tokens[0];\n        var checkedAttribute = token.attrGet(\"checked\") ? 'checked=\"\"' : '';\n        var disabledAttribute = token.attrGet(\"disabled\") ? 'disabled=\"\"' : '';\n        var id = token.attrGet(\"id\");\n        var line = token.attrGet(\"line\");\n        var idAttribute = \"id=\\\"\" + id + \"\\\"\";\n        var dataLineAttribute = line && options.lineNumber ? \"data-line=\\\"\" + line + \"\\\"\" : '';\n        return \"<input class=\\\"task-list-item-checkbox\\\" type=\\\"checkbox\\\" \" + checkedAttribute + \" \" + disabledAttribute + \" \" + dataLineAttribute + \" \" + idAttribute + \"\\\">\";\n    };\n    md.renderer.rules.taskListItemLabel_close = function () {\n        return '</label>';\n    };\n    md.renderer.rules.taskListItemLabel_open = function (tokens) {\n        var token = tokens[0];\n        var id = token.attrGet('id');\n        return \"<label for=\\\"\" + id + \"\\\">\";\n    };\n}\nfunction processToken(state, options) {\n    var allTokens = state.tokens;\n    for (var i = 2; i < allTokens.length; i++) {\n        if (!isTodoItem(allTokens, i)) {\n            continue;\n        }\n        todoify(allTokens[i], options);\n        allTokens[i - 2].attrJoin('class', \"task-list-item \" + (options.enabled ? ' enabled' : ''));\n        var parentToken = findParentToken(allTokens, i - 2);\n        if (parentToken) {\n            parentToken.attrJoin('class', 'contains-task-list');\n        }\n    }\n    return false;\n}\nfunction findParentToken(tokens, index) {\n    var targetLevel = tokens[index].level - 1;\n    for (var currentTokenIndex = index - 1; currentTokenIndex >= 0; currentTokenIndex--) {\n        if (tokens[currentTokenIndex].level === targetLevel) {\n            return tokens[currentTokenIndex];\n        }\n    }\n    return undefined;\n}\nfunction isTodoItem(tokens, index) {\n    return isInline(tokens[index]) &&\n        isParagraph(tokens[index - 1]) &&\n        isListItem(tokens[index - 2]) &&\n        startsWithTodoMarkdown(tokens[index]);\n}\nfunction todoify(token, options) {\n    if (token.children == null) {\n        return;\n    }\n    var id = generateIdForToken(token);\n    token.children.splice(0, 0, createCheckboxToken(token, options.enabled, id));\n    token.children[1].content = token.children[1].content.replace(checkboxRegex, '');\n    if (options.label) {\n        token.children.splice(1, 0, createLabelBeginToken(id));\n        token.children.push(createLabelEndToken());\n    }\n}\nfunction generateIdForToken(token) {\n    if (token.map) {\n        return \"task-item-\" + token.map[0];\n    }\n    else {\n        return \"task-item-\" + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n    }\n}\nfunction createCheckboxToken(token, enabled, id) {\n    var checkbox = new Token('taskListItemCheckbox', '', 0);\n    if (!enabled) {\n        checkbox.attrSet(\"disabled\", 'true');\n    }\n    if (token.map) {\n        checkbox.attrSet(\"line\", token.map[0].toString());\n    }\n    checkbox.attrSet(\"id\", id);\n    var checkboxRegexResult = checkboxRegex.exec(token.content);\n    var isChecked = !!checkboxRegexResult && checkboxRegexResult[1].toLowerCase() === 'x';\n    if (isChecked) {\n        checkbox.attrSet(\"checked\", 'true');\n    }\n    return checkbox;\n}\nfunction createLabelBeginToken(id) {\n    var labelBeginToken = new Token('taskListItemLabel_open', '', 1);\n    labelBeginToken.attrSet('id', id);\n    return labelBeginToken;\n}\nfunction createLabelEndToken() {\n    return new Token('taskListItemLabel_close', '', -1);\n}\nfunction isInline(token) {\n    return token.type === 'inline';\n}\nfunction isParagraph(token) {\n    return token.type === 'paragraph_open';\n}\nfunction isListItem(token) {\n    return token.type === 'list_item_open';\n}\nfunction startsWithTodoMarkdown(token) {\n    return checkboxRegex.test(token.content);\n}\n","'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","// Process block-level uml diagrams\n//\n'use strict';\n\nmodule.exports = function umlPlugin(md, options) {\n\n  function generateSourceDefault(umlCode, pluginOptions) {\n    var imageFormat = pluginOptions.imageFormat || 'svg';\n    var diagramName = pluginOptions.diagramName || 'uml';\n    var server = pluginOptions.server || 'https://www.plantuml.com/plantuml';\n    var deflate = require('./lib/deflate.js');\n    var zippedCode = deflate.encode64(\n      deflate.zip_deflate(\n        unescape(encodeURIComponent(\n          '@start' + diagramName + '\\n' + umlCode + '\\n@end' + diagramName)),\n        9\n      )\n    );\n\n    return server + '/' + imageFormat + '/' + zippedCode;\n  }\n\n  options = options || {};\n\n  var openMarker = options.openMarker || '@startuml',\n      openChar = openMarker.charCodeAt(0),\n      closeMarker = options.closeMarker || '@enduml',\n      closeChar = closeMarker.charCodeAt(0),\n      render = options.render || md.renderer.rules.image,\n      generateSource = options.generateSource || generateSourceDefault;\n\n  function uml(state, startLine, endLine, silent) {\n    var nextLine, markup, params, token, i,\n        autoClosed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-uml blocks\n    //\n    if (openChar !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (i = 0; i < openMarker.length; ++i) {\n      if (openMarker[i] !== state.src[start + i]) { return false; }\n    }\n\n    markup = state.src.slice(start, start + i);\n    params = state.src.slice(start + i, max);\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (closeChar !== state.src.charCodeAt(start)) {\n        // didn't find the closing fence\n        continue;\n      }\n\n      if (state.sCount[nextLine] > state.sCount[startLine]) {\n        // closing fence should not be indented with respect of opening fence\n        continue;\n      }\n\n      var closeMarkerMatched = true;\n      for (i = 0; i < closeMarker.length; ++i) {\n        if (closeMarker[i] !== state.src[start + i]) {\n          closeMarkerMatched = false;\n          break;\n        }\n      }\n\n      if (!closeMarkerMatched) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      if (state.skipSpaces(start + i) < max) {\n        continue;\n      }\n\n      // found!\n      autoClosed = true;\n      break;\n    }\n\n    var contents = state.src\n      .split('\\n')\n      .slice(startLine + 1, nextLine)\n      .join('\\n');\n\n    // We generate a token list for the alt property, to mimic what the image parser does.\n    var altToken = [];\n    // Remove leading space if any.\n    var alt = params ? params.slice(1) : 'uml diagram';\n    state.md.inline.parse(\n      alt,\n      state.md,\n      state.env,\n      altToken\n    );\n\n    token = state.push('uml_diagram', 'img', 0);\n    // alt is constructed from children. No point in populating it here.\n    token.attrs = [ [ 'src', generateSource(contents, options) ], [ 'alt', '' ] ];\n    token.block = true;\n    token.children = altToken;\n    token.info = params;\n    token.map = [ startLine, nextLine ];\n    token.markup = markup;\n\n    state.line = nextLine + (autoClosed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'uml_diagram', uml, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules.uml_diagram = render;\n};\n","// Using this library so that our img links are compatible with plantUml website.\n// TODO: replace this library with zlib once we create our private uml server.\n\n'use strict';\n\n// Added to original:\nmodule.exports = {\n  zip_deflate: zip_deflate,\n  encode64: encode64\n};\n\n// Original[some parts modified to avoid errors]:\n\n/* Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0.1\n * LastModified: Dec 25 1999\n */\n\n/* Interface:\n * data = zip_deflate(src);\n */\n\n/* constant parameters */\nvar zip_WSIZE = 32768;\t\t// Sliding Window size\nvar zip_STORED_BLOCK = 0;\nvar zip_STATIC_TREES = 1;\nvar zip_DYN_TREES    = 2;\n\n/* for deflate */\nvar zip_DEFAULT_LEVEL = 6;\nvar zip_FULL_SEARCH = true;\nvar zip_INBUFSIZ = 32768;\t// Input buffer size\nvar zip_INBUF_EXTRA = 64;\t// Extra buffer\nvar zip_OUTBUFSIZ = 1024 * 8;\nvar zip_window_size = 2 * zip_WSIZE;\nvar zip_MIN_MATCH = 3;\nvar zip_MAX_MATCH = 258;\nvar zip_BITS = 16;\n// for SMALL_MEM\nvar zip_LIT_BUFSIZE = 0x2000;\nvar zip_HASH_BITS = 13;\n// for MEDIUM_MEM\n// var zip_LIT_BUFSIZE = 0x4000;\n// var zip_HASH_BITS = 14;\n// for BIG_MEM\n// var zip_LIT_BUFSIZE = 0x8000;\n// var zip_HASH_BITS = 15;\n// if (zip_LIT_BUFSIZE > zip_INBUFSIZ) { alert('error: zip_INBUFSIZ is too small'); }\n// if ((zip_WSIZE << 1) > (1 << zip_BITS)) { alert('error: zip_WSIZE is too large'); }\n// if (zip_HASH_BITS > zip_BITS - 1) { alert('error: zip_HASH_BITS is too large'); }\n// if (zip_HASH_BITS < 8 || zip_MAX_MATCH != 258) { alert('error: Code too clever'); }\nvar zip_DIST_BUFSIZE = zip_LIT_BUFSIZE;\nvar zip_HASH_SIZE = 1 << zip_HASH_BITS;\nvar zip_HASH_MASK = zip_HASH_SIZE - 1;\nvar zip_WMASK = zip_WSIZE - 1;\nvar zip_NIL = 0; // Tail of hash chains\nvar zip_TOO_FAR = 4096;\nvar zip_MIN_LOOKAHEAD = zip_MAX_MATCH + zip_MIN_MATCH + 1;\nvar zip_MAX_DIST = zip_WSIZE - zip_MIN_LOOKAHEAD;\nvar zip_SMALLEST = 1;\nvar zip_MAX_BITS = 15;\nvar zip_MAX_BL_BITS = 7;\nvar zip_LENGTH_CODES = 29;\nvar zip_LITERALS = 256;\nvar zip_END_BLOCK = 256;\nvar zip_L_CODES = zip_LITERALS + 1 + zip_LENGTH_CODES;\nvar zip_D_CODES = 30;\nvar zip_BL_CODES = 19;\nvar zip_REP_3_6 = 16;\nvar zip_REPZ_3_10 = 17;\nvar zip_REPZ_11_138 = 18;\nvar zip_HEAP_SIZE = 2 * zip_L_CODES + 1;\nvar zip_H_SHIFT = parseInt((zip_HASH_BITS + zip_MIN_MATCH - 1) /\n  zip_MIN_MATCH);\n\n/* variables */\nvar zip_free_queue;\nvar zip_qhead, zip_qtail;\nvar zip_initflag;\nvar zip_outbuf = null;\nvar zip_outcnt, zip_outoff;\nvar zip_complete;\nvar zip_window;\nvar zip_d_buf;\nvar zip_l_buf;\nvar zip_prev;\nvar zip_bi_buf;\nvar zip_bi_valid;\nvar zip_block_start;\nvar zip_ins_h;\nvar zip_hash_head;\nvar zip_prev_match;\nvar zip_match_available;\nvar zip_match_length;\nvar zip_prev_length;\nvar zip_strstart;\nvar zip_match_start;\nvar zip_eofile;\nvar zip_lookahead;\nvar zip_max_chain_length;\nvar zip_max_lazy_match;\nvar zip_compr_level;\nvar zip_good_match;\nvar zip_nice_match;\nvar zip_dyn_ltree;\nvar zip_dyn_dtree;\nvar zip_static_ltree;\nvar zip_static_dtree;\nvar zip_bl_tree;\nvar zip_l_desc;\nvar zip_d_desc;\nvar zip_bl_desc;\nvar zip_bl_count;\nvar zip_heap;\nvar zip_heap_len;\nvar zip_heap_max;\nvar zip_depth;\nvar zip_length_code;\nvar zip_dist_code;\nvar zip_base_length;\nvar zip_base_dist;\nvar zip_flag_buf;\nvar zip_last_lit;\nvar zip_last_dist;\nvar zip_last_flags;\nvar zip_flags;\nvar zip_flag_bit;\nvar zip_opt_len;\nvar zip_static_len;\nvar zip_deflate_data;\nvar zip_deflate_pos;\n\n/* constant tables */\nvar zip_extra_lbits = new Array(\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0);\nvar zip_extra_dbits = new Array(\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13);\nvar zip_extra_blbits = new Array(\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7);\nvar zip_bl_order = new Array(\n  16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15);\nvar zip_configuration_table = new Array(\n  new zip_DeflateConfiguration(0,    0,   0,    0),\n  new zip_DeflateConfiguration(4,    4,   8,    4),\n  new zip_DeflateConfiguration(4,    5,  16,    8),\n  new zip_DeflateConfiguration(4,    6,  32,   32),\n  new zip_DeflateConfiguration(4,    4,  16,   16),\n  new zip_DeflateConfiguration(8,   16,  32,   32),\n  new zip_DeflateConfiguration(8,   16, 128,  128),\n  new zip_DeflateConfiguration(8,   32, 128,  256),\n  new zip_DeflateConfiguration(32, 128, 258, 1024),\n  new zip_DeflateConfiguration(32, 258, 258, 4096));\n\n/* objects (deflate) */\n\nfunction zip_DeflateCT() {\n  this.fc = 0; // frequency count or bit string\n  this.dl = 0; // father node in Huffman tree or length of bit string\n}\n\nfunction zip_DeflateTreeDesc() {\n  this.dyn_tree = null;\t// the dynamic tree\n  this.static_tree = null;\t// corresponding static tree or NULL\n  this.extra_bits = null;\t// extra bits for each code or NULL\n  this.extra_base = 0;\t// base index for extra_bits\n  this.elems = 0;\t\t// max number of elements in the tree\n  this.max_length = 0;\t// max bit length for the codes\n  this.max_code = 0;\t\t// largest code with non zero frequency\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction zip_DeflateConfiguration(a, b, c, d) {\n  this.good_length = a; // reduce lazy search above this match length\n  this.max_lazy = b;    // do not perform lazy search above this match length\n  this.nice_length = c; // quit search above this match length\n  this.max_chain = d;\n}\n\nfunction zip_DeflateBuffer() {\n  this.next = null;\n  this.len = 0;\n  this.ptr = new Array(zip_OUTBUFSIZ);\n  this.off = 0;\n}\n\n/* routines (deflate) */\n\nfunction zip_deflate_start(level) {\n  var i;\n\n  if (!level) { level = zip_DEFAULT_LEVEL; } else if (level < 1) { level = 1; } else if (level > 9) { level = 9; }\n\n  zip_compr_level = level;\n  zip_initflag = false;\n  zip_eofile = false;\n  if (zip_outbuf != null) { return; }\n\n  zip_free_queue = zip_qhead = zip_qtail = null;\n  zip_outbuf = new Array(zip_OUTBUFSIZ);\n  zip_window = new Array(zip_window_size);\n  zip_d_buf = new Array(zip_DIST_BUFSIZE);\n  zip_l_buf = new Array(zip_INBUFSIZ + zip_INBUF_EXTRA);\n  zip_prev = new Array(1 << zip_BITS);\n  zip_dyn_ltree = new Array(zip_HEAP_SIZE);\n  for (i = 0; i < zip_HEAP_SIZE; i++) { zip_dyn_ltree[i] = new zip_DeflateCT(); }\n  zip_dyn_dtree = new Array(2 * zip_D_CODES + 1);\n  for (i = 0; i < 2 * zip_D_CODES + 1; i++) { zip_dyn_dtree[i] = new zip_DeflateCT(); }\n  zip_static_ltree = new Array(zip_L_CODES + 2);\n  for (i = 0; i < zip_L_CODES + 2; i++) { zip_static_ltree[i] = new zip_DeflateCT(); }\n  zip_static_dtree = new Array(zip_D_CODES);\n  for (i = 0; i < zip_D_CODES; i++) { zip_static_dtree[i] = new zip_DeflateCT(); }\n  zip_bl_tree = new Array(2 * zip_BL_CODES + 1);\n  for (i = 0; i < 2 * zip_BL_CODES + 1; i++) { zip_bl_tree[i] = new zip_DeflateCT(); }\n  zip_l_desc = new zip_DeflateTreeDesc();\n  zip_d_desc = new zip_DeflateTreeDesc();\n  zip_bl_desc = new zip_DeflateTreeDesc();\n  zip_bl_count = new Array(zip_MAX_BITS + 1);\n  zip_heap = new Array(2 * zip_L_CODES + 1);\n  zip_depth = new Array(2 * zip_L_CODES + 1);\n  zip_length_code = new Array(zip_MAX_MATCH - zip_MIN_MATCH + 1);\n  zip_dist_code = new Array(512);\n  zip_base_length = new Array(zip_LENGTH_CODES);\n  zip_base_dist = new Array(zip_D_CODES);\n  zip_flag_buf = new Array(parseInt(zip_LIT_BUFSIZE / 8));\n}\n\nfunction zip_deflate_end() {\n  zip_free_queue = zip_qhead = zip_qtail = null;\n  zip_outbuf = null;\n  zip_window = null;\n  zip_d_buf = null;\n  zip_l_buf = null;\n  zip_prev = null;\n  zip_dyn_ltree = null;\n  zip_dyn_dtree = null;\n  zip_static_ltree = null;\n  zip_static_dtree = null;\n  zip_bl_tree = null;\n  zip_l_desc = null;\n  zip_d_desc = null;\n  zip_bl_desc = null;\n  zip_bl_count = null;\n  zip_heap = null;\n  zip_depth = null;\n  zip_length_code = null;\n  zip_dist_code = null;\n  zip_base_length = null;\n  zip_base_dist = null;\n  zip_flag_buf = null;\n}\n\nfunction zip_reuse_queue(p) {\n  p.next = zip_free_queue;\n  zip_free_queue = p;\n}\n\nfunction zip_new_queue() {\n  var p;\n\n  if (zip_free_queue != null) {\n    p = zip_free_queue;\n    zip_free_queue = zip_free_queue.next;\n  } else { p = new zip_DeflateBuffer(); }\n  p.next = null;\n  p.len = p.off = 0;\n\n  return p;\n}\n\nfunction zip_head1(i) {\n  return zip_prev[zip_WSIZE + i];\n}\n\nfunction zip_head2(i, val) {\n  return zip_prev[zip_WSIZE + i] = val;\n}\n\n/* put_byte is used for the compressed output, put_ubyte for the\n * uncompressed output. However unlzw() uses window for its\n * suffix table instead of its output buffer, so it does not use put_ubyte\n * (to be cleaned up).\n */\nfunction zip_put_byte(c) {\n  zip_outbuf[zip_outoff + zip_outcnt++] = c;\n  if (zip_outoff + zip_outcnt == zip_OUTBUFSIZ) { zip_qoutbuf(); }\n}\n\n/* Output a 16 bit value, lsb first */\nfunction zip_put_short(w) {\n  w &= 0xffff;\n  if (zip_outoff + zip_outcnt < zip_OUTBUFSIZ - 2) {\n    zip_outbuf[zip_outoff + zip_outcnt++] = (w & 0xff);\n    zip_outbuf[zip_outoff + zip_outcnt++] = (w >>> 8);\n  } else {\n    zip_put_byte(w & 0xff);\n    zip_put_byte(w >>> 8);\n  }\n}\n\n/* ==========================================================================\n * Insert string s in the dictionary and set match_head to the previous head\n * of the hash chain (the most recent string with same hash key). Return\n * the previous length of the hash chain.\n * IN  assertion: all calls to to INSERT_STRING are made with consecutive\n *    input characters and the first MIN_MATCH bytes of s are valid\n *    (except for the last MIN_MATCH-1 bytes of the input file).\n */\nfunction zip_INSERT_STRING() {\n  zip_ins_h = ((zip_ins_h << zip_H_SHIFT)\n    ^ (zip_window[zip_strstart + zip_MIN_MATCH - 1] & 0xff))\n    & zip_HASH_MASK;\n  zip_hash_head = zip_head1(zip_ins_h);\n  zip_prev[zip_strstart & zip_WMASK] = zip_hash_head;\n  zip_head2(zip_ins_h, zip_strstart);\n}\n\n/* Send a code of the given tree. c and tree must not have side effects */\nfunction zip_SEND_CODE(c, tree) {\n  zip_send_bits(tree[c].fc, tree[c].dl);\n}\n\n/* Mapping from a distance to a distance code. dist is the distance - 1 and\n * must not have side effects. dist_code[256] and dist_code[257] are never\n * used.\n */\nfunction zip_D_CODE(dist) {\n  return (dist < 256 ? zip_dist_code[dist]\n    : zip_dist_code[256 + (dist >> 7)]) & 0xff;\n}\n\n/* ==========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction zip_SMALLER(tree, n, m) {\n  return tree[n].fc < tree[m].fc ||\n    (tree[n].fc == tree[m].fc && zip_depth[n] <= zip_depth[m]);\n}\n\n/* ==========================================================================\n * read string data\n */\nfunction zip_read_buff(buff, offset, n) {\n  var i;\n  for (i = 0; i < n && zip_deflate_pos < zip_deflate_data.length; i++) {\n    buff[offset + i] =\n      zip_deflate_data.charCodeAt(zip_deflate_pos++) & 0xff;\n  }\n  return i;\n}\n\n/* ==========================================================================\n * Initialize the \"longest match\" routines for a new file\n */\nfunction zip_lm_init() {\n  var j;\n\n  /* Initialize the hash table. */\n  for (j = 0; j < zip_HASH_SIZE; j++)\n  //\tzip_head2(j, zip_NIL);\n  { zip_prev[zip_WSIZE + j] = 0; }\n  /* prev will be initialized on the fly */\n\n  /* Set the default configuration parameters:\n  */\n  zip_max_lazy_match = zip_configuration_table[zip_compr_level].max_lazy;\n  zip_good_match     = zip_configuration_table[zip_compr_level].good_length;\n  if (!zip_FULL_SEARCH) { zip_nice_match = zip_configuration_table[zip_compr_level].nice_length; }\n  zip_max_chain_length = zip_configuration_table[zip_compr_level].max_chain;\n\n  zip_strstart = 0;\n  zip_block_start = 0;\n\n  zip_lookahead = zip_read_buff(zip_window, 0, 2 * zip_WSIZE);\n  if (zip_lookahead <= 0) {\n    zip_eofile = true;\n    zip_lookahead = 0;\n    return;\n  }\n  zip_eofile = false;\n  /* Make sure that we always have enough lookahead. This is important\n   * if input comes from a device such as a tty.\n   */\n  while (zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile) { zip_fill_window(); }\n\n  /* If lookahead < MIN_MATCH, ins_h is garbage, but this is\n   * not important since only literal bytes will be emitted.\n   */\n  zip_ins_h = 0;\n  for (j = 0; j < zip_MIN_MATCH - 1; j++) {\n    //      UPDATE_HASH(ins_h, window[j]);\n    zip_ins_h = ((zip_ins_h << zip_H_SHIFT) ^ (zip_window[j] & 0xff)) & zip_HASH_MASK;\n  }\n}\n\n/* ==========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n */\nfunction zip_longest_match(cur_match) {\n  var chain_length = zip_max_chain_length; // max hash chain length\n  var scanp = zip_strstart; // current string\n  var matchp;\t\t// matched string\n  var len;\t\t// length of current match\n  var best_len = zip_prev_length;\t// best match length so far\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n  var limit = (zip_strstart > zip_MAX_DIST ? zip_strstart - zip_MAX_DIST : zip_NIL);\n\n  var strendp = zip_strstart + zip_MAX_MATCH;\n  var scan_end1 = zip_window[scanp + best_len - 1];\n  var scan_end  = zip_window[scanp + best_len];\n\n  /* Do not waste too much time if we already have a good match: */\n  if (zip_prev_length >= zip_good_match) { chain_length >>= 2; }\n\n  //  Assert(encoder->strstart <= window_size-MIN_LOOKAHEAD, \"insufficient lookahead\");\n\n  do {\n    //    Assert(cur_match < encoder->strstart, \"no future\");\n    matchp = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2:\n     */\n    if (zip_window[matchp + best_len]\t!= scan_end  ||\n      zip_window[matchp + best_len - 1]\t!= scan_end1 ||\n      zip_window[matchp]\t\t\t!= zip_window[scanp] ||\n      zip_window[++matchp]\t\t\t!= zip_window[scanp + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scanp += 2;\n    matchp++;\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n    } while (zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      zip_window[++scanp] == zip_window[++matchp] &&\n      scanp < strendp);\n\n    len = zip_MAX_MATCH - (strendp - scanp);\n    scanp = strendp - zip_MAX_MATCH;\n\n    if (len > best_len) {\n      zip_match_start = cur_match;\n      best_len = len;\n      if (zip_FULL_SEARCH) {\n        if (len >= zip_MAX_MATCH) break;\n      } else if (len >= zip_nice_match) break;\n\n      scan_end1  = zip_window[scanp + best_len - 1];\n      scan_end   = zip_window[scanp + best_len];\n    }\n  } while ((cur_match = zip_prev[cur_match & zip_WMASK]) > limit\n    && --chain_length != 0);\n\n  return best_len;\n}\n\n/* ==========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead, and sets eofile if end of input file.\n * IN assertion: lookahead < MIN_LOOKAHEAD && strstart + lookahead > 0\n * OUT assertions: at least one byte has been read, or eofile is set;\n *    file reads are performed for at least two bytes (required for the\n *    translate_eol option).\n */\nfunction zip_fill_window() {\n  var n, m;\n\n  // Amount of free space at the end of the window.\n  var more = zip_window_size - zip_lookahead - zip_strstart;\n\n  /* If the window is almost full and there is insufficient lookahead,\n   * move the upper half to the lower one to make room in the upper half.\n   */\n  if (more == -1) {\n    /* Very unlikely, but possible on 16 bit machine if strstart == 0\n     * and lookahead == 1 (input done one byte at time)\n     */\n    more--;\n  } else if (zip_strstart >= zip_WSIZE + zip_MAX_DIST) {\n    /* By the IN assertion, the window is not empty so we can't confuse\n     * more == 0 with more == 64K on a 16 bit machine.\n     */\n    //\tAssert(window_size == (ulg)2*WSIZE, \"no sliding with BIG_MEM\");\n\n    //\tSystem.arraycopy(window, WSIZE, window, 0, WSIZE);\n    for (n = 0; n < zip_WSIZE; n++) { zip_window[n] = zip_window[n + zip_WSIZE]; }\n\n    zip_match_start -= zip_WSIZE;\n    zip_strstart    -= zip_WSIZE; /* we now have strstart >= MAX_DIST: */\n    zip_block_start -= zip_WSIZE;\n\n    for (n = 0; n < zip_HASH_SIZE; n++) {\n      m = zip_head1(n);\n      zip_head2(n, m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n    }\n    for (n = 0; n < zip_WSIZE; n++) {\n      /* If n is not on any hash chain, prev[n] is garbage but\n       * its value will never be used.\n       */\n      m = zip_prev[n];\n      zip_prev[n] = (m >= zip_WSIZE ? m - zip_WSIZE : zip_NIL);\n    }\n    more += zip_WSIZE;\n  }\n  // At this point, more >= 2\n  if (!zip_eofile) {\n    n = zip_read_buff(zip_window, zip_strstart + zip_lookahead, more);\n    if (n <= 0) { zip_eofile = true; } else { zip_lookahead += n; }\n  }\n}\n\n/* ==========================================================================\n * Processes a new input file and return its compressed length. This\n * function does not perform lazy evaluationof matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction zip_deflate_fast() {\n  while (zip_lookahead != 0 && zip_qhead == null) {\n    var flush; // set if current block must be flushed\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    zip_INSERT_STRING();\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (zip_hash_head != zip_NIL &&\n      zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      zip_match_length = zip_longest_match(zip_hash_head);\n      /* longest_match() sets match_start */\n      if (zip_match_length > zip_lookahead) { zip_match_length = zip_lookahead; }\n    }\n    if (zip_match_length >= zip_MIN_MATCH) {\n      //\t    check_match(strstart, match_start, match_length);\n\n      flush = zip_ct_tally(zip_strstart - zip_match_start,\n        zip_match_length - zip_MIN_MATCH);\n      zip_lookahead -= zip_match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (zip_match_length <= zip_max_lazy_match) {\n        zip_match_length--; // string at strstart already in hash table\n        do {\n          zip_strstart++;\n          zip_INSERT_STRING();\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n           * these bytes are garbage, but it does not matter since\n           * the next lookahead bytes will be emitted as literals.\n           */\n        } while (--zip_match_length != 0);\n        zip_strstart++;\n      } else {\n        zip_strstart += zip_match_length;\n        zip_match_length = 0;\n        zip_ins_h = zip_window[zip_strstart] & 0xff;\n        //\t\tUPDATE_HASH(ins_h, window[strstart + 1]);\n        zip_ins_h = ((zip_ins_h << zip_H_SHIFT) ^ (zip_window[zip_strstart + 1] & 0xff)) & zip_HASH_MASK;\n\n        //#if MIN_MATCH != 3\n        //\t\tCall UPDATE_HASH() MIN_MATCH-3 more times\n        //#endif\n\n      }\n    } else {\n      /* No match, output a literal byte */\n      flush = zip_ct_tally(0, zip_window[zip_strstart] & 0xff);\n      zip_lookahead--;\n      zip_strstart++;\n    }\n    if (flush) {\n      zip_flush_block(0);\n      zip_block_start = zip_strstart;\n    }\n\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    while (zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile) { zip_fill_window(); }\n  }\n}\n\nfunction zip_deflate_better() {\n  /* Process the input block. */\n  while (zip_lookahead != 0 && zip_qhead == null) {\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    zip_INSERT_STRING();\n\n    /* Find the longest match, discarding those <= prev_length.\n    */\n    zip_prev_length = zip_match_length;\n    zip_prev_match = zip_match_start;\n    zip_match_length = zip_MIN_MATCH - 1;\n\n    if (zip_hash_head != zip_NIL &&\n      zip_prev_length < zip_max_lazy_match &&\n      zip_strstart - zip_hash_head <= zip_MAX_DIST) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      zip_match_length = zip_longest_match(zip_hash_head);\n      /* longest_match() sets match_start */\n      if (zip_match_length > zip_lookahead) { zip_match_length = zip_lookahead; }\n\n      /* Ignore a length 3 match if it is too distant: */\n      if (zip_match_length == zip_MIN_MATCH &&\n        zip_strstart - zip_match_start > zip_TOO_FAR) {\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        zip_match_length--;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (zip_prev_length >= zip_MIN_MATCH &&\n      zip_match_length <= zip_prev_length) {\n      var flush; // set if current block must be flushed\n\n      //\t    check_match(strstart - 1, prev_match, prev_length);\n      flush = zip_ct_tally(zip_strstart - 1 - zip_prev_match,\n        zip_prev_length - zip_MIN_MATCH);\n\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted.\n       */\n      zip_lookahead -= zip_prev_length - 1;\n      zip_prev_length -= 2;\n      do {\n        zip_strstart++;\n        zip_INSERT_STRING();\n        /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n         * always MIN_MATCH bytes ahead. If lookahead < MIN_MATCH\n         * these bytes are garbage, but it does not matter since the\n         * next lookahead bytes will always be emitted as literals.\n         */\n      } while (--zip_prev_length != 0);\n      zip_match_available = 0;\n      zip_match_length = zip_MIN_MATCH - 1;\n      zip_strstart++;\n      if (flush) {\n        zip_flush_block(0);\n        zip_block_start = zip_strstart;\n      }\n    } else if (zip_match_available != 0) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      if (zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff)) {\n        zip_flush_block(0);\n        zip_block_start = zip_strstart;\n      }\n      zip_strstart++;\n      zip_lookahead--;\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      zip_match_available = 1;\n      zip_strstart++;\n      zip_lookahead--;\n    }\n\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    while (zip_lookahead < zip_MIN_LOOKAHEAD && !zip_eofile) { zip_fill_window(); }\n  }\n}\n\nfunction zip_init_deflate() {\n  if (zip_eofile) { return; }\n  zip_bi_buf = 0;\n  zip_bi_valid = 0;\n  zip_ct_init();\n  zip_lm_init();\n\n  zip_qhead = null;\n  zip_outcnt = 0;\n  zip_outoff = 0;\n\n  if (zip_compr_level <= 3) {\n    zip_prev_length = zip_MIN_MATCH - 1;\n    zip_match_length = 0;\n  } else {\n    zip_match_length = zip_MIN_MATCH - 1;\n    zip_match_available = 0;\n  }\n\n  zip_complete = false;\n}\n\n/* ==========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction zip_deflate_internal(buff, off, buff_size) {\n  var n;\n\n  if (!zip_initflag) {\n    zip_init_deflate();\n    zip_initflag = true;\n    if (zip_lookahead == 0) { // empty\n      zip_complete = true;\n      return 0;\n    }\n  }\n\n  if ((n = zip_qcopy(buff, off, buff_size)) == buff_size) { return buff_size; }\n\n  if (zip_complete) { return n; }\n\n  if (zip_compr_level <= 3) // optimized for speed\n  { zip_deflate_fast(); } else { zip_deflate_better(); }\n  if (zip_lookahead == 0) {\n    if (zip_match_available != 0) { zip_ct_tally(0, zip_window[zip_strstart - 1] & 0xff); }\n    zip_flush_block(1);\n    zip_complete = true;\n  }\n  return n + zip_qcopy(buff, n + off, buff_size - n);\n}\n\nfunction zip_qcopy(buff, off, buff_size) {\n  var n, i, j;\n\n  n = 0;\n  while (zip_qhead != null && n < buff_size) {\n    i = buff_size - n;\n    if (i > zip_qhead.len) { i = zip_qhead.len; }\n    //      System.arraycopy(qhead.ptr, qhead.off, buff, off + n, i);\n    for (j = 0; j < i; j++) { buff[off + n + j] = zip_qhead.ptr[zip_qhead.off + j]; }\n\n    zip_qhead.off += i;\n    zip_qhead.len -= i;\n    n += i;\n    if (zip_qhead.len == 0) {\n      var p;\n      p = zip_qhead;\n      zip_qhead = zip_qhead.next;\n      zip_reuse_queue(p);\n    }\n  }\n\n  if (n == buff_size) { return n; }\n\n  if (zip_outoff < zip_outcnt) {\n    i = buff_size - n;\n    if (i > zip_outcnt - zip_outoff) { i = zip_outcnt - zip_outoff; }\n    // System.arraycopy(outbuf, outoff, buff, off + n, i);\n    for (j = 0; j < i; j++) { buff[off + n + j] = zip_outbuf[zip_outoff + j]; }\n    zip_outoff += i;\n    n += i;\n    if (zip_outcnt == zip_outoff) { zip_outcnt = zip_outoff = 0; }\n  }\n  return n;\n}\n\n/* ==========================================================================\n * Allocate the match buffer, initialize the various tables and save the\n * location of the internal file attribute (ascii/binary) and method\n * (DEFLATE/STORE).\n */\nfunction zip_ct_init() {\n  var n;\t// iterates over tree elements\n  var bits;\t// bit counter\n  var length;\t// length value\n  var code;\t// code value\n  var dist;\t// distance index\n\n  if (zip_static_dtree[0].dl != 0) return; // ct_init already called\n\n  zip_l_desc.dyn_tree\t\t= zip_dyn_ltree;\n  zip_l_desc.static_tree\t= zip_static_ltree;\n  zip_l_desc.extra_bits\t= zip_extra_lbits;\n  zip_l_desc.extra_base\t= zip_LITERALS + 1;\n  zip_l_desc.elems\t\t= zip_L_CODES;\n  zip_l_desc.max_length\t= zip_MAX_BITS;\n  zip_l_desc.max_code\t\t= 0;\n\n  zip_d_desc.dyn_tree\t\t= zip_dyn_dtree;\n  zip_d_desc.static_tree\t= zip_static_dtree;\n  zip_d_desc.extra_bits\t= zip_extra_dbits;\n  zip_d_desc.extra_base\t= 0;\n  zip_d_desc.elems\t\t= zip_D_CODES;\n  zip_d_desc.max_length\t= zip_MAX_BITS;\n  zip_d_desc.max_code\t\t= 0;\n\n  zip_bl_desc.dyn_tree\t= zip_bl_tree;\n  zip_bl_desc.static_tree\t= null;\n  zip_bl_desc.extra_bits\t= zip_extra_blbits;\n  zip_bl_desc.extra_base\t= 0;\n  zip_bl_desc.elems\t\t= zip_BL_CODES;\n  zip_bl_desc.max_length\t= zip_MAX_BL_BITS;\n  zip_bl_desc.max_code\t= 0;\n\n  // Initialize the mapping length (0..255) -> length code (0..28)\n  length = 0;\n  for (code = 0; code < zip_LENGTH_CODES - 1; code++) {\n    zip_base_length[code] = length;\n    for (n = 0; n < (1 << zip_extra_lbits[code]); n++) { zip_length_code[length++] = code; }\n  }\n  // Assert (length == 256, \"ct_init: length != 256\");\n\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  zip_length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    zip_base_dist[code] = dist;\n    for (n = 0; n < (1 << zip_extra_dbits[code]); n++) {\n      zip_dist_code[dist++] = code;\n    }\n  }\n  // Assert (dist == 256, \"ct_init: dist != 256\");\n  dist >>= 7; // from now on, all distances are divided by 128\n  for (; code < zip_D_CODES; code++) {\n    zip_base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (zip_extra_dbits[code] - 7)); n++) { zip_dist_code[256 + dist++] = code; }\n  }\n  // Assert (dist == 256, \"ct_init: 256+dist != 512\");\n\n  // Construct the codes of the static literal tree\n  for (bits = 0; bits <= zip_MAX_BITS; bits++) { zip_bl_count[bits] = 0; }\n  n = 0;\n  while (n <= 143) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n  while (n <= 255) { zip_static_ltree[n++].dl = 9; zip_bl_count[9]++; }\n  while (n <= 279) { zip_static_ltree[n++].dl = 7; zip_bl_count[7]++; }\n  while (n <= 287) { zip_static_ltree[n++].dl = 8; zip_bl_count[8]++; }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  zip_gen_codes(zip_static_ltree, zip_L_CODES + 1);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < zip_D_CODES; n++) {\n    zip_static_dtree[n].dl = 5;\n    zip_static_dtree[n].fc = zip_bi_reverse(n, 5);\n  }\n\n  // Initialize the first block of the first file:\n  zip_init_block();\n}\n\n/* ==========================================================================\n * Initialize a new block.\n */\nfunction zip_init_block() {\n  var n; // iterates over tree elements\n\n  // Initialize the trees.\n  for (n = 0; n < zip_L_CODES;  n++) zip_dyn_ltree[n].fc = 0;\n  for (n = 0; n < zip_D_CODES;  n++) zip_dyn_dtree[n].fc = 0;\n  for (n = 0; n < zip_BL_CODES; n++) zip_bl_tree[n].fc = 0;\n\n  zip_dyn_ltree[zip_END_BLOCK].fc = 1;\n  zip_opt_len = zip_static_len = 0;\n  zip_last_lit = zip_last_dist = zip_last_flags = 0;\n  zip_flags = 0;\n  zip_flag_bit = 1;\n}\n\n/* ==========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction zip_pqdownheap(\n  tree,\t// the tree to restore\n  k) {\t// node to move down\n  var v = zip_heap[k];\n  var j = k << 1;\t// left son of k\n\n  while (j <= zip_heap_len) {\n    // Set j to the smallest of the two sons:\n    if (j < zip_heap_len &&\n      zip_SMALLER(tree, zip_heap[j + 1], zip_heap[j])) { j++; }\n\n    // Exit if v is smaller than both sons\n    if (zip_SMALLER(tree, v, zip_heap[j])) { break; }\n\n    // Exchange v with the smallest son\n    zip_heap[k] = zip_heap[j];\n    k = j;\n\n    // And continue down the tree, setting j to the left son of k\n    j <<= 1;\n  }\n  zip_heap[k] = v;\n}\n\n/* ==========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction zip_gen_bitlen(desc) { // the tree descriptor\n  var tree\t\t= desc.dyn_tree;\n  var extra\t\t= desc.extra_bits;\n  var base\t\t= desc.extra_base;\n  var max_code\t= desc.max_code;\n  var max_length\t= desc.max_length;\n  var stree\t\t= desc.static_tree;\n  var h;\t\t// heap index\n  var n, m;\t\t// iterate over the tree elements\n  var bits;\t\t// bit length\n  var xbits;\t\t// extra bits\n  var f;\t\t// frequency\n  var overflow = 0;\t// number of elements with bit length too large\n\n  for (bits = 0; bits <= zip_MAX_BITS; bits++) { zip_bl_count[bits] = 0; }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[zip_heap[zip_heap_max]].dl = 0; // root of the heap\n\n  for (h = zip_heap_max + 1; h < zip_HEAP_SIZE; h++) {\n    n = zip_heap[h];\n    bits = tree[tree[n].dl].dl + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n].dl = bits;\n    // We overwrite tree[n].dl which is no longer needed\n\n    if (n > max_code) { continue; } // not a leaf node\n\n    zip_bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) { xbits = extra[n - base]; }\n    f = tree[n].fc;\n    zip_opt_len += f * (bits + xbits);\n    if (stree != null) { zip_static_len += f * (stree[n].dl + xbits); }\n  }\n  if (overflow == 0) { return; }\n\n  // This happens for example on obj2 and pic of the Calgary corpus\n\n  // Find the first bit length which could increase:\n  do {\n    bits = max_length - 1;\n    while (zip_bl_count[bits] == 0) { bits--; }\n    zip_bl_count[bits]--;\t\t// move one leaf down the tree\n    zip_bl_count[bits + 1] += 2;\t// move one overflow item as its brother\n    zip_bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits != 0; bits--) {\n    n = zip_bl_count[bits];\n    while (n != 0) {\n      m = zip_heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m].dl != bits) {\n        zip_opt_len += (bits - tree[m].dl) * tree[m].fc;\n        tree[m].fc = bits;\n      }\n      n--;\n    }\n  }\n}\n\n/* ==========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction zip_gen_codes(tree,\t// the tree to decorate\n  max_code) {\t// largest code with non zero frequency\n  var next_code = new Array(zip_MAX_BITS + 1); // next code value for each bit length\n  var code = 0;\t\t// running code value\n  var bits;\t\t\t// bit index\n  var n;\t\t\t// code index\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= zip_MAX_BITS; bits++) {\n    code = ((code + zip_bl_count[bits - 1]) << 1);\n    next_code[bits] = code;\n  }\n\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //    Assert (code + encoder->bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //\t    \"inconsistent bit counts\");\n  //    Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0; n <= max_code; n++) {\n    var len = tree[n].dl;\n    if (len == 0) { continue; }\n    // Now reverse the bits\n    tree[n].fc = zip_bi_reverse(next_code[len]++, len);\n\n    //      Tracec(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //\t  n, (isgraph(n) ? n : ' '), len, tree[n].fc, next_code[len]-1));\n  }\n}\n\n/* ==========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction zip_build_tree(desc) { // the tree descriptor\n  var tree\t= desc.dyn_tree;\n  var stree\t= desc.static_tree;\n  var elems\t= desc.elems;\n  var n, m;\t\t// iterate over heap elements\n  var max_code = -1;\t// largest code with non zero frequency\n  var node = elems;\t// next internal node of the tree\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  zip_heap_len = 0;\n  zip_heap_max = zip_HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n].fc != 0) {\n      zip_heap[++zip_heap_len] = max_code = n;\n      zip_depth[n] = 0;\n    } else { tree[n].dl = 0; }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (zip_heap_len < 2) {\n    var xnew = zip_heap[++zip_heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[xnew].fc = 1;\n    zip_depth[xnew] = 0;\n    zip_opt_len--;\n    if (stree != null) { zip_static_len -= stree[xnew].dl; }\n    // new is 0 or 1 so it does not have extra bits\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = zip_heap_len >> 1; n >= 1; n--) { zip_pqdownheap(tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  do {\n    n = zip_heap[zip_SMALLEST];\n    zip_heap[zip_SMALLEST] = zip_heap[zip_heap_len--];\n    zip_pqdownheap(tree, zip_SMALLEST);\n\n    m = zip_heap[zip_SMALLEST];  // m = node of next least frequency\n\n    // keep the nodes sorted by frequency\n    zip_heap[--zip_heap_max] = n;\n    zip_heap[--zip_heap_max] = m;\n\n    // Create a new node father of n and m\n    tree[node].fc = tree[n].fc + tree[m].fc;\n    //\tdepth[node] = (char)(MAX(depth[n], depth[m]) + 1);\n    if (zip_depth[n] > zip_depth[m] + 1) { zip_depth[node] = zip_depth[n]; } else { zip_depth[node] = zip_depth[m] + 1; }\n    tree[n].dl = tree[m].dl = node;\n\n    // and insert the new node in the heap\n    zip_heap[zip_SMALLEST] = node++;\n    zip_pqdownheap(tree, zip_SMALLEST);\n\n  } while (zip_heap_len >= 2);\n\n  zip_heap[--zip_heap_max] = zip_heap[zip_SMALLEST];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  zip_gen_bitlen(desc);\n\n  // The field len is now set, we can generate the bit codes\n  zip_gen_codes(tree, max_code);\n}\n\n/* ==========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree. Updates opt_len to take into account the repeat\n * counts. (The contribution of the bit length codes will be added later\n * during the construction of bl_tree.)\n */\nfunction zip_scan_tree(tree, // the tree to be scanned\n  max_code) {  // and its largest code of non zero frequency\n  var n;\t\t\t// iterates over all tree elements\n  var prevlen = -1;\t\t// last emitted length\n  var curlen;\t\t\t// length of current code\n  var nextlen = tree[0].dl;\t// length of next code\n  var count = 0;\t\t// repeat count of the current code\n  var max_count = 7;\t\t// max repeat count\n  var min_count = 4;\t\t// min repeat count\n\n  if (nextlen == 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[max_code + 1].dl = 0xffff; // guard\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[n + 1].dl;\n    if (++count < max_count && curlen == nextlen) { continue; } else if (count < min_count) { zip_bl_tree[curlen].fc += count; } else if (curlen != 0) {\n      if (curlen != prevlen) { zip_bl_tree[curlen].fc++; }\n      zip_bl_tree[zip_REP_3_6].fc++;\n    } else if (count <= 10) { zip_bl_tree[zip_REPZ_3_10].fc++; } else { zip_bl_tree[zip_REPZ_11_138].fc++; }\n    count = 0; prevlen = curlen;\n    if (nextlen == 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen == nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n/* ==========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction zip_send_tree(tree, // the tree to be scanned\n  max_code) { // and its largest code of non zero frequency\n  var n;\t\t\t// iterates over all tree elements\n  var prevlen = -1;\t\t// last emitted length\n  var curlen;\t\t\t// length of current code\n  var nextlen = tree[0].dl;\t// length of next code\n  var count = 0;\t\t// repeat count of the current code\n  var max_count = 7;\t\t// max repeat count\n  var min_count = 4;\t\t// min repeat count\n\n  /* tree[max_code+1].dl = -1; */  /* guard already set */\n  if (nextlen == 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[n + 1].dl;\n    if (++count < max_count && curlen == nextlen) {\n      continue;\n    } else if (count < min_count) {\n      do { zip_SEND_CODE(curlen, zip_bl_tree); } while (--count != 0);\n    } else if (curlen != 0) {\n      if (curlen != prevlen) {\n        zip_SEND_CODE(curlen, zip_bl_tree);\n        count--;\n      }\n      // Assert(count >= 3 && count <= 6, \" 3_6?\");\n      zip_SEND_CODE(zip_REP_3_6, zip_bl_tree);\n      zip_send_bits(count - 3, 2);\n    } else if (count <= 10) {\n      zip_SEND_CODE(zip_REPZ_3_10, zip_bl_tree);\n      zip_send_bits(count - 3, 3);\n    } else {\n      zip_SEND_CODE(zip_REPZ_11_138, zip_bl_tree);\n      zip_send_bits(count - 11, 7);\n    }\n    count = 0;\n    prevlen = curlen;\n    if (nextlen == 0) {\n      max_count = 138;\n      min_count = 3;\n    } else if (curlen == nextlen) {\n      max_count = 6;\n      min_count = 3;\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n/* ==========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction zip_build_bl_tree() {\n  var max_blindex;  // index of last bit length code of non zero freq\n\n  // Determine the bit length frequencies for literal and distance trees\n  zip_scan_tree(zip_dyn_ltree, zip_l_desc.max_code);\n  zip_scan_tree(zip_dyn_dtree, zip_d_desc.max_code);\n\n  // Build the bit length tree:\n  zip_build_tree(zip_bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = zip_BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (zip_bl_tree[zip_bl_order[max_blindex]].dl != 0) break;\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  zip_opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //    Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //\t    encoder->opt_len, encoder->static_len));\n\n  return max_blindex;\n}\n\n/* ==========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction zip_send_all_trees(lcodes, dcodes, blcodes) { // number of codes for each tree\n  var rank; // index in bl_order\n\n  //    Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //    Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //\t    \"too many codes\");\n  //    Tracev((stderr, \"\\nbl counts: \"));\n  zip_send_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\n  zip_send_bits(dcodes - 1,   5);\n  zip_send_bits(blcodes - 4,  4); // not -3 as stated in appnote.txt\n  for (rank = 0; rank < blcodes; rank++) {\n    //      Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    zip_send_bits(zip_bl_tree[zip_bl_order[rank]].dl, 3);\n  }\n\n  // send the literal tree\n  zip_send_tree(zip_dyn_ltree, lcodes - 1);\n\n  // send the distance tree\n  zip_send_tree(zip_dyn_dtree, dcodes - 1);\n}\n\n/* ==========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction zip_flush_block(eof) { // true if this is the last block for a file\n  var opt_lenb, static_lenb; // opt_len and static_len in bytes\n  var max_blindex;\t// index of last bit length code of non zero freq\n  var stored_len;\t// length of input block\n\n  stored_len = zip_strstart - zip_block_start;\n  zip_flag_buf[zip_last_flags] = zip_flags; // Save the flags for the last 8 items\n\n  // Construct the literal and distance trees\n  zip_build_tree(zip_l_desc);\n  //    Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\",\n  //\t    encoder->opt_len, encoder->static_len));\n\n  zip_build_tree(zip_d_desc);\n  //    Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\",\n  //\t    encoder->opt_len, encoder->static_len));\n  /* At this point, opt_len and static_len are the total bit lengths of\n   * the compressed block data, excluding the tree representations.\n   */\n\n  /* Build the bit length tree for the above two trees, and get the index\n   * in bl_order of the last bit length code to send.\n   */\n  max_blindex = zip_build_bl_tree();\n\n  // Determine the best encoding. Compute first the block length in bytes\n  opt_lenb\t= (zip_opt_len   + 3 + 7) >> 3;\n  static_lenb = (zip_static_len + 3 + 7) >> 3;\n\n  //    Trace((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u dist %u \",\n  //\t   opt_lenb, encoder->opt_len,\n  //\t   static_lenb, encoder->static_len, stored_len,\n  //\t   encoder->last_lit, encoder->last_dist));\n\n  if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n  if (stored_len + 4 <= opt_lenb // 4: two words for the lengths\n    && zip_block_start >= 0) {\n    var i;\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    zip_send_bits((zip_STORED_BLOCK << 1) + eof, 3);  /* send block type */\n    zip_bi_windup();\t\t /* align on byte boundary */\n    zip_put_short(stored_len);\n    zip_put_short(~stored_len);\n\n    // copy block\n    /*\n      p = &window[block_start];\n      for(i = 0; i < stored_len; i++)\n  put_byte(p[i]);\n  */\n    for (i = 0; i < stored_len; i++) { zip_put_byte(zip_window[zip_block_start + i]); }\n\n  } else if (static_lenb == opt_lenb) {\n    zip_send_bits((zip_STATIC_TREES << 1) + eof, 3);\n    zip_compress_block(zip_static_ltree, zip_static_dtree);\n  } else {\n    zip_send_bits((zip_DYN_TREES << 1) + eof, 3);\n    zip_send_all_trees(zip_l_desc.max_code + 1,\n      zip_d_desc.max_code + 1,\n      max_blindex + 1);\n    zip_compress_block(zip_dyn_ltree, zip_dyn_dtree);\n  }\n\n  zip_init_block();\n\n  if (eof != 0) { zip_bi_windup(); }\n}\n\n/* ==========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction zip_ct_tally(\n  dist, // distance of matched string\n  lc) { // match length-MIN_MATCH or unmatched char (if dist==0)\n  zip_l_buf[zip_last_lit++] = lc;\n  if (dist == 0) {\n    // lc is the unmatched char\n    zip_dyn_ltree[lc].fc++;\n  } else {\n    // Here, lc is the match length - MIN_MATCH\n    dist--;\t\t    // dist = match distance - 1\n    //      Assert((ush)dist < (ush)MAX_DIST &&\n    //\t     (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //\t     (ush)D_CODE(dist) < (ush)D_CODES,  \"ct_tally: bad match\");\n\n    zip_dyn_ltree[zip_length_code[lc] + zip_LITERALS + 1].fc++;\n    zip_dyn_dtree[zip_D_CODE(dist)].fc++;\n\n    zip_d_buf[zip_last_dist++] = dist;\n    zip_flags |= zip_flag_bit;\n  }\n  zip_flag_bit <<= 1;\n\n  // Output the flags if they fill a byte\n  if ((zip_last_lit & 7) == 0) {\n    zip_flag_buf[zip_last_flags++] = zip_flags;\n    zip_flags = 0;\n    zip_flag_bit = 1;\n  }\n  // Try to guess if it is profitable to stop the current block here\n  if (zip_compr_level > 2 && (zip_last_lit & 0xfff) == 0) {\n    // Compute an upper bound for the compressed length\n    var out_length = zip_last_lit * 8;\n    var in_length = zip_strstart - zip_block_start;\n    var dcode;\n\n    for (dcode = 0; dcode < zip_D_CODES; dcode++) {\n      out_length += zip_dyn_dtree[dcode].fc * (5 + zip_extra_dbits[dcode]);\n    }\n    out_length >>= 3;\n    //      Trace((stderr,\"\\nlast_lit %u, last_dist %u, in %ld, out ~%ld(%ld%%) \",\n    //\t     encoder->last_lit, encoder->last_dist, in_length, out_length,\n    //\t     100L - out_length*100L/in_length));\n    if (zip_last_dist < parseInt(zip_last_lit / 2) &&\n      out_length < parseInt(in_length / 2)) { return true; }\n  }\n  return (zip_last_lit == zip_LIT_BUFSIZE - 1 ||\n    zip_last_dist == zip_DIST_BUFSIZE);\n  /* We avoid equality with LIT_BUFSIZE because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\n/* ==========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction zip_compress_block(\n  ltree,\t// literal tree\n  dtree) {\t// distance tree\n  var dist;\t\t// distance of matched string\n  var lc;\t\t// match length or unmatched char (if dist == 0)\n  var lx = 0;\t\t// running index in l_buf\n  var dx = 0;\t\t// running index in d_buf\n  var fx = 0;\t\t// running index in flag_buf\n  var flag = 0;\t// current flags\n  var code;\t\t// the code to send\n  var extra;\t\t// number of extra bits to send\n\n  if (zip_last_lit != 0) {\n    do {\n      if ((lx & 7) == 0) { flag = zip_flag_buf[fx++]; }\n      lc = zip_l_buf[lx++] & 0xff;\n      if ((flag & 1) == 0) {\n        zip_SEND_CODE(lc, ltree); /* send a literal byte */\n      //\tTracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n      // Here, lc is the match length - MIN_MATCH\n        code = zip_length_code[lc];\n        zip_SEND_CODE(code + zip_LITERALS + 1, ltree); // send the length code\n        extra = zip_extra_lbits[code];\n        if (extra != 0) {\n          lc -= zip_base_length[code];\n          zip_send_bits(lc, extra); // send the extra length bits\n        }\n        dist = zip_d_buf[dx++];\n        // Here, dist is the match distance - 1\n        code = zip_D_CODE(dist);\n        //\tAssert (code < D_CODES, \"bad d_code\");\n\n        zip_SEND_CODE(code, dtree);\t  // send the distance code\n        extra = zip_extra_dbits[code];\n        if (extra != 0) {\n          dist -= zip_base_dist[code];\n          zip_send_bits(dist, extra);   // send the extra distance bits\n        }\n      } // literal or match pair ?\n      flag >>= 1;\n    } while (lx < zip_last_lit);\n  }\n\n  zip_SEND_CODE(zip_END_BLOCK, ltree);\n}\n\n/* ==========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nvar zip_Buf_size = 16; // bit size of bi_buf\nfunction zip_send_bits(\n  value,\t// value to send\n  length) {\t// number of bits\n  /* If not enough room in bi_buf, use (valid) bits from bi_buf and\n   * (16 - bi_valid) bits from value, leaving (width - (16-bi_valid))\n   * unused bits in value.\n   */\n  if (zip_bi_valid > zip_Buf_size - length) {\n    zip_bi_buf |= (value << zip_bi_valid);\n    zip_put_short(zip_bi_buf);\n    zip_bi_buf = (value >> (zip_Buf_size - zip_bi_valid));\n    zip_bi_valid += length - zip_Buf_size;\n  } else {\n    zip_bi_buf |= value << zip_bi_valid;\n    zip_bi_valid += length;\n  }\n}\n\n/* ==========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction zip_bi_reverse(\n  code,\t// the value to invert\n  len) {\t// its bit length\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >> 1;\n}\n\n/* ==========================================================================\n * Write out any remaining bits in an incomplete byte.\n */\nfunction zip_bi_windup() {\n  if (zip_bi_valid > 8) {\n    zip_put_short(zip_bi_buf);\n  } else if (zip_bi_valid > 0) {\n    zip_put_byte(zip_bi_buf);\n  }\n  zip_bi_buf = 0;\n  zip_bi_valid = 0;\n}\n\nfunction zip_qoutbuf() {\n  if (zip_outcnt != 0) {\n    var q, i;\n    q = zip_new_queue();\n    if (zip_qhead == null) { zip_qhead = zip_qtail = q; } else { zip_qtail = zip_qtail.next = q; }\n    q.len = zip_outcnt - zip_outoff;\n    //      System.arraycopy(zip_outbuf, zip_outoff, q.ptr, 0, q.len);\n    for (i = 0; i < q.len; i++) { q.ptr[i] = zip_outbuf[zip_outoff + i]; }\n    zip_outcnt = zip_outoff = 0;\n  }\n}\n\nfunction zip_deflate(str, level) {\n  var out, buff;\n  var i, j;\n\n  zip_deflate_data = str;\n  zip_deflate_pos = 0;\n  if (typeof level === 'undefined') { level = zip_DEFAULT_LEVEL; }\n  zip_deflate_start(level);\n\n  buff = new Array(1024);\n  out = '';\n  while ((i = zip_deflate_internal(buff, 0, buff.length)) > 0) {\n    for (j = 0; j < i; j++) { out += String.fromCharCode(buff[j]); }\n  }\n  zip_deflate_data = null; // G.C.\n  return out;\n}\n\nfunction encode64(data) {\n  var r = '';\n  for (var i = 0; i < data.length; i += 3) {\n    if (i + 2 == data.length) {\n      r += append3bytes(data.charCodeAt(i), data.charCodeAt(i + 1), 0);\n    } else if (i + 1 == data.length) {\n      r += append3bytes(data.charCodeAt(i), 0, 0);\n    } else {\n      r += append3bytes(data.charCodeAt(i), data.charCodeAt(i + 1), data.charCodeAt(i + 2));\n    }\n  }\n  return r;\n}\n\nfunction append3bytes(b1, b2, b3) {\n  var c1 = b1 >> 2;\n  var c2 = ((b1 & 0x3) << 4) | (b2 >> 4);\n  var c3 = ((b2 & 0xF) << 2) | (b3 >> 6);\n  var c4 = b3 & 0x3F;\n  var r = '';\n  r += encode6bit(c1 & 0x3F);\n  r += encode6bit(c2 & 0x3F);\n  r += encode6bit(c3 & 0x3F);\n  r += encode6bit(c4 & 0x3F);\n  return r;\n}\n\nfunction encode6bit(b) {\n  if (b < 10) {\n    return String.fromCharCode(48 + b);\n  }\n  b -= 10;\n  if (b < 26) {\n    return String.fromCharCode(65 + b);\n  }\n  b -= 26;\n  if (b < 26) {\n    return String.fromCharCode(97 + b);\n  }\n  b -= 26;\n  if (b == 0) {\n    return '-';\n  }\n  if (b == 1) {\n    return '_';\n  }\n  return '?';\n}\n","'use strict'\n\nfunction slugify (x) {\n  return encodeURIComponent(String(x).trim().toLowerCase().replace(/\\s+/g, '-'))\n}\n\nfunction htmlencode (x) {\n/*\n  // safest, delegate task to native -- IMPORTANT: enabling this breaks both jest and runkit, but with browserify it's fine\n  if (document && document.createElement) {\n    const el = document.createElement(\"div\")\n    el.innerText = x\n    return el.innerHTML\n  }\n*/\n\n  return String(x)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\nfunction tocPlugin (md, options) {\n  options = Object.assign({}, {\n    placeholder: '(\\\\$\\\\{toc\\\\}|\\\\[\\\\[?_?toc_?\\\\]?\\\\]|\\\\$\\\\<toc(\\\\{[^}]*\\\\})\\\\>)',\n    slugify: slugify,\n    uniqueSlugStartIndex: 1,\n    containerClass: 'table-of-contents',\n    containerId: undefined,\n    listClass: undefined,\n    itemClass: undefined,\n    linkClass: undefined,\n    level: 1,\n    listType: 'ol',\n    format: undefined,\n    callback: undefined/* function(html, ast) {} */\n  }, options)\n\n  let ast\n  const pattern = new RegExp('^' + options.placeholder + '$', 'i')\n\n  function toc (state, startLine, endLine, silent) {\n    let token\n    const pos = state.bMarks[startLine] + state.tShift[startLine]\n    const max = state.eMarks[startLine]\n\n    // use whitespace as a line tokenizer and extract the first token\n    // to test against the placeholder anchored pattern, rejecting if false\n    const lineFirstToken = state.src.slice(pos, max).split(' ')[0]\n    if (!pattern.test(lineFirstToken)) return false\n\n    if (silent) return true\n\n    const matches = pattern.exec(lineFirstToken)\n    let inlineOptions = {}\n    if (matches !== null && matches.length === 3) {\n      try {\n        inlineOptions = JSON.parse(matches[2])\n      } catch (ex) {\n        // silently ignore inline options\n      }\n    }\n\n    state.line = startLine + 1\n\n    token = state.push('tocOpen', 'nav', 1)\n    token.markup = ''\n    token.map = [startLine, state.line]\n    token.inlineOptions = inlineOptions\n\n    token = state.push('tocBody', '', 0)\n    token.markup = ''\n    token.map = [startLine, state.line]\n    token.inlineOptions = inlineOptions\n    token.children = []\n\n    token = state.push('tocClose', 'nav', -1)\n    token.markup = ''\n\n    return true\n  }\n\n  md.renderer.rules.tocOpen = function (tokens, idx/* , options, env, renderer */) {\n    let _options = Object.assign({}, options)\n    if (tokens && idx >= 0) {\n      const token = tokens[idx]\n      _options = Object.assign(_options, token.inlineOptions)\n    }\n    const id = _options.containerId ? ` id=\"${htmlencode(_options.containerId)}\"` : ''\n    return `<nav${id} class=\"${htmlencode(_options.containerClass)}\">`\n  }\n\n  md.renderer.rules.tocClose = function (/* tokens, idx, options, env, renderer */) {\n    return '</nav>'\n  }\n\n  md.renderer.rules.tocBody = function (tokens, idx/* , options, env, renderer */) {\n    let _options = Object.assign({}, options)\n    if (tokens && idx >= 0) {\n      const token = tokens[idx]\n      _options = Object.assign(_options, token.inlineOptions)\n    }\n\n    const uniques = {}\n    function unique (s) {\n      let u = s\n      let i = _options.uniqueSlugStartIndex\n      while (Object.prototype.hasOwnProperty.call(uniques, u)) u = `${s}-${i++}`\n      uniques[u] = true\n      return u\n    }\n\n    const isLevelSelectedNumber = selection => level => level >= selection\n    const isLevelSelectedArray = selection => level => selection.includes(level)\n\n    const isLevelSelected = Array.isArray(_options.level)\n      ? isLevelSelectedArray(_options.level)\n      : isLevelSelectedNumber(_options.level)\n\n    function ast2html (tree) {\n      const listClass = _options.listClass ? ` class=\"${htmlencode(_options.listClass)}\"` : ''\n      const itemClass = _options.itemClass ? ` class=\"${htmlencode(_options.itemClass)}\"` : ''\n      const linkClass = _options.linkClass ? ` class=\"${htmlencode(_options.linkClass)}\"` : ''\n\n      if (tree.c.length === 0) return ''\n\n      let buffer = ''\n      if (tree.l === 0 || isLevelSelected(tree.l)) {\n        buffer += (`<${htmlencode(_options.listType) + listClass}>`)\n      }\n      tree.c.forEach(node => {\n        if (isLevelSelected(node.l)) {\n          buffer += (`<li${itemClass}><a${linkClass} href=\"#${unique(options.slugify(node.n))}\">${typeof _options.format === 'function' ? _options.format(node.n, htmlencode) : htmlencode(node.n)}</a>${ast2html(node)}</li>`)\n        } else {\n          buffer += ast2html(node)\n        }\n      })\n      if (tree.l === 0 || isLevelSelected(tree.l)) {\n        buffer += (`</${htmlencode(_options.listType)}>`)\n      }\n      return buffer\n    }\n\n    return ast2html(ast)\n  }\n\n  function headings2ast (tokens) {\n    const ast = { l: 0, n: '', c: [] }\n    const stack = [ast]\n\n    for (let i = 0, iK = tokens.length; i < iK; i++) {\n      const token = tokens[i]\n      if (token.type === 'heading_open') {\n        const key = (\n          tokens[i + 1]\n            .children\n            .filter(function (token) { return token.type === 'text' || token.type === 'code_inline' })\n            .reduce(function (s, t) { return s + t.content }, '')\n        )\n\n        const node = {\n          l: parseInt(token.tag.substr(1), 10),\n          n: key,\n          c: []\n        }\n\n        if (node.l > stack[0].l) {\n          stack[0].c.push(node)\n          stack.unshift(node)\n        } else if (node.l === stack[0].l) {\n          stack[1].c.push(node)\n          stack[0] = node\n        } else {\n          while (node.l <= stack[0].l) stack.shift()\n          stack[0].c.push(node)\n          stack.unshift(node)\n        }\n      }\n    }\n\n    return ast\n  }\n\n  md.core.ruler.push('generateTocAst', function (state) {\n    const tokens = state.tokens\n    ast = headings2ast(tokens)\n\n    if (typeof options.callback === 'function') {\n      options.callback(\n        md.renderer.rules.tocOpen() + md.renderer.rules.tocBody() + md.renderer.rules.tocClose(),\n        ast\n      )\n    }\n  })\n\n  md.block.ruler.before('heading', 'toc', toc, {\n    alt: ['paragraph', 'reference', 'blockquote']\n  })\n}\n\nexport default tocPlugin\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","// Process front matter and pass to cb\n'use strict';\n\nmodule.exports = function front_matter_plugin(md, cb) {\n  var min_markers = 3,\n      marker_str  = '-',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length;\n\n  function frontMatter(state, startLine, endLine, silent) {\n    var pos,\n        nextLine,\n        marker_count,\n        token,\n        old_parent,\n        old_line_max,\n        start_content,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character of the first line quickly,\n    // this should filter out non-front matter\n    if (startLine !== 0 || marker_char !== state.src.charCodeAt(0)) {\n      return false;\n    }\n\n    // Check out the rest of the marker string\n    // while pos <= 3\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        start_content = pos + 1;\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n\n    if (marker_count < min_markers) {\n      return false;\n    }\n    pos -= (pos - start) % marker_len;\n\n    // Since start is found, we can report success here in validation mode\n    if (silent) {\n      return true;\n    }\n\n    // Search for the end of the block\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      if (state.src.slice(start, max) === '...') {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) {\n        continue;\n      }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) {\n        continue;\n      }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        continue;\n      }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('front_matter', null, 0);\n    token.hidden = true;\n    token.markup = state.src.slice(startLine, pos);\n    token.block  = true;\n    token.map    = [ startLine, pos ];\n    token.meta   = state.src.slice(start_content, start - 1);\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    cb(token.meta);\n\n    return true;\n  }\n\n  md.block.ruler.before(\n    'table',\n    'front_matter',\n    frontMatter,\n    {\n      alt: [\n        'paragraph',\n        'reference',\n        'blockquote',\n        'list' \n      ]\n    }\n  );\n};\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar rendererRule = exports.rendererRule = function rendererRule(tokens, idx, options) {\n  return options.replace(tokens[idx].content);\n};\n\nvar coreRuler = exports.coreRuler = function coreRuler(state, options) {\n  for (var i = 0; i < state.tokens.length; i++) {\n    if (state.tokens[i].type !== 'inline') {\n      continue;\n    }\n    var tokens = state.tokens[i].children;\n    for (var j = tokens.length - 1; j >= 0; j--) {\n      var token = tokens[j];\n      if (token.type === 'text' && options.regex.test(token.content)) {\n        var newTokens = token.content.split(options.regex).map(function (item, index) {\n          return { type: index % 2 === 0 ? 'text' : options.name, content: item };\n        }).filter(function (item) {\n          return item.content.length > 0;\n        }).map(function (item) {\n          var newToken = new state.Token(item.type, '', 0);\n          newToken.content = item.content;\n          return newToken;\n        });\n        state.tokens[i].children = tokens = [].concat(_toConsumableArray(tokens.slice(0, j)), _toConsumableArray(newTokens), _toConsumableArray(tokens.slice(j + 1)));\n      }\n    }\n  }\n};\n\nvar regexPlugin = function regexPlugin(md, options) {\n  md.renderer.rules[options.name] = function (tokens, idx) {\n    return rendererRule(tokens, idx, options);\n  };\n\n  md.core.ruler.push(options.name, function (state) {\n    coreRuler(state, options);\n  });\n};\n\nexports.default = regexPlugin;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d1a0c903c89c60b9ef4","export const rendererRule = (tokens, idx, options) => {\n  return options.replace(tokens[idx].content)\n}\n\nexport const coreRuler = (state, options) => {\n  for (let i = 0; i < state.tokens.length; i++) {\n    if (state.tokens[i].type !== 'inline') {\n      continue\n    }\n    let tokens = state.tokens[i].children\n    for (let j = tokens.length - 1; j >= 0; j--) {\n      let token = tokens[j]\n      if (token.type === 'text' && options.regex.test(token.content)) {\n        const newTokens = token.content.split(options.regex)\n          .map((item, index) => ({ type: (index % 2 === 0 ? 'text' : options.name), content: item }))\n          .filter((item) => item.content.length > 0)\n          .map((item) => {\n            const newToken = new state.Token(item.type, '', 0)\n            newToken.content = item.content\n            return newToken\n          })\n        state.tokens[i].children = tokens = [...tokens.slice(0, j), ...newTokens, ...tokens.slice(j + 1)]\n      }\n    }\n  }\n}\n\nconst regexPlugin = (md, options) => {\n  md.renderer.rules[options.name] = (tokens, idx) => {\n    return rendererRule(tokens, idx, options)\n  }\n\n  md.core.ruler.push(options.name, (state) => {\n    coreRuler(state, options)\n  })\n}\n\nexport default regexPlugin\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","import { useRef, useState, useEffect, useMemo, useCallback } from 'react';\n\n// This of course could've been more streamlined with internal state instead of\n// refs, but then host hooks / components could not opt out of renders.\n// This could've been exported to its own module, but the current build doesn't\n// seem to work with module imports and I had no more time to spend on this...\nfunction useResolvedElement(subscriber, refOrElement) {\n  var _ref;\n\n  // The default ref has to be non-conditionally declared here whether or not\n  // it'll be used as that's how hooks work.\n  // @see https://reactjs.org/docs/hooks-rules.html#explanation\n  var ref = null; // Default ref\n\n  var refElement = useRef(null);\n  var callbackRefElement = useRef(null);\n  var refCallback = useCallback(function (element) {\n    callbackRefElement.current = element;\n    callSubscriber();\n  }, []);\n  var lastReportedElementRef = useRef(null);\n  var cleanupRef = useRef();\n\n  var callSubscriber = function callSubscriber() {\n    var element = null;\n\n    if (callbackRefElement.current) {\n      element = callbackRefElement.current;\n    } else if (refElement.current) {\n      element = refElement.current;\n    } else if (refOrElement instanceof HTMLElement) {\n      element = refOrElement;\n    }\n\n    if (lastReportedElementRef.current === element) {\n      return;\n    }\n\n    if (cleanupRef.current) {\n      cleanupRef.current(); // Making sure the cleanup is not called accidentally multiple times.\n\n      cleanupRef.current = null;\n    }\n\n    lastReportedElementRef.current = element; // Only calling the subscriber, if there's an actual element to report.\n\n    if (element) {\n      cleanupRef.current = subscriber(element);\n    }\n  };\n\n  if (refOrElement && !(refOrElement instanceof HTMLElement)) {\n    // Overriding the default ref with the given one\n    ref = refOrElement;\n  } // On each render, we check whether a ref changed, or if we got a new raw\n  // element.\n\n\n  useEffect(function () {\n    // Note that this does not mean that \"element\" will necessarily be whatever\n    // the ref currently holds. It'll simply \"update\" `element` each render to\n    // the current ref value, but there's no guarantee that the ref value will\n    // not change later without a render.\n    // This may or may not be a problem depending on the specific use case.\n    if (ref) {\n      refElement.current = ref.current;\n    }\n\n    callSubscriber();\n  }, [ref, (_ref = ref) == null ? void 0 : _ref.current, refOrElement]);\n  return refCallback;\n}\n\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver\n  var onResize = opts.onResize;\n  var onResizeRef = useRef(undefined);\n  onResizeRef.current = onResize; // Using a single instance throughout the hook's lifetime\n\n  var resizeObserverRef = useRef();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      size = _useState[0],\n      setSize = _useState[1]; // In certain edge cases the RO might want to report a size change just after\n  // the component unmounted.\n\n\n  var didUnmount = useRef(false);\n  useEffect(function () {\n    return function () {\n      didUnmount.current = true;\n    };\n  }, []); // Using a ref to track the previous width / height to avoid unnecessary renders\n\n  var previous = useRef({\n    width: undefined,\n    height: undefined\n  }); // This block is kinda like a useEffect, only it's called whenever a new\n  // element could be resolved based on the ref option. It also has a cleanup\n  // function.\n\n  var refCallback = useResolvedElement(function (element) {\n    // Initialising the RO instance\n    if (!resizeObserverRef.current) {\n      // Saving a single instance, used by the hook from this point on.\n      resizeObserverRef.current = new ResizeObserver(function (entries) {\n        if (!Array.isArray(entries)) {\n          return;\n        } // Since we only observe the one element, we don't need to loop over the\n        // array\n\n\n        if (!entries.length) {\n          return;\n        }\n\n        var entry = entries[0]; // `Math.round` is in line with how CSS resolves sub-pixel values\n\n        var newWidth = Math.round(entry.contentRect.width);\n        var newHeight = Math.round(entry.contentRect.height);\n\n        if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n          var newSize = {\n            width: newWidth,\n            height: newHeight\n          };\n\n          if (onResizeRef.current) {\n            onResizeRef.current(newSize);\n          } else {\n            previous.current.width = newWidth;\n            previous.current.height = newHeight;\n\n            if (!didUnmount.current) {\n              setSize(newSize);\n            }\n          }\n        }\n      });\n    }\n\n    resizeObserverRef.current.observe(element);\n    return function () {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.unobserve(element);\n      }\n    };\n  }, opts.ref);\n  return useMemo(function () {\n    return {\n      ref: refCallback,\n      width: size.width,\n      height: size.height\n    };\n  }, [refCallback, size ? size.width : null, size ? size.height : null]);\n}\n\nexport default useResizeObserver;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nmodule.exports = [\n  'bmp',\n  'gif',\n  'jpg',\n  'png',\n  'tiff',\n];\n","'use strict';\n\nfunction isBMP (buffer) {\n  return ('BM' === buffer.toString('ascii', 0, 2));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32LE(18),\n    'height': buffer.readUInt32LE(22)\n  };\n}\n\nmodule.exports = {\n  'detect': isBMP,\n  'calculate': calculate\n};\n","'use strict';\n\nvar gifRegexp = /^GIF8[7,9]a/;\nfunction isGIF (buffer) {\n  var signature = buffer.toString('ascii', 0, 6);\n  return (gifRegexp.test(signature));\n}\n\nfunction calculate(buffer) {\n  return {\n    'width': buffer.readUInt16LE(6),\n    'height': buffer.readUInt16LE(8)\n  };\n}\n\nmodule.exports = {\n  'detect': isGIF,\n  'calculate': calculate\n};","'use strict';\n\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\n\n// TO-DO: handle all JFIFs\nvar validJFIFMarkers = {\n  'ffdb': '0001010101', // Samsung D807 JPEG\n  'ffe0': '4a46494600', // Standard JPEG\n  'ffe1': '4578696600', // Camera JPEG, with EXIF data\n  'ffe2': '4943435f50', // Canon EOS-1D JPEG\n  'ffe3': '',           // Samsung D500 JPEG\n  'ffe8': '5350494646', // SPIFF JPEG\n  'ffec': '4475636b79', // Photoshop JPEG\n  'ffed': '50686f746f', // Adobe JPEG, Photoshop CMYK buffer\n  'ffee': '41646f6265'  // Adobe JPEG, Unrecognised (Lightroom??)\n};\n\nvar red = ['\\x1B[31m', '\\x1B[39m'];\nfunction isJPG (buffer) { //, filepath\n  var SOIMarker = buffer.toString('hex', 0, 2);\n  var JFIFMarker = buffer.toString('hex', 2, 4);\n\n  // not a valid jpeg\n  if ('ffd8' !== SOIMarker) {\n    return false;\n  }\n\n  // TO-DO: validate the end-bytes of a jpeg file\n  // use filepath, get the last bytes, check for ffd9\n  var got = buffer.toString('hex', 6, 11);\n  var expected = JFIFMarker && validJFIFMarkers[JFIFMarker];\n  if (expected === '') {\n    console.warn(\n      red[0] +\n      'this looks like a unrecognised jpeg\\n' +\n      'please report the issue here\\n' +\n      red[1],\n      '\\thttps://github.com/netroy/image-size/issues/new\\n'\n    );\n    return false;\n  }\n  return (got === expected) || (JFIFMarker === 'ffdb');\n}\n\nfunction extractSize (buffer, i) {\n  return {\n    'height' : buffer.readUInt16BE(i),\n    'width' : buffer.readUInt16BE(i + 2)\n  };\n}\n\nfunction validateBuffer (buffer, i) {\n  // index should be within buffer limits\n  if (i > buffer.length) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (buffer[i] !== 0xFF) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n}\n\nfunction calculate (buffer) {\n\n  // Skip 5 chars, they are for signature\n  buffer = buffer.slice(4);\n\n  var i, next;\n  while (buffer.length) {\n    // read length of the next block\n    i = buffer.readUInt16BE(0);\n\n    // ensure correct format\n    validateBuffer(buffer, i);\n\n    // 0xFFC0 is baseline(SOF)\n    // 0xFFC2 is progressive(SOF2)\n    next = buffer[i + 1];\n    if (next === 0xC0 || next === 0xC2) {\n      return extractSize(buffer, i + 5);\n    }\n\n    // move to the next block\n    buffer = buffer.slice(i + 2);\n  }\n\n  throw new TypeError('Invalid JPG, no size found');\n}\n\nmodule.exports = {\n  'detect': isJPG,\n  'calculate': calculate\n};\n","'use strict';\n\nvar pngSignature = 'PNG\\r\\n\\x1a\\n';\nfunction isPNG (buffer) {\n  if (pngSignature === buffer.toString('ascii', 1, 8)) {\n    if ('IHDR' !== buffer.toString('ascii', 12, 16)) {\n      throw new TypeError('invalid png');\n    }\n    return true;\n  }\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(16),\n    'height': buffer.readUInt32BE(20)\n  };\n}\n\nmodule.exports = {\n  'detect': isPNG,\n  'calculate': calculate\n};\n","'use strict';\n\nfunction isPSD (buffer) {\n  return ('8BPS' === buffer.toString('ascii', 0, 4));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(18),\n    'height': buffer.readUInt32BE(14)\n  };\n}\n\nmodule.exports = {\n  'detect': isPSD,\n  'calculate': calculate\n};\n","'use strict';\n\nvar svgReg = /<svg[^>]+[^>]*>/;\nfunction isSVG (buffer) {\n  return svgReg.test(buffer);\n}\n\nvar extractorRegExps = {\n  'root': /<svg [^>]+>/,\n  'width': /(^|\\s)width\\s*=\\s*\"(.+?)\"/i,\n  'height': /(^|\\s)height\\s*=\\s*\"(.+?)\"/i,\n  'viewbox': /(^|\\s)viewbox\\s*=\\s*\"(.+?)\"/i\n};\n\nfunction getRatio (viewbox) {\n  var ratio = 1;\n  if (viewbox && viewbox[2]) {\n    var dim = viewbox[2].split(/\\s/g);\n    if (dim.length === 4) {\n      dim = dim.map(function (i) {\n        return parseInt(i, 10);\n      });\n      ratio = (dim[2] - dim[0]) / (dim[3] - dim[1]);\n    }\n  }\n  return ratio;\n}\n\nfunction parse (buffer) {\n  var body = buffer.toString().replace(/[\\r\\n\\s]+/g, ' ');\n  var section = body.match(extractorRegExps.root);\n  var root = section && section[0];\n  if (root) {\n    var width = root.match(extractorRegExps.width);\n    var height = root.match(extractorRegExps.height);\n    var viewbox = root.match(extractorRegExps.viewbox);\n    var ratio = getRatio(viewbox);\n    return {\n      'width': parseInt(width && width[2], 10) || 0,\n      'height': parseInt(height && height[2], 10) || 0,\n      'ratio': ratio\n    };\n  }\n}\n\nfunction calculate (buffer) {\n\n  var parsed = parse(buffer);\n  var width = parsed.width;\n  var height = parsed.height;\n  var ratio = parsed.ratio;\n\n  if (width && height) {\n    return { 'width': width, 'height': height };\n  } else {\n    if (width) {\n      return { 'width': width, 'height': Math.floor(width / ratio) };\n    } else if (height) {\n      return { 'width': Math.floor(height * ratio), 'height': height };\n    } else {\n      throw new TypeError('invalid svg');\n    }\n  }\n}\n\nmodule.exports = {\n  'detect': isSVG,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\n\nvar fs = require('fs');\nvar readUInt = require('../readUInt');\n\nfunction isTIFF (buffer) {\n  var hex4 = buffer.toString('hex', 0, 4);\n  return ('49492a00' === hex4 || '4d4d002a' === hex4);\n}\n\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD (buffer, filepath, isBigEndian) {\n\n  var ifdOffset = readUInt(buffer, 32, 4, isBigEndian);\n\n  // read only till the end of the file\n  var bufferSize = 1024;\n  var fileSize = fs.statSync(filepath).size;\n  if (ifdOffset + bufferSize > fileSize) {\n    bufferSize = fileSize - ifdOffset - 10;\n  }\n\n  // populate the buffer\n  var endBuffer = new Buffer(bufferSize);\n  var descriptor = fs.openSync(filepath, 'r');\n  fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n\n  // var ifdLength = readUInt(endBuffer, 16, 0, isBigEndian);\n  var ifdBuffer = endBuffer.slice(2); //, 2 + 12 * ifdLength);\n  return ifdBuffer;\n}\n\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue (buffer, isBigEndian) {\n  var low = readUInt(buffer, 16, 8, isBigEndian);\n  var high = readUInt(buffer, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\n\n// move to the next tag\nfunction nextTag (buffer) {\n  if (buffer.length > 24) {\n    return buffer.slice(12);\n  }\n}\n\n// Extract IFD tags from TIFF metadata\nfunction extractTags (buffer, isBigEndian) {\n  var tags = {};\n  var code, type, length;\n\n  while (buffer && buffer.length) {\n    code = readUInt(buffer, 16, 0, isBigEndian);\n    type = readUInt(buffer, 16, 2, isBigEndian);\n    length = readUInt(buffer, 32, 4, isBigEndian);\n\n    // 0 means end of IFD\n    if (code === 0) {\n      break;\n    } else {\n      // 256 is width, 257 is height\n      // if (code === 256 || code === 257) {\n      if (length === 1 && type === 3) {\n        tags[code] = readValue(buffer, isBigEndian);\n      }\n\n      // move to the next tag\n      buffer = nextTag(buffer);\n    }\n  }\n  return tags;\n}\n\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness (buffer) {\n  var signature = buffer.toString('ascii', 0, 2);\n  if ('II' === signature) {\n    return 'LE';\n  } else if ('MM' === signature) {\n    return 'BE';\n  }\n}\n\nfunction calculate (buffer, filepath) {\n\n  if (!filepath) {\n    throw new TypeError('Tiff doesn\\'t support buffer');\n  }\n\n  // Determine BE/LE\n  var isBigEndian = determineEndianness(buffer) === 'BE';\n\n  // read the IFD\n  var ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n\n  // extract the tags from the IFD\n  var tags = extractTags(ifdBuffer, isBigEndian);\n\n  var width = tags[256];\n  var height = tags[257];\n\n  if (!width || !height) {\n    throw new TypeError('Invalid Tiff, missing tags');\n  }\n\n  return {\n    'width': width,\n    'height': height\n  };\n}\n\nmodule.exports = {\n  'detect': isTIFF,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.Diff = {}));\n}(this, (function (exports) { 'use strict';\n\n  function Diff() {}\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            // This should not happen, but we want to be safe.\n\n            /* istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  }\n\n  //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080–00FF\n  //  - U+00D7  × Multiplication sign\n  //  - U+00F7  ÷ Division sign\n  // Latin Extended-A, 0100–017F\n  // Latin Extended-B, 0180–024F\n  // IPA Extensions, 0250–02AF\n  // Spacing Modifier Letters, 02B0–02FF\n  //  - U+02C7  ˇ &#711;  Caron\n  //  - U+02D8  ˘ &#728;  Breve\n  //  - U+02D9  ˙ &#729;  Dot Above\n  //  - U+02DA  ˚ &#730;  Ring Above\n  //  - U+02DB  ˛ &#731;  Ogonek\n  //  - U+02DC  ˜ &#732;  Small Tilde\n  //  - U+02DD  ˝ &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00–1EFF\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    // All whitespace symbols except newline group into one token, each newline - in separate token\n    var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n        newStart: +chunkHeader[3],\n        newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n        lines: [],\n        linedelimiters: []\n      }; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart += 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart += 1;\n      }\n\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  }\n\n  // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n  function distanceIterator (start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange;\n\n        // If we have previous context, start with that\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2;\n\n            // Overlapping\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3;\n\n            // end the range and output\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                // however, if the old file is empty, do not output the no-nl line\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n  function formatPatch(diff) {\n    var ret = [];\n\n    if (diff.oldFileName == diff.newFileName) {\n      ret.push('Index: ' + diff.oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart -= 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart -= 1;\n      }\n\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n  }\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines;\n\n        // Mine inserted\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2;\n\n        // Theirs inserted\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  }\n\n  // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n\n  exports.Diff = Diff;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.canonicalize = canonicalize;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.createPatch = createPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.diffArrays = diffArrays;\n  exports.diffChars = diffChars;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffLines = diffLines;\n  exports.diffSentences = diffSentences;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.merge = merge;\n  exports.parsePatch = parsePatch;\n  exports.structuredPatch = structuredPatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n",";(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n  } else {\n    root.markdownitMathjax = factory()\n  }\n})(this, function () {\n  function math (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x5C /* \\ */) {\n      return false\n    }\n    var match = state.src.slice(++startMathPos).match(/^(?:\\\\\\[|\\\\\\(|begin\\{([^}]*)\\})/)\n    if (!match) {\n      return false\n    }\n    startMathPos += match[0].length\n    var type, endMarker, includeMarkers\n    if (match[0] === '\\\\[') {\n      type = 'display_math'\n      endMarker = '\\\\\\\\]'\n    } else if (match[0] === '\\\\(') {\n      type = 'inline_math'\n      endMarker = '\\\\\\\\)'\n    } else if (match[1]) {\n      type = 'math'\n      endMarker = '\\\\end{' + match[1] + '}'\n      includeMarkers = true\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (!silent) {\n      var token = state.push(type, '', 0)\n      token.content = includeMarkers\n        ? state.src.slice(state.pos, nextPos)\n        : state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function texMath (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x24 /* $ */) {\n      return false\n    }\n\n    // Parse tex math according to http://pandoc.org/README.html#math\n    var endMarker = '$'\n    var afterStartMarker = state.src.charCodeAt(++startMathPos)\n    if (afterStartMarker === 0x24 /* $ */) {\n      endMarker = '$$'\n      if (state.src.charCodeAt(++startMathPos) === 0x24 /* $ */) {\n        // 3 markers are too much\n        return false\n      }\n    } else {\n      // Skip if opening $ is succeeded by a space character\n      if (afterStartMarker === 0x20 /* space */ || afterStartMarker === 0x09 /* \\t */ || afterStartMarker === 0x0a /* \\n */) {\n        return false\n      }\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    if (state.src.charCodeAt(endMarkerPos - 1) === 0x5C /* \\ */) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (endMarker.length === 1) {\n      // Skip if $ is preceded by a space character\n      var beforeEndMarker = state.src.charCodeAt(endMarkerPos - 1)\n      if (beforeEndMarker === 0x20 /* space */ || beforeEndMarker === 0x09 /* \\t */ || beforeEndMarker === 0x0a /* \\n */) {\n        return false\n      }\n      // Skip if closing $ is succeeded by a digit (eg $5 $10 ...)\n      var suffix = state.src.charCodeAt(nextPos)\n      if (suffix >= 0x30 && suffix < 0x3A) {\n        return false\n      }\n    }\n\n    if (!silent) {\n      var token = state.push(endMarker.length === 1 ? 'inline_math' : 'display_math', '', 0)\n      token.content = state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function escapeHtml (html) {\n    return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ')\n  }\n\n  function extend (options, defaults) {\n    return Object.keys(defaults).reduce(function (result, key) {\n      if (result[key] === undefined) {\n        result[key] = defaults[key]\n      }\n      return result\n    }, options)\n  }\n\n  var mapping = {\n    'math': 'Math',\n    'inline_math': 'InlineMath',\n    'display_math': 'DisplayMath'\n  }\n\n  return function (options) {\n    var defaults = {\n      beforeMath: '',\n      afterMath: '',\n      beforeInlineMath: '\\\\(',\n      afterInlineMath: '\\\\)',\n      beforeDisplayMath: '\\\\[',\n      afterDisplayMath: '\\\\]'\n    }\n    options = extend(options || {}, defaults)\n\n    return function (md) {\n      md.inline.ruler.before('escape', 'math', math)\n      md.inline.ruler.push('texMath', texMath)\n\n      Object.keys(mapping).forEach(function (key) {\n        var before = options['before' + mapping[key]]\n        var after = options['after' + mapping[key]]\n        md.renderer.rules[key] = function (tokens, idx) {\n          return before + escapeHtml(tokens[idx].content) + after\n        }\n      })\n    }\n  }\n})\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"sourceRoot":""}